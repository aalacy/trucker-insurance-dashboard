{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoDrivers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoDrivers.vue","mtime":1563274419123},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nexport default {\n  name: \"AccountInfoDrivers\",\n  components: {\n    AccountInfoDriversItem: function AccountInfoDriversItem() {\n      return import(\"./AccountInfoDriversItem.vue\");\n    },\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      showmodel: false,\n      drivers: [],\n      loading: false,\n      error: null,\n      save: true\n    };\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n    } else {\n      this.save = true;\n    }\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var driverForms, allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setDataFromForms();\n                driverForms = this.$refs.driverForm;\n\n                if (driverForms.length) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                allFormAreValid = driverForms.every(function (formRef) {\n                  return formRef.validateForm();\n                });\n\n                if (allFormAreValid) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 9;\n                _context.next = 12;\n                return API.post(\"company/save\", {\n                  key: \"drivers\",\n                  val: this.drivers.map(function (d) {\n                    var driver = _objectSpread({}, d);\n\n                    delete driver._uuid;\n                    return driver;\n                  }),\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 12:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (this.showmodel) {\n                    this.showmodel = false;\n                  } else {\n                    this.showmodel = true;\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](9);\n                console.error(_context.t0); // this.showmodel = true;\n\n                this.error = _context.t0.message;\n\n              case 20:\n                _context.prev = 20;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 16, 20, 23]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    addForm: function addForm() {\n      this.drivers.push({\n        _uuid: uuidv4()\n      });\n      this.error = null;\n    },\n    removeForm: function removeForm(index) {\n      this.drivers.splice(index, 1);\n\n      if (!this.drivers.length) {\n        this.error = \"Please add at least one driver\";\n      }\n    },\n    updateHint: function updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, drivers;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  drivers = data.data.drivers;\n\n                  if (drivers && drivers.length) {\n                    this.drivers = drivers.map(function (d) {\n                      return _objectSpread({}, d, {\n                        _uuid: uuidv4()\n                      });\n                    });\n                  } else {\n                    this.addForm();\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false;\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    setDataFromForms: function setDataFromForms() {\n      var drivers = [];\n      this.$refs.driverForm.forEach(function (formRef) {\n        var formData = formRef.getFormData();\n        drivers.push(formData);\n      });\n      this.drivers = drivers;\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var driverForms, allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setDataFromForms();\n                driverForms = this.$refs.driverForm;\n\n                if (driverForms.length) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                allFormAreValid = driverForms.every(function (formRef) {\n                  return formRef.validateForm();\n                });\n\n                if (allFormAreValid) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.loading = true;\n                this.error = null;\n                _context3.prev = 9;\n                _context3.next = 12;\n                return API.post(\"company/save\", {\n                  key: \"drivers\",\n                  val: this.drivers.map(function (d) {\n                    var driver = _objectSpread({}, d);\n\n                    delete driver._uuid;\n                    return driver;\n                  }),\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 12:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context3.next = 20;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](9);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 20:\n                _context3.prev = 20;\n                this.loading = false;\n                return _context3.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[9, 16, 20, 23]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",null]}