{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue","mtime":1563454288196},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AccountInfoPersonalInfo\",\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n\n  beforeMount() {\n    // console.log(\"beforeMount\");\n    localStorage.setItem(\"usdot\", \"\");\n  },\n\n  mounted() {\n    this.formData.USDOT = localStorage.getItem(\"usdot\");\n    this.formData.company = localStorage.getItem(\"company\");\n    this.formData.address = localStorage.getItem([\"Mailing address\"]); // [this.formData.dobD, this.formData.dobM, this.formData.dobY] = b.dateOfBirth.split('/');\n\n    let x = localStorage.getItem(\"Mailing address\"); // this.formData.zip = x.split(',')\n\n    this.formData.address1 = localStorage.getItem([\"Physical address\"]);\n    this.formData.phone = localStorage.getItem(\"Phone\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch(\"loadData\", this.uuid);\n      let a = this.$store.state.getData.data[2];\n      console.log(\"aaaa\", a);\n      let b = JSON.parse(a.val);\n      this.formData.address = b.address;\n      this.formData.city = b.city;\n      this.formData.zip = b.zip;\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      this.formData.state = b.state;\n      this.formData.address1 = b.address1;\n      this.formData.city1 = b.city1;\n      this.formData.zip1 = b.zip1;\n      this.formData.state1 = b.state1;\n    } else {\n      this.save = true;\n      console.log(\"not logged in\");\n    }\n  },\n\n  beforeMount() {},\n\n  computed: _objectSpread({}, mapState([\"data\"])),\n\n  data() {\n    return {\n      checked: true,\n      showmodel: false,\n      save: true,\n      uuid: \"\",\n      formData: {\n        // firstName: \"\",\n        // lastName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        USDOT: \"\",\n        company: \"\",\n        phone: \"\",\n        address1: \"\",\n        city1: \"\",\n        state1: \"\",\n        zip1: \"\"\n      },\n      rules: {\n        // firstName: [required],\n        // lastName: [required],\n        address: [required],\n        city: [required],\n        state: [required],\n        zip: [required],\n        address1: [required],\n        city1: [required],\n        state1: [required],\n        zip1: [required]\n      },\n      formErrors: {},\n      hints: {\n        address: \"Another hint\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n    this.uuid = localStorage.getItem(\"uuid\"); // console.log(\"be\",this.uuid)\n    // console.log(\"mount api\",JSON.parse(this.data.data[0].val).businessType)\n  },\n\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n\n  methods: {\n    show() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        let formIsValid = _this.validateForm();\n\n        if (!formIsValid) {\n          return;\n        }\n\n        _this.loading = true;\n        _this.error = null;\n\n        try {\n          let data = yield API.post(\"company/save\", {\n            key: \"personalInfo\",\n            val: _this.formData,\n            userId: localStorage.getItem(\"userId\"),\n            uuid: localStorage.getItem(\"uuid\")\n          });\n          console.log(\"this.formData per\", _this.formData);\n\n          if (data.status === \"OK\") {\n            if (_this.showmodel) {\n              _this.showmodel = false;\n            } else {\n              _this.showmodel = true;\n            }\n          } else if (data.status === \"ERROR\") {\n            _this.showmodel = true;\n            _this.error = data.messages[0] || data.data;\n          }\n        } catch (err) {\n          console.error(err); // this.showmodel = true;\n\n          _this.error = err.message;\n        } finally {\n          // this.showmodel = true;\n          _this.loading = false;\n        }\n      })();\n    },\n\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n\n    loadCompany() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.loading = false;\n        _this2.error = null;\n\n        try {\n          let data = yield API.get(\"company/current\");\n          _this2.uuid = data.data.b;\n          localStorage.setItem(\"uuid\", data.data.b);\n\n          if (data.status === \"OK\") {\n            let personalInfo = data.data.personalInfo;\n\n            if (personalInfo) {\n              _this2.formData = _objectSpread({}, _this2.formData, personalInfo);\n            }\n          } else if (data.status === \"ERROR\") {// this.$router.replace({ name: \"Home\" });\n          }\n        } catch (err) {\n          console.error(err);\n          _this2.error = err.message;\n        } finally {\n          _this2.loading = false;\n        }\n      })();\n    },\n\n    updateCompany() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        let formIsValid = _this3.validateForm();\n\n        if (!formIsValid) {\n          return;\n        }\n\n        _this3.loading = true;\n        _this3.error = null;\n\n        try {\n          let data = yield API.post(\"company/save\", {\n            key: \"personalInfo\",\n            val: _this3.formData,\n            userId: localStorage.getItem(\"userId\"),\n            uuid: localStorage.getItem(\"uuid\")\n          }); // console.log(localStorage.getItem(\"userId\"))\n          // console.log(localStorage.getItem(\"uuid\"))\n\n          if (data.status === \"OK\") {\n            _this3.goNextForm();\n          } else if (data.status === \"ERROR\") {\n            // console.log(\"data\",data)\n            _this3.error = data.messages[0] || data.data;\n          }\n        } catch (err) {\n          // console.error(err);\n          _this3.error = err.message;\n        } finally {\n          _this3.loading = false;\n        }\n      })();\n    }\n\n  }\n};",null]}