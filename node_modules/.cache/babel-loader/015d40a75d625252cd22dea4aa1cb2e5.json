{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoOwnersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoOwnersItem.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from '../validators.js';\nexport default {\n  name: 'AccountInfoOwnersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    owner: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      formData: {\n        firstName: '',\n        lastName: '',\n        dobM: '',\n        dobD: '',\n        dobY: '',\n        address: '',\n        state: ''\n      },\n      rules: {\n        firstName: [required],\n        lastName: [required],\n        dobM: [required],\n        dobD: [required],\n        dobY: [required],\n        address: [required],\n        state: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    dateOfBirth: function dateOfBirth() {\n      var _this$formData = this.formData,\n          m = _this$formData.dobM,\n          d = _this$formData.dobD,\n          y = _this$formData.dobY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  },\n  created: function created() {\n    var dobM = '',\n        dobD = '',\n        dobY = '';\n\n    if (this.owner.dateOfBirth) {\n      var _this$owner$dateOfBir = this.owner.dateOfBirth.split('/');\n\n      var _this$owner$dateOfBir2 = _slicedToArray(_this$owner$dateOfBir, 3);\n\n      dobM = _this$owner$dateOfBir2[0];\n      dobD = _this$owner$dateOfBir2[1];\n      dobY = _this$owner$dateOfBir2[2];\n    }\n\n    this.formData = _objectSpread({}, this.formData, this.owner, {\n      dobM: dobM,\n      dobD: dobD,\n      dobY: dobY\n    });\n  },\n  methods: {\n    getFormData: function getFormData() {\n      var formData = _objectSpread({}, this.formData, {\n        dateOfBirth: this.dateOfBirth\n      });\n\n      delete formData.dobM;\n      delete formData.dobD;\n      delete formData.dobY;\n      return formData;\n    },\n    removeForm: function removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    }\n  }\n};",null]}