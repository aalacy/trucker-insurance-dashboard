{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/views/SimpleEstimateWizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/views/SimpleEstimateWizard.vue","mtime":1561725709702},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, email } from 'vuelidate/lib/validators';\nimport { API } from '../api.js';\nexport default {\n  name: 'SimpleEstimateWizard',\n  components: {\n    DocumentPreviewMain: () => import(\n    /* webpackChunkName: \"DocumentPreviewMain\" */\n    '../components/DocumentPreviewMain.vue'),\n    DocumentPreviewDot: () => import(\n    /* webpackChunkName: \"DocumentPreviewDot\" */\n    '../components/DocumentPreviewDot.vue')\n  },\n\n  data() {\n    return {\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null,\n        phone: process.env.VUE_APP_WIZARD_PHONE || null,\n        email: process.env.VUE_APP_WIZARD_EMAIL || null,\n        garagingZip: process.env.VUE_APP_WIZARD_GARAGING_ZIP || null,\n        cargoType: process.env.VUE_APP_WIZARD_CARGO_TYPE || null,\n        ownerFirstName: process.env.VUE_APP_WIZARD_OWNER_FIRST_NAME || null,\n        ownerLastName: process.env.VUE_APP_WIZARD_OWNER_LAST_NAME || null,\n        ownerCountry: process.env.VUE_APP_WIZARD_OWNER_COUNTRY || null,\n        ownerState: process.env.VUE_APP_WIZARD_OWNER_STATE || null,\n        ownerCity: process.env.VUE_APP_WIZARD_OWNER_CITY || null,\n        ownerStreet: process.env.VUE_APP_WIZARD_OWNER_STREET || null,\n        ownerZip: process.env.VUE_APP_WIZARD_OWNER_ZIP || null,\n        ownerDOB: process.env.VUE_APP_WIZARD_OWNER_DOB || null,\n        yearBusinessStarted: process.env.VUE_APP_WIZARD_YEAR_BUSINESS_STARTED || null,\n        electronicDeviceProvider: process.env.VUE_APP_WIZARD_ELECTRONIC_DEVICE_PROVIDER || null,\n        currentInsuranceProvider: process.env.VUE_APP_WIZARD_CURRENT_INSURANCE_PROVIDER || null\n      },\n      mainInfo: null,\n      dotData: null,\n      getDocInfoTimeout: null,\n      resultDOT: null,\n      loading: false,\n      error: null,\n      loadingDoc: false,\n      errorDoc: null\n    };\n  },\n\n  // vuelidate\n  validations: {\n    formData: {\n      imageIdFront: {\n        required\n      },\n      imageIdBack: {\n        required\n      },\n      imageDOT: {\n        required\n      },\n      imageRegistration: {\n        required\n      },\n      phone: {\n        required\n      },\n      email: {\n        required,\n        email\n      },\n      garagingZip: {\n        required\n      },\n      cargoType: {\n        required\n      },\n      ownerFirstName: {\n        required\n      },\n      ownerLastName: {\n        required\n      },\n      ownerCountry: {\n        required\n      },\n      ownerState: {\n        required\n      },\n      ownerCity: {\n        required\n      },\n      ownerStreet: {\n        required\n      },\n      ownerZip: {\n        required\n      },\n      ownerDOB: {\n        required\n      },\n      yearBusinessStarted: {\n        required\n      },\n      electronicDeviceProvider: {\n        required\n      },\n      currentInsuranceProvider: {\n        required\n      }\n    }\n  },\n  computed: {\n    imgPrefix() {\n      return \"\".concat(process.env.VUE_APP_BACKEND_URL, \"/tmp/\");\n    }\n\n  },\n\n  beforeDestroy() {\n    clearTimeout(this.getDocInfoTimeout);\n  },\n\n  methods: {\n    setImage(event, fieldName) {\n      let files = event.target.files;\n\n      if (!files.length) {\n        this.$v.formData[fieldName].$model = null;\n        return;\n      }\n\n      this.$v.formData[fieldName].$model = files[0];\n    },\n\n    docTryAgain() {\n      if (this.resultDOT === false) {\n        this.errorDoc = null;\n        this.mainInfo = null;\n      } else {\n        this.getDocInfo();\n      }\n    },\n\n    submit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.$v.$touch();\n\n        if (_this.$v.$invalid) {\n          console.log('form invalid');\n          return;\n        }\n\n        console.log('submit');\n\n        try {\n          _this.error = null;\n          _this.loading = true;\n          let data = yield API.formData('documents/upload', _objectSpread({}, _this.formData));\n          console.log(data);\n\n          if (data.status === 'OK') {\n            _this.mainInfo = data.data;\n\n            _this.getDocInfo();\n          }\n        } catch (error) {\n          _this.error = error.message;\n        } finally {\n          _this.loading = false;\n        }\n      })();\n    },\n\n    getDocInfo() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        console.log('getDocInfo');\n        _this2.loadingDoc = true;\n        _this2.errorDoc = null;\n\n        try {\n          let data = yield API.post('documents/admin/item', {\n            _id: _this2.mainInfo._id\n          });\n          console.log(data);\n\n          if (data.status === 'OK') {\n            if (data.data.resultDOT === false || data.data.resultDOT === 'false') {\n              _this2.loadingDoc = false;\n              _this2.resultDOT = false;\n              _this2.errorDoc = 'Could not parse DOT document.';\n              return;\n            }\n\n            if (data.data.resultDOTSaferData) {\n              console.log('done');\n              _this2.loadingDoc = false;\n              _this2.dotData = data.data.resultDOTSaferData;\n            } else {\n              console.log('no DOT data');\n              _this2.getDocInfoTimeout = setTimeout(_this2.getDocInfo, 1000);\n            }\n          }\n        } catch (error) {\n          _this2.errorDoc = error.message;\n          _this2.loadingDoc = false;\n        }\n      })();\n    }\n\n  }\n};",null]}