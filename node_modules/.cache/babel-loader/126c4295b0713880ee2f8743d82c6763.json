{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoDriversItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoDriversItem.vue","mtime":1563369133816},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AccountInfoDriversItem\",\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    driver: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.$store.dispatch(\"loadData\", localStorage.getItem(\"uuid\"));\n      var a = this.$store.state.getData.data[7];\n      var b = JSON.parse(a.val)[0];\n      this.formData.firstName = b.firstName;\n      this.formData.lastName = b.lastName;\n\n      var _b$dateOfBirth$split = b.dateOfBirth.split(\"/\");\n\n      var _b$dateOfBirth$split2 = _slicedToArray(_b$dateOfBirth$split, 3);\n\n      this.formData.dobD = _b$dateOfBirth$split2[0];\n      this.formData.dobM = _b$dateOfBirth$split2[1];\n      this.formData.dobY = _b$dateOfBirth$split2[2];\n      // this.formData.dobM = dobM;\n      console.log(\"f\", this.formData.dobM);\n      this.formData.address = b.address;\n      this.formData.licenseNumber = b.licenseNumber;\n      this.formData.state = b.state;\n\n      var _b$dateOfHire$split = b.dateOfHire.split(\"/\");\n\n      var _b$dateOfHire$split2 = _slicedToArray(_b$dateOfHire$split, 3);\n\n      this.formData.dohD = _b$dateOfHire$split2[0];\n      this.formData.dohM = _b$dateOfHire$split2[1];\n      this.formData.dohY = _b$dateOfHire$split2[2];\n      this.formData.yearsOfExperience = b.yearsOfExperience;\n      this.formData.CDL = b.CDL;\n    }\n  },\n  data: function data() {\n    return {\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        address: \"\",\n        licenseNumber: \"\",\n        state: \"\",\n        dohM: \"\",\n        dohD: \"\",\n        dohY: \"\",\n        yearsOfExperience: \"\",\n        CDL: \"\"\n      },\n      rules: {\n        firstName: [required],\n        lastName: [required],\n        dobM: [required],\n        dobD: [required],\n        dobY: [required],\n        licenseNumber: [required],\n        state: [required],\n        dohM: [required],\n        dohD: [required],\n        dohY: [required],\n        yearsOfExperience: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({\n    dateOfBirth: function dateOfBirth() {\n      var _this$formData = this.formData,\n          m = _this$formData.dobM,\n          d = _this$formData.dobD,\n          y = _this$formData.dobY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  }, mapState([\"data\"]), {\n    dateOfHire: function dateOfHire() {\n      var _this$formData2 = this.formData,\n          m = _this$formData2.dohM,\n          d = _this$formData2.dohD,\n          y = _this$formData2.dohY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  }),\n  created: function created() {\n    var dobM = \"\",\n        dobD = \"\",\n        dobY = \"\";\n    var dohM = \"\",\n        dohD = \"\",\n        dohY = \"\";\n\n    if (this.driver.dateOfBirth) {\n      var _this$driver$dateOfBi = this.driver.dateOfBirth.split(\"/\");\n\n      var _this$driver$dateOfBi2 = _slicedToArray(_this$driver$dateOfBi, 3);\n\n      dobM = _this$driver$dateOfBi2[0];\n      dobD = _this$driver$dateOfBi2[1];\n      dobY = _this$driver$dateOfBi2[2];\n    }\n\n    if (this.driver.dateOfHire) {\n      var _this$driver$dateOfHi = this.driver.dateOfHire.split(\"/\");\n\n      var _this$driver$dateOfHi2 = _slicedToArray(_this$driver$dateOfHi, 3);\n\n      dohM = _this$driver$dateOfHi2[0];\n      dohD = _this$driver$dateOfHi2[1];\n      dohY = _this$driver$dateOfHi2[2];\n    }\n\n    this.formData = _objectSpread({}, this.formData, this.driver, {\n      dobM: dobM,\n      dobD: dobD,\n      dobY: dobY,\n      dohM: dohM,\n      dohD: dohD,\n      dohY: dohY\n    });\n  },\n  methods: {\n    getFormData: function getFormData() {\n      var formData = _objectSpread({}, this.formData, {\n        dateOfBirth: this.dateOfBirth,\n        dateOfHire: this.dateOfHire\n      });\n\n      delete formData.dobM;\n      delete formData.dobD;\n      delete formData.dobY;\n      delete formData.dohM;\n      delete formData.dohD;\n      delete formData.dohY;\n      return formData;\n    },\n    removeForm: function removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    }\n  }\n};",null]}