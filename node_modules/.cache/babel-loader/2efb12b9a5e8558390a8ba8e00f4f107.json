{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoCargoGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoCargoGroup.vue","mtime":1563454478699},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { validateField as _validateField, validateForm as _validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nexport default {\n  name: \"AccountInfoCargoGroup\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch('loadData', localStorage.getItem(\"uuid\"));\n      var a = this.$store.state.getData.data[3];\n      var b = JSON.parse(a.val).cargoGroup;\n      var c = [];\n\n      for (var i = 0; i < this.cargoGroups.length; i++) {\n        c.push(this.cargoGroups[i].value);\n      }\n\n      var filteredKeywords = c.filter(function (word) {\n        return b.includes(word);\n      });\n      console.log(\"filteredKeywords\", filteredKeywords);\n\n      for (var i = 0; i < filteredKeywords.length; i++) {\n        this.selectCargoGroup(filteredKeywords[i]);\n      }\n    } else {\n      this.save = true;\n    }\n  },\n  components: {\n    modalLogin: ModalLogin\n  },\n  data: function data() {\n    return {\n      showmodel: false,\n      save: true,\n      formData: {\n        cargoGroup: []\n      },\n      selectedCargoGroup: [],\n      rules: {\n        cargoGroup: [function (val) {\n          return minLength(val, 1, \"Please select Cargo Group\");\n        }]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({}, mapState(\"cargo\", [\"cargoGroups\"]), {\n    cargoGroupMap: function cargoGroupMap() {\n      var map = {};\n      this.formData.cargoGroup.forEach(function (val) {\n        map[val] = true; // console.log(\"val\",val)\n      }); // console.log(\"map\",map)\n\n      return map;\n    }\n  }, mapState(['data'])),\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress); // this.loadCompany();\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    selectCargoGroup: function selectCargoGroup(cargoGroupValue) {\n      // console.log(\"cargoGroupValue\",cargoGroupValue)\n      // this.formData.cargoGroup.push(cargoGroupValue)\n      // console.log(\"this.formData.cargoGroup\",this.formData.cargoGroup)\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(function (val) {\n          return val !== cargoGroupValue;\n        });\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit(\"update-hint\", this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 5;\n                _context.next = 8;\n                return API.post(\"company/save\", {\n                  key: \"cargoGroup\",\n                  val: this.formData,\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 8:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (this.showmodel) {\n                    this.showmodel = false;\n                  } else {\n                    this.showmodel = true;\n                  }\n                } else if (data.status === \"ERROR\") {\n                  // this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](5);\n                // this.showmodel = true;\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 16:\n                _context.prev = 16;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 12, 16, 19]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, cargoGroup;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  cargoGroup = data.data.cargoGroup;\n\n                  if (cargoGroup) {\n                    this.formData = _objectSpread({}, this.formData, cargoGroup);\n                  }\n                } else if (data.status === \"ERROR\") {\n                  // this.$router.replace({ name: 'Home' });\n                  console.log(\"error\", data.status);\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false;\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context3.prev = 5;\n                _context3.next = 8;\n                return API.post(\"company/save\", {\n                  key: \"cargoGroup\",\n                  val: this.formData,\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 8:\n                data = _context3.sent;\n                console.log(\"this.formData\", this.formData);\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context3.next = 17;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](5);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 17:\n                _context3.prev = 17;\n                this.loading = false;\n                return _context3.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 13, 17, 20]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoCargoGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cargo-group-form\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Cargo Group</h4>\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in cargoGroups\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 cargo-group\"\n                @click=\"selectCargoGroup(item.value)\"\n              >\n\n                <div class=\"p-1\">\n                  <img :src=\"item.src\" alt>\n                </div>\n\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: cargoGroupMap[item.value] }\"\n                >{{ item.value }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.cargoGroup\" class=\"text-danger\">{{ formErrors.cargoGroup }}</div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Business Structure</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">Cargo Hauled</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modalLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { validateField, validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\n\n\n\nexport default {\n  name: \"AccountInfoCargoGroup\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted(){\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n      this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data[3]\n    let b = JSON.parse(a.val).cargoGroup\n     let c =[];\n     for(var i=0;i<this.cargoGroups.length;i++){\n        c.push(this.cargoGroups[i].value)\n     }\n    let filteredKeywords = c.filter((word)=> b.includes(word));\n    console.log(\"filteredKeywords\",filteredKeywords);\n    for(var i=0;i<filteredKeywords.length;i++){\n    this.selectCargoGroup(filteredKeywords[i])\n    \n   }}else{\n     this.save = true  \n}\n },\n  components: {\n    modalLogin: ModalLogin\n  },\n \n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      formData: {\n        cargoGroup: []\n      },\n      selectedCargoGroup:[],\n      rules: {\n        cargoGroup: [val => minLength(val, 1, \"Please select Cargo Group\")]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState(\"cargo\", [\"cargoGroups\"]),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        map[val] = true;\n        // console.log(\"val\",val)\n      });\n      // console.log(\"map\",map)\n      return map;\n    },\n    ...mapState([\n    'data'\n  ])\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.loadCompany();\n  },\n   updated(){\n\n     if(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n\n    \n },\n  \n  methods: {\n    selectCargoGroup(cargoGroupValue) {\n      // console.log(\"cargoGroupValue\",cargoGroupValue)\n      // this.formData.cargoGroup.push(cargoGroupValue)\n      // console.log(\"this.formData.cargoGroup\",this.formData.cargoGroup)\n      if (this.cargoGroupMap[cargoGroupValue]) {\n      \n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit(\"update-hint\", this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async show() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n      \n      this.loading = true;\n      this.error = null;\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n         if (data.status === \"OK\") {\n           if(this.showmodel){\n          this.showmodel = false;\n        }else{\n          this.showmodel = true;\n        }\n        } else if (data.status === \"ERROR\") {\n          // this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        // this.showmodel = true;\n\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { cargoGroup } = data.data;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n          console.log(\"error\", data.status);\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n        console.log(\"this.formData\", this.formData);\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none {\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      border-radius: 5px;\n      min-height: 50px;\n      font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n        color: #5e98f9;\n      }\n    }\n  }\n  @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n  @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"],"sourceRoot":"src/components"}]}