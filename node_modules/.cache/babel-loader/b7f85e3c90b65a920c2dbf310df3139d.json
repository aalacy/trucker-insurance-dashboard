{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue","mtime":1563454288196},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _name$components$prop;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState } from \"vuex\";\nexport default (_name$components$prop = {\n  name: \"AccountInfoPersonalInfo\",\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  beforeMount: function beforeMount() {\n    // console.log(\"beforeMount\");\n    localStorage.setItem(\"usdot\", \"\");\n  },\n  mounted: function mounted() {\n    this.formData.USDOT = localStorage.getItem(\"usdot\");\n    this.formData.company = localStorage.getItem(\"company\");\n    this.formData.address = localStorage.getItem([\"Mailing address\"]); // [this.formData.dobD, this.formData.dobM, this.formData.dobY] = b.dateOfBirth.split('/');\n\n    var x = localStorage.getItem(\"Mailing address\"); // this.formData.zip = x.split(',')\n\n    this.formData.address1 = localStorage.getItem([\"Physical address\"]);\n    this.formData.phone = localStorage.getItem(\"Phone\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch(\"loadData\", this.uuid);\n      var a = this.$store.state.getData.data[2];\n      console.log(\"aaaa\", a);\n      var b = JSON.parse(a.val);\n      this.formData.address = b.address;\n      this.formData.city = b.city;\n      this.formData.zip = b.zip;\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      this.formData.state = b.state;\n      this.formData.address1 = b.address1;\n      this.formData.city1 = b.city1;\n      this.formData.zip1 = b.zip1;\n      this.formData.state1 = b.state1;\n    } else {\n      this.save = true;\n      console.log(\"not logged in\");\n    }\n  }\n}, _defineProperty(_name$components$prop, \"beforeMount\", function beforeMount() {}), _defineProperty(_name$components$prop, \"computed\", _objectSpread({}, mapState([\"data\"]))), _defineProperty(_name$components$prop, \"data\", function data() {\n  return {\n    checked: true,\n    showmodel: false,\n    save: true,\n    uuid: \"\",\n    formData: {\n      // firstName: \"\",\n      // lastName: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      USDOT: \"\",\n      company: \"\",\n      phone: \"\",\n      address1: \"\",\n      city1: \"\",\n      state1: \"\",\n      zip1: \"\"\n    },\n    rules: {\n      // firstName: [required],\n      // lastName: [required],\n      address: [required],\n      city: [required],\n      state: [required],\n      zip: [required],\n      address1: [required],\n      city1: [required],\n      state1: [required],\n      zip1: [required]\n    },\n    formErrors: {},\n    hints: {\n      address: \"Another hint\"\n    },\n    loading: false,\n    error: null\n  };\n}), _defineProperty(_name$components$prop, \"created\", function created() {\n  this.$emit(\"update-progress\", this.progress);\n  this.loadCompany();\n  this.uuid = localStorage.getItem(\"uuid\"); // console.log(\"be\",this.uuid)\n  // console.log(\"mount api\",JSON.parse(this.data.data[0].val).businessType)\n}), _defineProperty(_name$components$prop, \"updated\", function updated() {\n  if (localStorage.getItem(\"showModal\") == \"true\") {\n    this.showmodel = true;\n  } else {\n    this.showmodel = false;\n  }\n}), _defineProperty(_name$components$prop, \"methods\", {\n  show: function () {\n    var _show = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var formIsValid, data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formIsValid = this.validateForm();\n\n              if (formIsValid) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              this.loading = true;\n              this.error = null;\n              _context.prev = 5;\n              _context.next = 8;\n              return API.post(\"company/save\", {\n                key: \"personalInfo\",\n                val: this.formData,\n                userId: localStorage.getItem(\"userId\"),\n                uuid: localStorage.getItem(\"uuid\")\n              });\n\n            case 8:\n              data = _context.sent;\n              console.log(\"this.formData per\", this.formData);\n\n              if (data.status === \"OK\") {\n                if (this.showmodel) {\n                  this.showmodel = false;\n                } else {\n                  this.showmodel = true;\n                }\n              } else if (data.status === \"ERROR\") {\n                this.showmodel = true;\n                this.error = data.messages[0] || data.data;\n              }\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0); // this.showmodel = true;\n\n              this.error = _context.t0.message;\n\n            case 17:\n              _context.prev = 17;\n              // this.showmodel = true;\n              this.loading = false;\n              return _context.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[5, 13, 17, 20]]);\n    }));\n\n    function show() {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  onFocus: function onFocus(fieldName) {\n    this.$emit(\"update-hint\", this.hints[fieldName]);\n  },\n  onBlur: function onBlur() {\n    this.$emit(\"update-hint\", \"\");\n  },\n  goNextForm: function goNextForm() {\n    this.$emit(\"go-to-form\", this.nextForm);\n  },\n  validateField: function validateField(fieldName) {\n    _validateField(fieldName, this.formData, this.rules, this.formErrors);\n  },\n  validateForm: function validateForm() {\n    this.formErrors = {};\n    return _validateForm(this.formData, this.rules, this.formErrors);\n  },\n  loadCompany: function () {\n    var _loadCompany = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var data, personalInfo;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = false;\n              this.error = null;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return API.get(\"company/current\");\n\n            case 5:\n              data = _context2.sent;\n              this.uuid = data.data.b;\n              localStorage.setItem(\"uuid\", data.data.b);\n\n              if (data.status === \"OK\") {\n                personalInfo = data.data.personalInfo;\n\n                if (personalInfo) {\n                  this.formData = _objectSpread({}, this.formData, personalInfo);\n                }\n              } else if (data.status === \"ERROR\") {// this.$router.replace({ name: \"Home\" });\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n              this.error = _context2.t0.message;\n\n            case 15:\n              _context2.prev = 15;\n              this.loading = false;\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[2, 11, 15, 18]]);\n    }));\n\n    function loadCompany() {\n      return _loadCompany.apply(this, arguments);\n    }\n\n    return loadCompany;\n  }(),\n  updateCompany: function () {\n    var _updateCompany = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var formIsValid, data;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formIsValid = this.validateForm();\n\n              if (formIsValid) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              this.loading = true;\n              this.error = null;\n              _context3.prev = 5;\n              _context3.next = 8;\n              return API.post(\"company/save\", {\n                key: \"personalInfo\",\n                val: this.formData,\n                userId: localStorage.getItem(\"userId\"),\n                uuid: localStorage.getItem(\"uuid\")\n              });\n\n            case 8:\n              data = _context3.sent;\n\n              // console.log(localStorage.getItem(\"userId\"))\n              // console.log(localStorage.getItem(\"uuid\"))\n              if (data.status === \"OK\") {\n                this.goNextForm();\n              } else if (data.status === \"ERROR\") {\n                // console.log(\"data\",data)\n                this.error = data.messages[0] || data.data;\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              // console.error(err);\n              this.error = _context3.t0.message;\n\n            case 15:\n              _context3.prev = 15;\n              this.loading = false;\n              return _context3.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[5, 12, 15, 18]]);\n    }));\n\n    function updateCompany() {\n      return _updateCompany.apply(this, arguments);\n    }\n\n    return updateCompany;\n  }()\n}), _name$components$prop);",null]}