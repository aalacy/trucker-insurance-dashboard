{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoPersonalInfo.vue","mtime":1563454238808},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _name$components$prop;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState } from \"vuex\";\nexport default (_name$components$prop = {\n  name: \"AccountInfoPersonalInfo\",\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  beforeMount: function beforeMount() {\n    // console.log(\"beforeMount\");\n    localStorage.setItem(\"usdot\", \"\");\n  },\n  mounted: function mounted() {\n    this.formData.USDOT = localStorage.getItem(\"usdot\");\n    this.formData.company = localStorage.getItem(\"company\");\n    this.formData.address = localStorage.getItem([\"Mailing address\"]); // [this.formData.dobD, this.formData.dobM, this.formData.dobY] = b.dateOfBirth.split('/');\n\n    var x = localStorage.getItem(\"Mailing address\"); // this.formData.zip = x.split(',')\n\n    this.formData.address1 = localStorage.getItem([\"Physical address\"]);\n    this.formData.phone = localStorage.getItem(\"Phone\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch(\"loadData\", this.uuid);\n      var a = this.$store.state.getData.data[2];\n      console.log(\"aaaa\", a);\n      var b = JSON.parse(a.val);\n      this.formData.address = b.address;\n      this.formData.city = b.city;\n      this.formData.zip = b.zip;\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      this.formData.state = b.state;\n      this.formData.address1 = b.address1;\n      this.formData.city1 = b.city1;\n      this.formData.zip1 = b.zip1;\n      this.formData.state1 = b.state1;\n    } else {\n      this.save = true;\n      console.log(\"not logged in\");\n    }\n  }\n}, _defineProperty(_name$components$prop, \"beforeMount\", function beforeMount() {}), _defineProperty(_name$components$prop, \"computed\", _objectSpread({}, mapState([\"data\"]))), _defineProperty(_name$components$prop, \"data\", function data() {\n  return {\n    checked: true,\n    showmodel: false,\n    save: true,\n    uuid: \"\",\n    formData: {\n      // firstName: \"\",\n      // lastName: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      USDOT: \"\",\n      company: \"\",\n      phone: \"\",\n      address1: \"\",\n      city1: \"\",\n      state1: \"\",\n      zip1: \"\"\n    },\n    rules: {\n      // firstName: [required],\n      // lastName: [required],\n      address: [required],\n      city: [required],\n      state: [required],\n      zip: [required],\n      address1: [required],\n      city1: [required],\n      state1: [required],\n      zip1: [required]\n    },\n    formErrors: {},\n    hints: {\n      address: \"Another hint\"\n    },\n    loading: false,\n    error: null\n  };\n}), _defineProperty(_name$components$prop, \"created\", function created() {\n  this.$emit(\"update-progress\", this.progress);\n  this.loadCompany();\n  this.uuid = localStorage.getItem(\"uuid\"); // console.log(\"be\",this.uuid)\n  // console.log(\"mount api\",JSON.parse(this.data.data[0].val).businessType)\n}), _defineProperty(_name$components$prop, \"updated\", function updated() {\n  if (localStorage.getItem(\"showModal\") == \"true\") {\n    this.showmodel = true;\n  } else {\n    this.showmodel = false;\n  }\n}), _defineProperty(_name$components$prop, \"methods\", {\n  show: function () {\n    var _show = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var formIsValid, data;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formIsValid = this.validateForm();\n\n              if (formIsValid) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              this.loading = true;\n              this.error = null;\n              _context.prev = 5;\n              _context.next = 8;\n              return API.post(\"company/save\", {\n                key: \"personalInfo\",\n                val: this.formData,\n                userId: localStorage.getItem(\"userId\"),\n                uuid: localStorage.getItem(\"uuid\")\n              });\n\n            case 8:\n              data = _context.sent;\n              console.log(\"this.formData per\", this.formData);\n\n              if (data.status === \"OK\") {\n                if (this.showmodel) {\n                  this.showmodel = false;\n                } else {\n                  this.showmodel = true;\n                }\n              } else if (data.status === \"ERROR\") {\n                this.showmodel = true;\n                this.error = data.messages[0] || data.data;\n              }\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0); // this.showmodel = true;\n\n              this.error = _context.t0.message;\n\n            case 17:\n              _context.prev = 17;\n              // this.showmodel = true;\n              this.loading = false;\n              return _context.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[5, 13, 17, 20]]);\n    }));\n\n    function show() {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  onFocus: function onFocus(fieldName) {\n    this.$emit(\"update-hint\", this.hints[fieldName]);\n  },\n  onBlur: function onBlur() {\n    this.$emit(\"update-hint\", \"\");\n  },\n  goNextForm: function goNextForm() {\n    this.$emit(\"go-to-form\", this.nextForm);\n  },\n  validateField: function validateField(fieldName) {\n    _validateField(fieldName, this.formData, this.rules, this.formErrors);\n  },\n  validateForm: function validateForm() {\n    this.formErrors = {};\n    return _validateForm(this.formData, this.rules, this.formErrors);\n  },\n  loadCompany: function () {\n    var _loadCompany = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var data, personalInfo;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.loading = false;\n              this.error = null;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return API.get(\"company/current\");\n\n            case 5:\n              data = _context2.sent;\n              this.uuid = data.data.b;\n              localStorage.setItem(\"uuid\", data.data.b);\n\n              if (data.status === \"OK\") {\n                personalInfo = data.data.personalInfo;\n\n                if (personalInfo) {\n                  this.formData = _objectSpread({}, this.formData, personalInfo);\n                }\n              } else if (data.status === \"ERROR\") {// this.$router.replace({ name: \"Home\" });\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n              this.error = _context2.t0.message;\n\n            case 15:\n              _context2.prev = 15;\n              this.loading = false;\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[2, 11, 15, 18]]);\n    }));\n\n    function loadCompany() {\n      return _loadCompany.apply(this, arguments);\n    }\n\n    return loadCompany;\n  }(),\n  updateCompany: function () {\n    var _updateCompany = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var formIsValid, data;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formIsValid = this.validateForm();\n\n              if (formIsValid) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              this.loading = true;\n              this.error = null;\n              _context3.prev = 5;\n              _context3.next = 8;\n              return API.post(\"company/save\", {\n                key: \"personalInfo\",\n                val: this.formData,\n                userId: localStorage.getItem(\"userId\"),\n                uuid: localStorage.getItem(\"uuid\")\n              });\n\n            case 8:\n              data = _context3.sent;\n\n              // console.log(localStorage.getItem(\"userId\"))\n              // console.log(localStorage.getItem(\"uuid\"))\n              if (data.status === \"OK\") {\n                this.goNextForm();\n              } else if (data.status === \"ERROR\") {\n                // console.log(\"data\",data)\n                this.error = data.messages[0] || data.data;\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              // console.error(err);\n              this.error = _context3.t0.message;\n\n            case 15:\n              _context3.prev = 15;\n              this.loading = false;\n              return _context3.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[5, 12, 15, 18]]);\n    }));\n\n    function updateCompany() {\n      return _updateCompany.apply(this, arguments);\n    }\n\n    return updateCompany;\n  }()\n}), _name$components$prop);",{"version":3,"sources":["AccountInfoPersonalInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class>\n    <form class=\"custom_form\" @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Business Information</h4>\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.address\"\n                  :class=\"{ 'has-error': formErrors.address }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Street Address*\"\n                  required\n                  @change=\"validateField('address')\"\n                  @focus=\"onFocus('address')\"\n                  @blur=\"onBlur\"\n                >\n                <div v-if=\"formErrors.address\" class=\"text-danger\">{{ formErrors.address }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.city\"\n                  :class=\"{ 'has-error': formErrors.city }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"City*\"\n                  required\n                  @change=\"validateField('city')\"\n                  @focus=\"onFocus('city')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.city\" class=\"text-danger\">{{ formErrors.city }}</div>\n              </div>\n            </div>\n\n            <div class=\"col-4\">\n              <div class=\"form-group\">\n                <select\n                  v-model=\"formData.state\"\n                  :class=\"{ 'has-error': formErrors.state }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('state')\"\n                  @focus=\"onFocus('state')\"\n                  @blur=\"onBlur\"\n                >\n                  <option disabled value>State/Province</option>\n                  <option value=\"AL\">Alabama</option>\n                  <option value=\"AK\">Alaska</option>\n                  <option value=\"AZ\">Arizona</option>\n                  <option value=\"AR\">Arkansas</option>\n                  <option value=\"CA\">California</option>\n                  <option value=\"CO\">Colorado</option>\n                  <option value=\"CT\">Connecticut</option>\n                  <option value=\"DE\">Delaware</option>\n                  <option value=\"DC\">District Of Columbia</option>\n                  <option value=\"FL\">Florida</option>\n                  <option value=\"GA\">Georgia</option>\n                  <option value=\"HI\">Hawaii</option>\n                  <option value=\"ID\">Idaho</option>\n                  <option value=\"IL\">Illinois</option>\n                  <option value=\"IN\">Indiana</option>\n                  <option value=\"IA\">Iowa</option>\n                  <option value=\"KS\">Kansas</option>\n                  <option value=\"KY\">Kentucky</option>\n                  <option value=\"LA\">Louisiana</option>\n                  <option value=\"ME\">Maine</option>\n                  <option value=\"MD\">Maryland</option>\n                  <option value=\"MA\">Massachusetts</option>\n                  <option value=\"MI\">Michigan</option>\n                  <option value=\"MN\">Minnesota</option>\n                  <option value=\"MS\">Mississippi</option>\n                  <option value=\"MO\">Missouri</option>\n                  <option value=\"MT\">Montana</option>\n                  <option value=\"NE\">Nebraska</option>\n                  <option value=\"NV\">Nevada</option>\n                  <option value=\"NH\">New Hampshire</option>\n                  <option value=\"NJ\">New Jersey</option>\n                  <option value=\"NM\">New Mexico</option>\n                  <option value=\"NY\">New York</option>\n                  <option value=\"NC\">North Carolina</option>\n                  <option value=\"ND\">North Dakota</option>\n                  <option value=\"OH\">Ohio</option>\n                  <option value=\"OK\">Oklahoma</option>\n                  <option value=\"OR\">Oregon</option>\n                  <option value=\"PA\">Pennsylvania</option>\n                  <option value=\"RI\">Rhode Island</option>\n                  <option value=\"SC\">South Carolina</option>\n                  <option value=\"SD\">South Dakota</option>\n                  <option value=\"TN\">Tennessee</option>\n                  <option value=\"TX\">Texas</option>\n                  <option value=\"UT\">Utah</option>\n                  <option value=\"VT\">Vermont</option>\n                  <option value=\"VA\">Virginia</option>\n                  <option value=\"WA\">Washington</option>\n                  <option value=\"WV\">West Virginia</option>\n                  <option value=\"WI\">Wisconsin</option>\n                  <option value=\"WY\">Wyoming</option>\n                </select>\n\n                <div v-if=\"formErrors.state\" class=\"text-danger\">{{ formErrors.state }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.zip\"\n                  :class=\"{ 'has-error': formErrors.zip }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Zip Code*\"\n                  required\n                  @change=\"validateField('zip')\"\n                  @focus=\"onFocus('zip')\"\n                  @blur=\"onBlur\"\n                >\n                {{data}}\n                <div v-if=\"formErrors.zip\" class=\"text-danger\">{{ formErrors.zip }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.USDOT\"\n                  :class=\"{ 'has-error': formErrors.USDOT }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"USDOT\"\n                  @focus=\"onFocus('USDOT')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.USDOT\" class=\"text-danger\">{{ formErrors.USDOT }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.company\"\n                  :class=\"{ 'has-error': formErrors.company }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Company name\"\n                  @focus=\"onFocus('Company name')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.company\" class=\"text-danger\">{{ formErrors.company }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.phone\"\n                  :class=\"{ 'has-error': formErrors.phone }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Phone no\"\n                  @focus=\"onFocus('Phone number')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.phone\" class=\"text-danger\">{{ formErrors.phone }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-12 col-sm-6 col-lg-12\">\n            <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\n            <label for=\"checkbox\" class=\"st-padding d-inline\">Is Garaging address the same location?</label>\n          </div>\n          <div>\n            <div class=\"row\">\n              <div class=\"col-md-6 col-lg-12 py-3\">\n                <h6 class=\"pt-2\">Garaging Address</h6>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col\">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.address1\"\n                    :class=\"{ 'has-error': formErrors.address1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"Garaging Address*\"\n                    required\n                    @change=\"validateField('address1')\"\n                    @focus=\"onFocus('address1')\"\n                    @blur=\"onBlur\"\n                  >\n\n                  <div v-if=\"formErrors.address1\" class=\"text-danger\">{{ formErrors.address1 }}</div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.city1\"\n                    :class=\"{ 'has-error': formErrors.city1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"City*\"\n                    required\n                    @change=\"validateField('city1')\"\n                    @focus=\"onFocus('city1')\"\n                    @blur=\"onBlur\"\n                  >\n                  <div v-if=\"formErrors.city1\" class=\"text-danger\">{{ formErrors.city1 }}</div>\n                </div>\n              </div>\n\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <select\n                    v-model=\"formData.state1\"\n                    :class=\"{ 'has-error': formErrors.state1 }\"\n                    class=\"lt-input\"\n                    required\n                    multiple\n                    @change=\"validateField('state1')\"\n                    @focus=\"onFocus('state1')\"\n                    @blur=\"onBlur\"\n                  >\n                    <option disabled value>State/Province</option>\n                    <option></option>\n                    <option value=\"AL\">Alabama</option>\n                    <option value=\"AK\">Alaska</option>\n                    <option value=\"AZ\">Arizona</option>\n                    <option value=\"AR\">Arkansas</option>\n                    <option value=\"CA\">California</option>\n                    <option value=\"CO\">Colorado</option>\n                    <option value=\"CT\">Connecticut</option>\n                    <option value=\"DE\">Delaware</option>\n                    <option value=\"DC\">District Of Columbia</option>\n                    <option value=\"FL\">Florida</option>\n                    <option value=\"GA\">Georgia</option>\n                    <option value=\"HI\">Hawaii</option>\n                    <option value=\"ID\">Idaho</option>\n                    <option value=\"IL\">Illinois</option>\n                    <option value=\"IN\">Indiana</option>\n                    <option value=\"IA\">Iowa</option>\n                    <option value=\"KS\">Kansas</option>\n                    <option value=\"KY\">Kentucky</option>\n                    <option value=\"LA\">Louisiana</option>\n                    <option value=\"ME\">Maine</option>\n                    <option value=\"MD\">Maryland</option>\n                    <option value=\"MA\">Massachusetts</option>\n                    <option value=\"MI\">Michigan</option>\n                    <option value=\"MN\">Minnesota</option>\n                    <option value=\"MS\">Mississippi</option>\n                    <option value=\"MO\">Missouri</option>\n                    <option value=\"MT\">Montana</option>\n                    <option value=\"NE\">Nebraska</option>\n                    <option value=\"NV\">Nevada</option>\n                    <option value=\"NH\">New Hampshire</option>\n                    <option value=\"NJ\">New Jersey</option>\n                    <option value=\"NM\">New Mexico</option>\n                    <option value=\"NY\">New York</option>\n                    <option value=\"NC\">North Carolina</option>\n                    <option value=\"ND\">North Dakota</option>\n                    <option value=\"OH\">Ohio</option>\n                    <option value=\"OK\">Oklahoma</option>\n                    <option value=\"OR\">Oregon</option>\n                    <option value=\"PA\">Pennsylvania</option>\n                    <option value=\"RI\">Rhode Island</option>\n                    <option value=\"SC\">South Carolina</option>\n                    <option value=\"SD\">South Dakota</option>\n                    <option value=\"TN\">Tennessee</option>\n                    <option value=\"TX\">Texas</option>\n                    <option value=\"UT\">Utah</option>\n                    <option value=\"VT\">Vermont</option>\n                    <option value=\"VA\">Virginia</option>\n                    <option value=\"WA\">Washington</option>\n                    <option value=\"WV\">West Virginia</option>\n                    <option value=\"WI\">Wisconsin</option>\n                    <option value=\"WY\">Wyoming</option>\n                  </select>\n\n                  <div v-if=\"formErrors.state\" class=\"text-danger\">{{ formErrors.state1 }}</div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.zip1\"\n                    :class=\"{ 'has-error': formErrors.zip1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"Zip Code*\"\n                    required\n                    @change=\"validateField('zip1')\"\n                    @focus=\"onFocus('zip1')\"\n                    @blur=\"onBlur\"\n                  >\n\n                  <div v-if=\"formErrors.zip\" class=\"text-danger\">{{ formErrors.zip1 }}</div>\n                </div>\n              </div>\n            </div>\n            <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0 d-flex pl-4 align-items-center color-font\">\n              <font-awesome-icon icon=\"caret-left\" size=\"2x\" class=\"m-1\"></font-awesome-icon>Previous\n            </div>\n            <div class=\"col-6 p-0\">\n              <!-- <i class=\"fas fa-home\" aria-hidden=\"true\"></i>  -->\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb p-1\"\n              >\n                <!-- <font-awesome-icon icon=\"amazon-pay\" size=\"2x\" class=\"m-1\"></font-awesome-icon> -->\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline text-white\">\n                  Business Structure\n                  <font-awesome-icon icon=\"caret-right\" size=\"2x\" class=\"m-1\"></font-awesome-icon>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"AccountInfoPersonalInfo\",\n\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  beforeMount() {\n    // console.log(\"beforeMount\");\n    localStorage.setItem(\"usdot\", \"\");\n  },\n  mounted() {\n    this.formData.USDOT = localStorage.getItem(\"usdot\");\n    this.formData.company = localStorage.getItem(\"company\");\n    this.formData.address = localStorage.getItem([\"Mailing address\"]);\n    // [this.formData.dobD, this.formData.dobM, this.formData.dobY] = b.dateOfBirth.split('/');\n    let x = localStorage.getItem(\"Mailing address\");\n    // this.formData.zip = x.split(',')\n    this.formData.address1 = localStorage.getItem([\"Physical address\"]);\n    this.formData.phone = localStorage.getItem(\"Phone\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch(\"loadData\", this.uuid);\n       let a = this.$store.state.getData.data[2]\n      console.log(\"aaaa\",a);\n      let b = JSON.parse(a.val);\n      this.formData.address = b.address;\n      this.formData.city = b.city;\n      this.formData.zip = b.zip;\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      this.formData.state = b.state;\n      this.formData.address1 = b.address1;\n      this.formData.city1 = b.city1;\n      this.formData.zip1 = b.zip1;\n      this.formData.state1 = b.state1;\n    } else {\n      this.save = true;\n\n      console.log(\"not logged in\");\n    }\n  },\n  beforeMount() {},\n  computed: {\n    ...mapState([\"data\"])\n  },\n\n  data() {\n    return {\n      checked: true,\n      showmodel: false,\n      save: true,\n      uuid: \"\",\n      formData: {\n        // firstName: \"\",\n        // lastName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        USDOT: \"\",\n        company: \"\",\n        phone: \"\",\n        address1: \"\",\n        city1: \"\",\n        state1: \"\",\n        zip1: \"\"\n      },\n      rules: {\n        // firstName: [required],\n        // lastName: [required],\n        address: [required],\n        city: [required],\n        state: [required],\n        zip: [required],\n        address1: [required],\n        city1: [required],\n        state1: [required],\n        zip1: [required]\n      },\n      formErrors: {},\n      hints: {\n        address: \"Another hint\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n    this.uuid = localStorage.getItem(\"uuid\");\n    // console.log(\"be\",this.uuid)\n    // console.log(\"mount api\",JSON.parse(this.data.data[0].val).businessType)\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    async show() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"personalInfo\",\n          val: this.formData,\n          userId: localStorage.getItem(\"userId\"),\n          uuid: localStorage.getItem(\"uuid\")\n        });\n        console.log(\"this.formData per\", this.formData);\n        if (data.status === \"OK\") {\n          if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n        } else if (data.status === \"ERROR\") {\n          this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        // this.showmodel = true;\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = false;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n        this.uuid = data.data.b;\n        localStorage.setItem(\"uuid\", data.data.b);\n        if (data.status === \"OK\") {\n          let { personalInfo } = data.data;\n          if (personalInfo) {\n            this.formData = {\n              ...this.formData,\n              ...personalInfo\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: \"Home\" });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"personalInfo\",\n          val: this.formData,\n          userId: localStorage.getItem(\"userId\"),\n          uuid: localStorage.getItem(\"uuid\")\n        });\n        // console.log(localStorage.getItem(\"userId\"))\n        // console.log(localStorage.getItem(\"uuid\"))\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          // console.log(\"data\",data)\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        // console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.st-padding {\n  // color: black;\n  padding-left: 10px;\n  font-weight: bold;\n}\n</style>\n"],"sourceRoot":"src/components"}]}