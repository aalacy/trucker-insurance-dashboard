{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoOwners.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoOwners.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport uuidv4 from 'uuid/v4';\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoOwners',\n  components: {\n    AccountInfoOwnersItem: () => import('./AccountInfoOwnersItem.vue')\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      formData: {\n        driverIsOwner: false,\n        driverOwnerIndex: -1,\n        owners: []\n      },\n      drivers: [],\n      loading: false,\n      error: null\n    };\n  },\n\n  computed: {\n    noOwners() {\n      return this.formData.driverOwnerIndex === -1 && !this.formData.owners.length;\n    }\n\n  },\n  watch: {\n    'formData.driverIsOwner'(driverIsOwner) {\n      if (!driverIsOwner) {\n        this.formData.driverOwnerIndex = -1;\n      }\n    },\n\n    noOwners(noOwners) {\n      this.error = noOwners ? 'Please add at least one owner' : null;\n    }\n\n  },\n\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n\n  methods: {\n    addForm() {\n      this.formData.owners.push({\n        _uuid: uuidv4()\n      });\n      this.error = null;\n    },\n\n    removeForm(index) {\n      this.formData.owners.splice(index, 1);\n    },\n\n    updateHint(hint) {\n      this.$emit('update-hint', hint);\n    },\n\n    goPrevForm() {\n      this.$emit('go-to-form', this.prevForm);\n    },\n\n    goNextForm() {\n      this.$emit('go-to-form', this.nextForm);\n    },\n\n    loadCompany() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.loading = true;\n        _this.error = null;\n\n        try {\n          let data = yield API.get('company/current');\n\n          if (data.status === 'OK') {\n            let _data$data = data.data,\n                drivers = _data$data.drivers,\n                ownersTab = _data$data.owners;\n\n            if (drivers) {\n              _this.drivers = drivers;\n            }\n\n            if (ownersTab) {\n              let owners = ownersTab.owners;\n              _this.formData = _objectSpread({}, _this.formData, ownersTab, {\n                owners: owners.map(o => _objectSpread({}, o, {\n                  _uuid: uuidv4()\n                }))\n              });\n            } else {\n              _this.addForm();\n            }\n          } else if (data.status === 'ERROR') {\n            _this.$router.replace({\n              name: 'Home'\n            });\n          }\n        } catch (err) {\n          console.error(err);\n          _this.error = err.message;\n        } finally {\n          _this.loading = false;\n        }\n      })();\n    },\n\n    setDataFromForms() {\n      let owners = [];\n\n      if (this.$refs.ownerForm) {\n        this.$refs.ownerForm.forEach(formRef => {\n          let formData = formRef.getFormData();\n          owners.push(formData);\n        });\n      }\n\n      this.formData.owners = owners;\n    },\n\n    updateCompany() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this2.formData.driverIsOwner && _this2.formData.driverOwnerIndex === -1) {\n          _this2.formData.driverIsOwner = false;\n        }\n\n        _this2.setDataFromForms();\n\n        if (_this2.noOwners) {\n          return;\n        }\n\n        let allFormAreValid = _this2.$refs.ownerForm ? _this2.$refs.ownerForm.every(formRef => formRef.validateForm()) : true;\n\n        if (!allFormAreValid) {\n          return;\n        }\n\n        _this2.loading = true;\n        _this2.error = null;\n\n        try {\n          let data = yield API.post('company/save', {\n            key: 'owners',\n            val: _objectSpread({}, _this2.formData, {\n              owners: _this2.formData.owners.map(o => {\n                let owner = _objectSpread({}, o);\n\n                delete owner._uuid;\n                return owner;\n              })\n            })\n          });\n\n          if (data.status === 'OK') {\n            _this2.goNextForm();\n          } else if (data.status === 'ERROR') {\n            _this2.error = data.messages[0] || data.data;\n          }\n        } catch (err) {\n          console.error(err);\n          _this2.error = err.message;\n        } finally {\n          _this2.loading = false;\n        }\n      })();\n    }\n\n  }\n};",null]}