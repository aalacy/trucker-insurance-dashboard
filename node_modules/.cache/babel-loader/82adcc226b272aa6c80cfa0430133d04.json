{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoCargoGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoCargoGroup.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { validateField as _validateField, validateForm as _validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoCargoGroup\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var j = 0; j <= len.length; j++) {\n            if (_this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              var i;\n              var i;\n\n              (function () {\n                var a = _this.$store.state.getData.data[j];\n                var b = JSON.parse(a.val).cargoGroup;\n                var c = [];\n\n                for (i = 0; i < _this.cargoGroups.length; i++) {\n                  c.push(_this.cargoGroups[i].value);\n                }\n\n                var filteredKeywords = c.filter(function (word) {\n                  return b.includes(word);\n                });\n\n                for (i = 0; i < filteredKeywords.length; i++) {\n                  _this.selectCargoGroup(filteredKeywords[i]);\n                }\n              })();\n            }\n          } // let b = JSON.parse(a.val).cargoGroup;\n\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var j = 0; j <= len.length; j++) {\n            if (_this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              var i;\n              var i;\n\n              (function () {\n                var a = _this.$store.state.getData.data[j];\n                var b = JSON.parse(a.val).cargoGroup;\n                var c = [];\n\n                for (i = 0; i < _this.cargoGroups.length; i++) {\n                  c.push(_this.cargoGroups[i].value);\n                }\n\n                var filteredKeywords = c.filter(function (word) {\n                  return b.includes(word);\n                });\n\n                for (i = 0; i < filteredKeywords.length; i++) {\n                  _this.selectCargoGroup(filteredKeywords[i]);\n                }\n              })();\n            }\n          } // let b = JSON.parse(a.val).cargoGroup;\n\n        });\n      }, 1000);\n    }\n  },\n  components: {\n    modalLogin: ModalLogin\n  },\n  data: function data() {\n    return {\n      final_uuid: \"\",\n      uuid: \"\",\n      showmodel: false,\n      save: true,\n      userData: \"\",\n      formData: {\n        cargoGroup: []\n      },\n      selectedCargoGroup: [],\n      rules: {\n        cargoGroup: [function (val) {\n          return minLength(val, 1, \"Please select Cargo Group\");\n        }]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({}, mapState(\"cargo\", [\"cargoGroups\"]), {\n    cargoGroupMap: function cargoGroupMap() {\n      var map = {};\n      this.formData.cargoGroup.forEach(function (val) {\n        map[val] = true; //\n      }); //\n\n      return map;\n    }\n  }, mapState([\"data\"])),\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        _this2.show();\n\n        if (willDelete) {\n          _this2.$router.push({\n            name: \"AccountInfoCargoGroup\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    selectCargoGroup: function selectCargoGroup(cargoGroupValue) {\n      //\n      // this.formData.cargoGroup.push(cargoGroupValue)\n      //\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(function (val) {\n          return val !== cargoGroupValue;\n        });\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit(\"update-hint\", this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, temp_uuid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                if (localStorage.getItem(\"token\")) {\n                  temp_uuid = this.userData;\n                } else {\n                  temp_uuid = this.uuid;\n                }\n\n                this.loading = true;\n                this.error = null;\n                _context.prev = 6;\n                _context.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"cargoGroup\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: temp_uuid\n                });\n\n              case 9:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (!localStorage.getItem(\"token\")) {\n                    if (this.showmodel) {\n                      this.showmodel = false;\n                    } else {\n                      this.showmodel = true;\n                    }\n                  }\n                } else if (data.status === \"ERROR\") {\n                  // this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                } // axios\n                //   .post(\n                //     \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n                //       this.uuid +\n                //       \"&user_id=\" +\n                //       localStorage.getItem(\"userId\")\n                //   )\n                //   .then(res => {\n                //    \n                //   });\n\n\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                // this.showmodel = true;\n                this.error = _context.t0.message;\n\n              case 16:\n                _context.prev = 16;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13, 16, 19]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, cargoGroup;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  cargoGroup = data.data.cargoGroup;\n                  this.uuid = data.data.b;\n\n                  if (cargoGroup) {\n                    this.formData = _objectSpread({}, this.formData, {}, cargoGroup);\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                this.error = _context2.t0.message;\n\n              case 12:\n                _context2.prev = 12;\n                this.loading = false;\n                return _context2.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 12, 15]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                }\n\n                _context3.prev = 6;\n                _context3.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"cargoGroup\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: this.final_uuid\n                });\n\n              case 9:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.final_uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {});\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](6);\n                this.error = _context3.t0.message;\n\n              case 17:\n                _context3.prev = 17;\n                this.loading = false;\n                return _context3.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 14, 17, 20]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoCargoGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cargo-group-form\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Cargo Group</h4>\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in cargoGroups\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 \"\n                @click=\"selectCargoGroup(item.value)\"\n              :class=\"{ selected: cargoGroupMap[item.value] }\">\n              <div class=\"cargo-group\">\n                <div class=\"p-1\">\n                  <img :src=\"item.src\" alt>\n                </div>\n\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: cargoGroupMap[item.value] }\"\n                >{{ item.value }}</div>\n              </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.cargoGroup\" class=\"text-danger\">{{ formErrors.cargoGroup }}</div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Business Structure</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">Cargo Hauled</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modalLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { validateField, validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoCargoGroup\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n     \n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let j = 0; j <= len.length; j++) {\n            if (this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              let a = this.$store.state.getData.data[j];\n              let b = JSON.parse(a.val).cargoGroup;\n             \n              let c = [];\n              for (var i = 0; i < this.cargoGroups.length; i++) {\n                c.push(this.cargoGroups[i].value);\n              }\n              let filteredKeywords = c.filter(word => b.includes(word));\n             \n              for (var i = 0; i < filteredKeywords.length; i++) {\n                this.selectCargoGroup(filteredKeywords[i]);\n              }\n            }\n          }\n          // let b = JSON.parse(a.val).cargoGroup;\n        });\n      }, 1000);\n    } else {\n     \n      this.save = true;\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let j = 0; j <= len.length; j++) {\n            if (this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              let a = this.$store.state.getData.data[j];\n              let b = JSON.parse(a.val).cargoGroup;\n             \n              let c = [];\n              for (var i = 0; i < this.cargoGroups.length; i++) {\n                c.push(this.cargoGroups[i].value);\n              }\n              let filteredKeywords = c.filter(word => b.includes(word));\n             \n              for (var i = 0; i < filteredKeywords.length; i++) {\n                this.selectCargoGroup(filteredKeywords[i]);\n              }\n            }\n          }\n          // let b = JSON.parse(a.val).cargoGroup;\n        });\n      }, 1000);\n    }\n  },\n  components: {\n    modalLogin: ModalLogin,\n    \n  },\n\n  data() {\n    return {\n      final_uuid:\"\",\n      uuid: \"\",\n      showmodel: false,\n      save: true,\n      userData: \"\",\n      formData: {\n        cargoGroup: []\n      },\n      selectedCargoGroup: [],\n      rules: {\n        cargoGroup: [val => minLength(val, 1, \"Please select Cargo Group\")]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState(\"cargo\", [\"cargoGroups\"]),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        map[val] = true;\n        //\n      });\n      //\n      return map;\n    },\n    ...mapState([\"data\"])\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n\n  methods: {\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n       \n        this.show();\n        if (willDelete) {\n          \n          this.$router.push({ name: \"AccountInfoCargoGroup\" });\n        } else {\n          \n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    selectCargoGroup(cargoGroupValue) {\n      //\n      // this.formData.cargoGroup.push(cargoGroupValue)\n      //\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit(\"update-hint\", this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async show() {\n      let formIsValid = this.validateForm();\n      var temp_uuid;\n      if (!formIsValid) {\n        return;\n      }\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n       \n      } else {\n        temp_uuid = this.uuid;\n       \n      }\n\n      this.loading = true;\n      this.error = null;\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          // this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n        // axios\n        //   .post(\n        //     \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n        //       this.uuid +\n        //       \"&user_id=\" +\n        //       localStorage.getItem(\"userId\")\n        //   )\n        //   .then(res => {\n        //    \n        //   });\n      } catch (err) {\n        // this.showmodel = true;\n\n       \n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { cargoGroup } = data.data;\n          this.uuid = data.data.b;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n         \n        }\n      } catch (err) {\n       \n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n       \n      } else {\n        this.final_uuid = this.uuid;\n       \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n       \n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n             this.final_uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n           \n          });\n      } catch (err) {\n       \n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none {\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      border-radius: 5px;\n      min-height: 50px;\n      font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n        color: #5e98f9;\n      }\n    }\n  }\n  @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n  @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"],"sourceRoot":"src/components"}]}