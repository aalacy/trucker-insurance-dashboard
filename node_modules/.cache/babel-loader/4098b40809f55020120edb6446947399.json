{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoPersonalInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoPersonalInfo.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState, mutations } from \"vuex\";\nimport { isMobile } from \"mobile-device-detect\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoPersonalInfo\",\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    prevForm: {\n      type: String\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.mobile = isMobile ? true : false;\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n        localStorage.setItem(\"uuid\", coins.data.uuid);\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var k = 0; k <= len.length; k++) {\n            if (_this.$store.state.getData.data[k].key == \"personalInfo\") {\n              var a = _this.$store.state.getData.data[k];\n              var b = JSON.parse(a.val);\n              _this.formData.address = b.address;\n              _this.formData.city = b.city;\n              _this.formData.zip = b.zip;\n              _this.formData.USDOT = b.USDOT;\n              _this.formData.company = b.company;\n              _this.formData.phone = b.phone;\n              _this.formData.state = b.state;\n              _this.formData.address1 = b.address1;\n              _this.formData.city1 = b.city1;\n              _this.formData.zip1 = b.zip1;\n              _this.formData.state1 = b.state1;\n            }\n          }\n        });\n      }, 1000);\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      var fullAddress = localStorage.getItem([\"Mailing address\"]);\n      var MailingAddress = this.formatAddress(localStorage.getItem([\"Mailing address\"]));\n      var PhysicalAddress = this.formatAddress(localStorage.getItem([\"Physical address\"]));\n      this.formData.address = MailingAddress[3].trim().replace(\",\", \"\");\n      this.formData.city = MailingAddress[1].trim().replace(\",\", \"\");\n      this.formData.state = MailingAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip = MailingAddress[0].trim().replace(\",\", \"\");\n      this.formData.address1 = PhysicalAddress[3].trim().replace(\",\", \"\");\n      this.formData.city1 = PhysicalAddress[1].trim().replace(\",\", \"\");\n      this.formData.state1 = PhysicalAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip1 = PhysicalAddress[0].trim().replace(\",\", \"\");\n    } else {\n      this.save = true;\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n\n      var _fullAddress = localStorage.getItem([\"Mailing address\"]);\n\n      var _MailingAddress = this.formatAddress(localStorage.getItem([\"Mailing address\"]));\n\n      this.formData.address = _MailingAddress[3].trim().replace(\",\", \"\");\n      this.formData.state = _MailingAddress[1].trim().replace(\",\", \"\");\n      this.formData.city = _MailingAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip = _MailingAddress[0].trim().replace(\",\", \"\");\n\n      var _PhysicalAddress = this.formatAddress(localStorage.getItem([\"Physical address\"]));\n\n      this.formData.address1 = _PhysicalAddress[3].trim().replace(\",\", \"\");\n      this.formData.state1 = _PhysicalAddress[1].trim().replace(\",\", \"\");\n      this.formData.city1 = _PhysicalAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip1 = _PhysicalAddress[0].trim().replace(\",\", \"\");\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i <= len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"personalInfo\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n              _this.formData.address = b.address;\n              _this.formData.city = b.city;\n              _this.formData.zip = b.zip;\n              _this.formData.USDOT = b.USDOT;\n              _this.formData.company = b.company;\n              _this.formData.phone = b.phone;\n              _this.formData.state = b.state;\n              _this.formData.address1 = b.address1;\n              _this.formData.city1 = b.city1;\n              _this.formData.zip1 = b.zip1;\n              _this.formData.state1 = b.state1;\n            }\n          }\n        }).catch(function () {});\n      }, 1000);\n    }\n  },\n  beforeMount: function beforeMount() {// localStorage.setItem(\"uuid\", null);\n  },\n  computed: _objectSpread({}, mapState([\"data\"])),\n  data: function data() {\n    return {\n      checked: true,\n      showmodel: false,\n      final_uuid: \"\",\n      save: true,\n      mobile: false,\n      uuid: \"\",\n      // newQuote: false,\n      userData: \"\",\n      formData: {\n        // firstName: \"\",\n        // lastName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        USDOT: \"\",\n        company: \"\",\n        phone: \"\",\n        address1: \"\",\n        city1: \"\",\n        state1: \"\",\n        zip1: \"\"\n      },\n      rules: {\n        // firstName: [required],\n        // lastName: [required],\n        address: [required],\n        city: [required],\n        state: [required],\n        zip: [required],\n        address1: [required],\n        city1: [required],\n        state1: [required],\n        zip1: [required]\n      },\n      formErrors: {},\n      hints: {\n        address: \"Please enter Mailing Address\",\n        state: \"Please enter State of Mailing Address\",\n        city: \"Please enter State of Mailing Address\",\n        zip: \"Please enter Zipcode of Mailing Address\",\n        address1: \"Please enter Garaging Address\",\n        city1: \"Please enter State of Garaging Address\",\n        state1: \"Please enter State of Garaging Address\",\n        zip1: \"Please enter Zipcode of Garaging Address\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress); // localStorage.setItem(\"uuid\", null);\n\n    this.loadCompany();\n  },\n  updated: function updated() {// if (localStorage.getItem(\"showModal\") == \"true\") {\n    //   this.showmodel = true;\n    // } else {\n    //   this.showmodel = false;\n    // }\n  },\n  methods: {\n    changeData: function changeData() {\n      if (this.checked) {\n        this.formData.address1 = this.formData.address;\n        this.formData.city1 = this.formData.city;\n        this.formData.state1 = this.formData.state;\n        this.formData.zip1 = this.formData.zip;\n      } else {\n        this.formData.address1 = \"\";\n        this.formData.city1 = \"\";\n        this.formData.state1 = \"\";\n        this.formData.zip1 = \"\";\n      }\n    },\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        _this2.show();\n\n        if (willDelete) {\n          _this2.$router.push({\n            name: \"AccountInfoPersonalInfo\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, temp_uuid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  temp_uuid = this.userData;\n                } else {\n                  temp_uuid = this.uuid;\n                }\n\n                _context.prev = 6;\n                _context.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"personalInfo\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: temp_uuid\n                });\n\n              case 9:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (!localStorage.getItem(\"token\")) {\n                    if (this.showmodel) {\n                      this.showmodel = false;\n                    } else {\n                      this.showmodel = true;\n                    }\n                  }\n                } else if (data.status === \"ERROR\") {\n                  // this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 17:\n                _context.prev = 17;\n                this.loading = false;\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13, 17, 20]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, personalInfo;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = false;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n                this.uuid = data.data.b;\n\n                if (data.status === \"OK\") {\n                  // localStorage.setItem(\"uuid\",data.data.b)\n                  personalInfo = data.data.personalInfo;\n\n                  if (personalInfo) {\n                    this.formData = _objectSpread({}, this.formData, {}, personalInfo);\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: \"Home\" });\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 14:\n                _context2.prev = 14;\n                this.loading = false; // }, 5000);\n\n                return _context2.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10, 14, 17]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    formatAddress: function formatAddress(fullAddress) {\n      var splitAddress = fullAddress.split(\" \");\n      splitAddress.reverse();\n      var cnt = 0,\n          val = [],\n          index = 0;\n\n      while (cnt != 4 && splitAddress.length > index) {\n        if (splitAddress[index].trim() != \"\") {\n          if (cnt < 2) {\n            val[cnt++] = splitAddress[index];\n          } else {\n            val[cnt] = \"\";\n\n            do {\n              val[cnt] = splitAddress[index] + \" \" + val[cnt];\n            } while (splitAddress[index++].trim() != \"\" && splitAddress.length > index);\n\n            cnt++;\n          }\n        }\n\n        index++;\n      }\n\n      return val;\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem('token')) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                }\n\n                _context3.prev = 6;\n                _context3.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"personalInfo\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: this.final_uuid\n                });\n\n              case 9:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                } // second API\n                // axios.post\n\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {}); // .catch(err => this.$swal(\"Opps!\",err, \"error\"))\n                // .finally(() \n\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](6);\n                // console.error(err);\n                this.error = _context3.t0.message;\n\n              case 17:\n                _context3.prev = 17;\n                this.loading = false;\n                return _context3.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 14, 17, 20]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoPersonalInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class>\n    <form class=\"custom_form\" @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Business Information</h4>\n          <div class=\"col-md-6 col-lg-12 py-3 row\">\n              <h6 class=\"pt-2\">Mailing Address</h6>\n            </div>\n          <div class=\"row\">\n            \n            <div class=\"col\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.address\"\n                  :class=\"{ 'has-error': formErrors.address }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Street Address*\"\n                  required\n                  @change=\"validateField('address')\"\n                  @focus=\"onFocus('address')\"\n                  @blur=\"onBlur\"\n                >\n                <div v-if=\"formErrors.address\" class=\"text-danger\">{{ formErrors.address }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-6 \">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.city\"\n                  :class=\"{ 'has-error': formErrors.city }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"City*\"\n                  required\n                  @change=\"validateField('city')\"\n                  @focus=\"onFocus('city')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.city\" class=\"text-danger\">{{ formErrors.city }}</div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-md-6 col-lg-6 \">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.state\"\n                  :class=\"{ 'has-error': formErrors.state }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"State*\"\n                  required\n                  @change=\"validateField('state')\"\n                  @focus=\"onFocus('state')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.state\" class=\"text-danger\">{{ formErrors.state }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-6 \">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.zip\"\n                  :class=\"{ 'has-error': formErrors.zip }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Zip Code*\"\n                  required\n                  minlength=\"5\"\n                  @change=\"validateField('zip')\"\n                  @focus=\"onFocus('zip')\"\n                  @blur=\"onBlur\"\n                >\n                {{data}}\n                <div v-if=\"formErrors.zip\" class=\"text-danger\">{{ formErrors.zip }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-6 \">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.USDOT\"\n                  :class=\"{ 'has-error': formErrors.USDOT }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"USDOT\"\n                  @focus=\"onFocus('USDOT')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.USDOT\" class=\"text-danger\">{{ formErrors.USDOT }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.company\"\n                  :class=\"{ 'has-error': formErrors.company }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Company name\"\n                  @focus=\"onFocus('Company name')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.company\" class=\"text-danger\">{{ formErrors.company }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-6 \">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.phone\"\n                  :class=\"{ 'has-error': formErrors.phone }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Phone no\"\n                  @focus=\"onFocus('Phone number')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.phone\" class=\"text-danger\">{{ formErrors.phone }}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md-12 col-sm-6 col-lg-12\">\n            <input type=\"checkbox\" id=\"checkbox\" class = \"mt-1\" v-model=\"checked\" v-on:change=\"changeData()\">\n            <label for=\"checkbox\" class=\"st-padding d-inline\">Is Garaging address the same location?</label>\n          </div>\n          <div>\n            <div class=\"row\">\n              <div class=\"col-md-6 col-lg-12 py-3\">\n                <h6 class=\"pt-2\">Garaging Address</h6>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col\">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.address1\"\n                    :class=\"{ 'has-error': formErrors.address1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"Garaging Address*\"\n                    required\n                    @change=\"validateField('address1')\"\n                    @focus=\"onFocus('address1')\"\n                    @blur=\"onBlur\"\n                  >\n\n                  <div v-if=\"formErrors.address1\" class=\"text-danger\">{{ formErrors.address1 }}</div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-6 \">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.city1\"\n                    :class=\"{ 'has-error': formErrors.city1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"City*\"\n                    required\n                    @change=\"validateField('city1')\"\n                    @focus=\"onFocus('city1')\"\n                    @blur=\"onBlur\"\n                  >\n                  <div v-if=\"formErrors.city1\" class=\"text-danger\">{{ formErrors.city1 }}</div>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-6 \">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.state1\"\n                    :class=\"{ 'has-error': formErrors.state1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"State*\"\n                    required\n                    @change=\"validateField('state1')\"\n                    @focus=\"onFocus('state1')\"\n                    @blur=\"onBlur\"\n                  >\n                  <div v-if=\"formErrors.city1\" class=\"text-danger\">{{ formErrors.state1 }}</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-6 \">\n                <div class=\"form-group\">\n                  <input\n                    v-model=\"formData.zip1\"\n                    :class=\"{ 'has-error': formErrors.zip1 }\"\n                    type=\"text\"\n                    class=\"lt-input\"\n                    placeholder=\"Zip Code*\"\n                    required\n                    minlength=\"5\"\n                    @change=\"validateField('zip1')\"\n                    @focus=\"onFocus('zip1')\"\n                    @blur=\"onBlur\"\n                  >\n\n                  <div v-if=\"formErrors.zip\" class=\"text-danger\">{{ formErrors.zip1 }}</div>\n                </div>\n              </div>\n            </div>\n            <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div v-if=\"mobile\" class=\"col-6 p-0\">\n            \n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button px-4 text-center lt-button-default btn-block btn-border-radius-lb  d-flex align-itmes-center justify-content-center h-100\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title  px-4 text-center d-inline pl-2 mob-2 button-icon color-bg\">Upload Documents</div>\n              </button>\n            \n            </div>\n              <div v-else class=\"w-100\">\n            <div class=\"lt-button px-4 text-center lt-button-default btn-block btn-border-radius-lb \">\n              <!-- <font-awesome-icon icon=\"caret-left\" size=\"2x\" class=\"m-1\"></font-awesome-icon> -->\n              Previous\n              \n            </div>\n            </div>\n            <div class=\"col-6 p-0\">\n              \n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb p-1 button-icon d-flex align-itmes-center justify-content-center h-100\"\n              >\n              \n                <span class=\"arrow-button \">{{ loading ? 'Loading...' : 'Next' }}</span>Business Structure\n                <!-- <font-awesome-icon icon=\"caret-right\" size=\"2x\" class=\"m-1 fill-white\"></font-awesome-icon> -->\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState, mutations } from \"vuex\";\nimport { isMobile } from \"mobile-device-detect\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"AccountInfoPersonalInfo\",\n\n  components: {\n    \"chat-boat\": ChatBoat,\n    modelLogin: ModalLogin,\n    \n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    prevForm:{\n      type:String,\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted() {\n    this.mobile = isMobile ? true : false;\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n          localStorage.setItem(\"uuid\",coins.data.uuid);\n          \n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(res => {\n          let len = this.$store.state.getData.data;\n          for (let k = 0; k <= len.length; k++) {\n            if (this.$store.state.getData.data[k].key == \"personalInfo\") {\n              let a = this.$store.state.getData.data[k];\n              let b = JSON.parse(a.val);\n              this.formData.address = b.address;\n              this.formData.city = b.city;\n              this.formData.zip = b.zip;\n              this.formData.USDOT = b.USDOT;\n              this.formData.company = b.company;\n              this.formData.phone = b.phone;\n              this.formData.state = b.state;\n              this.formData.address1 = b.address1;\n              this.formData.city1 = b.city1;\n              this.formData.zip1 = b.zip1;\n              this.formData.state1 = b.state1;\n            }\n          }\n        });\n\n        \n      }, 1000);\n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      let fullAddress = localStorage.getItem([\"Mailing address\"]);\n\n      let MailingAddress = this.formatAddress(\n        localStorage.getItem([\"Mailing address\"])\n      );\n      let PhysicalAddress = this.formatAddress(\n        localStorage.getItem([\"Physical address\"])\n      );\n      this.formData.address = MailingAddress[3].trim().replace(\",\", \"\");\n      this.formData.city = MailingAddress[1].trim().replace(\",\", \"\");\n      this.formData.state = MailingAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip = MailingAddress[0].trim().replace(\",\", \"\");\n\n      this.formData.address1 = PhysicalAddress[3].trim().replace(\",\", \"\");\n      this.formData.city1 = PhysicalAddress[1].trim().replace(\",\", \"\");\n      this.formData.state1 = PhysicalAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip1 = PhysicalAddress[0].trim().replace(\",\", \"\");\n    } else {\n      this.save = true;\n      \n      this.formData.USDOT = localStorage.getItem(\"usdot\");\n      this.formData.company = localStorage.getItem(\"company\");\n      this.formData.phone = localStorage.getItem(\"Phone\");\n      let fullAddress = localStorage.getItem([\"Mailing address\"]);\n      \n\n\n      let MailingAddress = this.formatAddress(\n        localStorage.getItem([\"Mailing address\"])\n      );\n      this.formData.address = MailingAddress[3].trim().replace(\",\", \"\");\n      this.formData.state = MailingAddress[1].trim().replace(\",\", \"\");\n      this.formData.city = MailingAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip = MailingAddress[0].trim().replace(\",\", \"\");\n      let PhysicalAddress = this.formatAddress(\n        localStorage.getItem([\"Physical address\"])\n      );\n      this.formData.address1 = PhysicalAddress[3].trim().replace(\",\", \"\");\n      this.formData.state1 = PhysicalAddress[1].trim().replace(\",\", \"\");\n      this.formData.city1 = PhysicalAddress[2].trim().replace(\",\", \"\");\n      this.formData.zip1 = PhysicalAddress[0].trim().replace(\",\", \"\");\n\n\n      setTimeout(() => {\n        this.$store\n          .dispatch(\"loadData\", this.uuid)\n          .then(res => {\n            let len = this.$store.state.getData.data;\n            for (let i = 0; i <= len.length; i++) {\n              if (this.$store.state.getData.data[i].key == \"personalInfo\") {\n                let a = this.$store.state.getData.data[i];\n                let b = JSON.parse(a.val);\n                this.formData.address = b.address;\n                this.formData.city = b.city;\n                this.formData.zip = b.zip;\n                this.formData.USDOT = b.USDOT;\n                this.formData.company = b.company;\n                this.formData.phone = b.phone;\n                this.formData.state = b.state;\n                this.formData.address1 = b.address1;\n                this.formData.city1 = b.city1;\n                this.formData.zip1 = b.zip1;\n                this.formData.state1 = b.state1;\n              }\n            }\n          })\n          .catch(() => {});\n      }, 1000);\n    }\n    \n  },\n  beforeMount() {\n    // localStorage.setItem(\"uuid\", null);\n  },\n  computed: {\n    ...mapState([\"data\"])\n  },\n\n  data() {\n    return {\n      checked: true,\n      showmodel: false,\n      final_uuid:\"\",\n      save: true,\n      mobile:false,\n      uuid: \"\",\n      // newQuote: false,\n      userData: \"\",\n      formData: {\n        // firstName: \"\",\n        // lastName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        USDOT: \"\",\n        company: \"\",\n        phone: \"\",\n        address1: \"\",\n        city1: \"\",\n        state1: \"\",\n        zip1: \"\"\n      },\n      rules: {\n        // firstName: [required],\n        // lastName: [required],\n        address: [required],\n        city: [required],\n        state: [required],\n        zip: [required],\n        address1: [required],\n        city1: [required],\n        state1: [required],\n        zip1: [required]\n      },\n      formErrors: {},\n      hints: {\n        address: \"Please enter Mailing Address\",\n        state: \"Please enter State of Mailing Address\",\n        city: \"Please enter State of Mailing Address\",\n        zip: \"Please enter Zipcode of Mailing Address\",\n        address1: \"Please enter Garaging Address\",\n        city1: \"Please enter State of Garaging Address\",\n        state1: \"Please enter State of Garaging Address\",\n        zip1: \"Please enter Zipcode of Garaging Address\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // localStorage.setItem(\"uuid\", null);\n\n    this.loadCompany();\n  },\n  updated() {\n    // if (localStorage.getItem(\"showModal\") == \"true\") {\n    //   this.showmodel = true;\n    // } else {\n    //   this.showmodel = false;\n    // }\n  },\n  methods: {\n    \n    changeData() {\n      if (this.checked) {\n        this.formData.address1 = this.formData.address;\n        this.formData.city1 = this.formData.city;\n        this.formData.state1 = this.formData.state;\n        this.formData.zip1 = this.formData.zip;\n      } else {\n        this.formData.address1 = \"\";\n        this.formData.city1 = \"\";\n        this.formData.state1 = \"\";\n        this.formData.zip1 = \"\";\n      }\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n  \n        this.show();\n        if (willDelete) {\n          \n          this.$router.push({ name: \"AccountInfoPersonalInfo\" });\n          \n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n    var temp_uuid;\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n  \n      } else {\n        temp_uuid = this.uuid;\n  \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"personalInfo\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n  \n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n           }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          // this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = false;\n      this.error = null;\n      try {\n        let data = await API.get(\"company/current\");\n        this.uuid = data.data.b;\n  \n        if (data.status === \"OK\") {\n          // localStorage.setItem(\"uuid\",data.data.b)\n          let { personalInfo } = data.data;\n          if (personalInfo) {\n            this.formData = {\n              ...this.formData,\n              ...personalInfo\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: \"Home\" });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n\n        // }, 5000);\n      }\n    },\n    formatAddress(fullAddress) {\n      let splitAddress = fullAddress.split(\" \");\n      splitAddress.reverse();\n      let cnt = 0,\n        val = [],\n        index = 0;\n      while (cnt != 4 && splitAddress.length > index) {\n        if (splitAddress[index].trim() != \"\") {\n          if (cnt < 2) {\n            val[cnt++] = splitAddress[index];\n          } else {\n            val[cnt] = \"\";\n            do {\n              val[cnt] = splitAddress[index] + \" \" + val[cnt];\n            } while (\n              splitAddress[index++].trim() != \"\" &&\n              splitAddress.length > index\n            );\n            cnt++;\n          }\n        }\n        index++;\n      }\n      return val;\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n      if(localStorage.getItem('token')){\n        \n          this.final_uuid = this.userData;\n    \n      }else{\n        this.final_uuid = this.uuid;\n  \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"personalInfo\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n  \n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          \n          this.error = data.messages[0] || data.data;\n        }\n\n        // second API\n        // axios.post\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n      \n          });\n        // .catch(err => this.$swal(\"Opps!\",err, \"error\"))\n        // .finally(() \n      } catch (err) {\n        // console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.color-bg{\n  color:#6f6f6f\n}\n.st-padding {\n  // color: black;\n  padding-left: 10px;\n  font-weight: bold;\n}\n</style>\n"],"sourceRoot":"src/components"}]}