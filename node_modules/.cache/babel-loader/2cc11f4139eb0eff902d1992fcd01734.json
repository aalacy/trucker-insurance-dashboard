{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoOwnersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoOwnersItem.vue","mtime":1563375518544},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField, validateForm, required } from '../validators.js';\nimport { mapState } from \"vuex\";\nexport default {\n  name: 'AccountInfoOwnersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    owner: {\n      type: Object,\n      required: false,\n\n      default() {\n        return {};\n      }\n\n    },\n    drivers: {\n      type: Array,\n      required: false\n    },\n    id: {\n      type: Boolean,\n      required: false\n    }\n  },\n\n  mounted() {\n    console.log(\"this.drivers\", this.drivers); // console.log(this.id)\n\n    if (this.id) {\n      this.formData.firstName = this.drivers[0].firstName;\n      this.formData.lastName = this.drivers[0].lastName;\n\n      var _this$drivers$0$dateO = this.drivers[0].dateOfBirth.split('/');\n\n      var _this$drivers$0$dateO2 = _slicedToArray(_this$drivers$0$dateO, 3);\n\n      this.formData.dobD = _this$drivers$0$dateO2[0];\n      this.formData.dobM = _this$drivers$0$dateO2[1];\n      this.formData.dobY = _this$drivers$0$dateO2[2];\n      this.formData.address = this.drivers[0].address;\n      this.formData.state = this.drivers[0].state;\n    } else {\n      console.log(\"no driver is ownr\");\n      this.formData.firstName = \"\";\n      this.formData.lastName = \"\";\n      this.formData.dobD = \"\";\n      this.formData.dobY = \"\";\n      this.formData.dobM = \"\";\n      this.formData.address = \"\";\n      this.formData.state = \"\";\n    }\n\n    if (localStorage.getItem(\"token\")) {\n      this.$store.dispatch('loadData', localStorage.getItem(\"uuid\"));\n      let a = this.$store.state.getData.data[8];\n      let b = JSON.parse(a.val).owners[0];\n      console.log(\"b\", b);\n      this.formData.firstName = b.firstName;\n      this.formData.lastName = b.lastName;\n\n      var _b$dateOfBirth$split = b.dateOfBirth.split('/');\n\n      var _b$dateOfBirth$split2 = _slicedToArray(_b$dateOfBirth$split, 3);\n\n      this.formData.dobD = _b$dateOfBirth$split2[0];\n      this.formData.dobM = _b$dateOfBirth$split2[1];\n      this.formData.dobY = _b$dateOfBirth$split2[2];\n      this.formData.address = b.address;\n      this.formData.state = b.state;\n    } else {}\n  },\n\n  data() {\n    return {\n      formData: {\n        firstName: '',\n        lastName: '',\n        dobM: '',\n        dobD: '',\n        dobY: '',\n        address: '',\n        state: ''\n      },\n      rules: {\n        firstName: [required],\n        lastName: [required],\n        dobM: [required],\n        dobD: [required],\n        dobY: [required],\n        address: [required],\n        state: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n\n  computed: _objectSpread({\n    dateOfBirth() {\n      let _this$formData = this.formData,\n          m = _this$formData.dobM,\n          d = _this$formData.dobD,\n          y = _this$formData.dobY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n\n  }, mapState(['data'])),\n\n  created() {\n    let dobM = '',\n        dobD = '',\n        dobY = '';\n\n    if (this.owner.dateOfBirth) {\n      var _this$owner$dateOfBir = this.owner.dateOfBirth.split('/');\n\n      var _this$owner$dateOfBir2 = _slicedToArray(_this$owner$dateOfBir, 3);\n\n      dobM = _this$owner$dateOfBir2[0];\n      dobD = _this$owner$dateOfBir2[1];\n      dobY = _this$owner$dateOfBir2[2];\n    }\n\n    this.formData = _objectSpread({}, this.formData, this.owner, {\n      dobM,\n      dobD,\n      dobY\n    });\n  },\n\n  methods: {\n    getFormData() {\n      let formData = _objectSpread({}, this.formData, {\n        dateOfBirth: this.dateOfBirth\n      });\n\n      delete formData.dobM;\n      delete formData.dobD;\n      delete formData.dobY;\n      return formData;\n    },\n\n    removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n\n    onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n\n  }\n};",null]}