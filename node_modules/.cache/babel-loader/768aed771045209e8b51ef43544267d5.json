{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoSignComplete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoSignComplete.vue","mtime":1563365589846},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nexport default {\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      showmodel: false,\n      save: true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageIdFront: null\n      },\n      preview: {\n        imageIdFront: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required] // sign: [required]\n\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created: function created() {\n    var dobM = \"\",\n        imageSign = \"\",\n        dobD = \"\",\n        dobY = \"\"; // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n\n    this.formData = _objectSpread({}, this.formData, {\n      //   ...this.driver,\n      dobM: dobM,\n      dobD: dobD,\n      dobY: dobY\n    });\n  },\n  mounted: function mounted() {\n    var currentDate = new Date();\n    var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n\n    var _currentDateWithForma = currentDateWithFormat.split('/');\n\n    var _currentDateWithForma2 = _slicedToArray(_currentDateWithForma, 3);\n\n    this.formData.dobD = _currentDateWithForma2[0];\n    this.formData.dobM = _currentDateWithForma2[1];\n    this.formData.dobY = _currentDateWithForma2[2];\n\n    //     var startdate = moment();\n    // startdate = startdate.subtract(1, \"days\");\n    // startdate = startdate.format(\"DD-MM-YYYY\");\n    // var startdate = moment().subtract(1, \"days\").format(\"DD-MM-YYYY\");\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n    } else {\n      this.save = true;\n    }\n  },\n  methods: {\n    show: function show() {\n      if (this.showmodel) {\n        this.showmodel = false;\n      } else {\n        this.showmodel = true;\n      }\n    },\n    setImage: function setImage(event, fieldName) {\n      var files = event.target.files;\n      var image = files[0] || null;\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName); // this.validateField(fieldName);\n    },\n    previewFile: function previewFile(file, fieldName) {\n      var _this = this;\n\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles: function clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }(),\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    }\n  },\n  computed: {\n    dateOfSign: function dateOfSign() {\n      var _this$formData = this.formData,\n          m = _this$formData.dobM,\n          d = _this$formData.dobD,\n          y = _this$formData.dobY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  }\n};",{"version":3,"sources":["AccountInfoSignComplete.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Sign and Complete</h4>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4 pt-2\">\n              <div>Date of Sign</div>\n\n              <div v-if=\"formErrors.dateOfSign\" class=\"text-danger\">{{ formErrors.dateOfSign }}</div>\n            </div>\n\n            <div class=\"col-12 col-md-8\">\n              <div class=\"row\">\n               \n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobD\"\n                      :class=\"{ 'has-error': formErrors.dobD }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"DD\"\n                      required\n                      @focus=\"onFocus('dobD')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobD')\"\n                    >\n                    <div v-if=\"formErrors.dobD\" class=\"text-danger\">{{ formErrors.dobD }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                 <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobM\"\n                      :class=\"{ 'has-error': formErrors.dobM }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"MM\"\n                      required\n                      @focus=\"onFocus('dobM')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobM')\"\n                    >\n\n                    <div v-if=\"formErrors.dobM\" class=\"text-danger\">{{ formErrors.dobM }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobY\"\n                      :class=\"{ 'has-error': formErrors.dobY }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"YYYY\"\n                      required\n                      @focus=\"onFocus('dobY')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobY')\"\n                    >\n\n                    <div v-if=\"formErrors.dobY\" class=\"text-danger\">{{ formErrors.dobY }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  for=\"imageIdFront\"\n                  class=\"lt-input d-flex align-items-center pl-5\"\n                >Signature</label>\n\n                <input\n                  id=\"imageIdFront\"\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdFront')\"\n                >\n\n                <div\n                  v-if=\"formErrors.imageIdFront\"\n                  class=\"text-danger\"\n                >{{ formErrors.imageIdFront }}</div>\n\n                <div v-if=\"preview.imageIdFront\" class=\"preview\">\n                  <img :src=\"preview.imageIdFront\" alt class=\"preview-image mt-3\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Underwriting Questions</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb color-green\"\n                @click=\"goNextForm\"\n              >\n                {{ loading ? 'Loading...' : 'Complete!' }}\n                <!-- <div class=\"next-title text-center d-inline pl-3 mob-2 text-white\"></div> -->\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\n\nexport default {\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageIdFront: null\n      },\n      preview: {\n        imageIdFront: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required]\n        // sign: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n     updated(){\nif(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n },\n  created() {\n    let dobM = \"\",\n      imageSign = \"\",\n      dobD = \"\",\n      dobY = \"\";\n    // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n    this.formData = {\n      ...this.formData,\n      //   ...this.driver,\n      dobM,\n      dobD,\n      dobY\n    };\n  },\n mounted(){\n   var currentDate = new Date();\n     var currentDateWithFormat = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n    [this.formData.dobD, this.formData.dobM, this.formData.dobY] = currentDateWithFormat.split('/');\n//     var startdate = moment();\n// startdate = startdate.subtract(1, \"days\");\n// startdate = startdate.format(\"DD-MM-YYYY\");\n// var startdate = moment().subtract(1, \"days\").format(\"DD-MM-YYYY\");\n\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.save = true\n   }\n },\n  methods: {\n    show() {\n      if (this.showmodel) {\n        this.showmodel = false;\n      } else {\n        this.showmodel = true;\n      }\n    },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    async updateCompany() {},\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n  },\n  computed: {\n    dateOfSign() {\n      let { dobM: m, dobD: d, dobY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}