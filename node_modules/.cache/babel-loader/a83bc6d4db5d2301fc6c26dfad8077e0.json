{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoThankYou.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoThankYou.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoThankYou',\n  props: {\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      error: null\n    };\n  },\n  created: function created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    download: function download() {\n      window.open(\"\".concat(process.env.VUE_APP_BACKEND_URL, \"/company/pdf\"));\n    },\n    // async download() {\n    //   this.loading = true;\n    //   this.error = null;\n    //   try {\n    //     let data = await API.get('company/pdf', null, {\n    //       responseType: 'blob'\n    //     });\n    //     if (data.status === 'ERROR') {\n    //       this.error = data.messages[0] || data.data;\n    //     } else {\n    //       let blob = new Blob([data], { type: 'application/pdf' });\n    //       let url = window.URL.createObjectURL(blob);\n    //       window.open(url);\n    //     }\n    //   } catch (err) {\n    //     console.error(err);\n    //     this.error = err.message;\n    //   } finally {\n    //     this.loading = false;\n    //   }\n    // },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return API.get('company/current');\n\n              case 5:\n                data = _context.sent;\n\n                if (data.status === 'ERROR') {\n                  this.$router.replace({\n                    name: 'Home'\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 13:\n                _context.prev = 13;\n                this.loading = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }()\n  }\n};",null]}