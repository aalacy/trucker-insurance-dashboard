{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue","mtime":1563367747191},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required, requiredWith } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AccountInfoVehiclesAndTrailersItem\",\n  props: {\n    vehicleOrTrailer: {\n      type: String,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  beforeMount: function beforeMount() {\n    console.log(\"this.vehicle\", this.vehicleOrTrailer);\n\n    if (this.vehicleOrTrailer == \"Vehicle\") {\n      this.vehicle = true;\n    } else {\n      this.vehicle = false;\n    }\n  },\n  mounted: function mounted() {\n    console.log(\"this.vehicle\", this.vehicleOrTrailer);\n\n    if (localStorage.getItem(\"token\")) {\n      this.$store.dispatch('loadData', localStorage.getItem(\"uuid\"));\n      var a = this.$store.state.getData.data[5];\n      var b = JSON.parse(a.val)[0];\n      console.log(\"bbb\", b); //  for(var i=0;i<b.length;i++){\n      // this.formData.VIN = b[i].VIN;\n      // this.formData.make=b[i].make;\n      // this.formData.year=b[i].year;\n      // this.formData.zipCode=b[i].zipCode;\n      // this.formData.model=b[i].model;\n      // this.formData.vehicleImage=b[i].vehicleImage;\n      // this.formData.vehicleType=b[i].vehicleType;\n      // this.formData.radiusOfTravel=b[i].radiusOfTravel;\n      //  }\n\n      this.formData.VIN = b.VIN;\n      this.formData.make = b.make;\n      this.formData.year = b.year;\n      this.formData.zipCode = b.zipCode;\n      this.formData.model = b.model;\n      this.formData.vehicleImage = b.vehicleImage;\n      this.formData.vehicleType = b.vehicleType;\n      this.formData.radiusOfTravel = b.radiusOfTravel; // console.log(\"ba\",b)\n    } else {}\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      formData: {\n        VIN: \"\",\n        year: \"\",\n        make: \"\",\n        model: \"\",\n        vehicleType: \"\",\n        vehicleImage: \"\",\n        zipCode: \"\",\n        radiusOfTravel: 50,\n        coverage: false,\n        currentValue: \"\",\n        deductible: \"\"\n      },\n      vehicle: false,\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [function (val) {\n          return requiredWith(val, _this.formData.coverage);\n        }],\n        deductible: [function (val) {\n          return requiredWith(val, _this.formData.coverage);\n        }]\n      },\n      formErrors: {},\n      hints: {\n        VIN: \"Some hint\"\n      },\n      deductibles: [{\n        name: \"$ 500\",\n        value: \"500\"\n      }, {\n        name: \"$ 1000\",\n        value: \"1000\"\n      }, {\n        name: \"$ 2500\",\n        value: \"2500\"\n      }, {\n        name: \"$ 5000\",\n        value: \"5000\"\n      }],\n      vehicleTypes: [\"Auto Hauler\", \"Bottom Dump Trailer\", \"Bulk Commodity Trailer\", \"Concession Trailer\", \"Dry Freight Trailer\", \"Dump Body Trailer / Transfer Box\", \"Flatbed Trailer\", \"Gooseneck Trailer\", \"Horse Trailer\", \"Livestock Trailer\", \"Logging Trailer\", \"Low-Boy Trailer\", \"Pole Trailer\", \"Refrigerated Dry Freight Trailer\", \"Tank Trailer\", \"Tilt Trailer\", \"Travel Trailer\", \"Utility Trailer\", \"Bus\", \"Car\", \"Cargo Van\", \"Hearse\", \"Limousine\", \"Mini Van\", \"Motor Home\", \"PASSENGER CAR\", \"Sport Utility Vehicle\", \"Emergency Vehicle\", \"Military Vehicle\"],\n      radiuses: [0, 100, 200, 300, 500, 1000, \"Unlimited\"],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: _objectSpread({\n      get: function get() {\n        return \"$ \".concat(this.formData.currentValue);\n      },\n      set: function set(val) {\n        var price = val // replace dollars and spaces to empty string\n        .replace(/[$\\s]/g, \"\") // replace all commas to dots\n        .replace(/,/g, \".\");\n        this.formData.currentValue = price;\n      }\n    }, mapState(['data'])),\n    radiusOfTravel: {\n      get: function get() {\n        var _this2 = this;\n\n        var index = this.radiuses.findIndex(function (radius) {\n          return radius == _this2.formData.radiusOfTravel;\n        });\n        return index > -1 ? index : 1;\n      },\n      set: function set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    \"formData.coverage\": function formDataCoverage(val) {\n      if (!val) {\n        this.formData.currentValue = \"\";\n        this.formData.deductible = \"\";\n      }\n    }\n  },\n  created: function created() {\n    this.formData = _objectSpread({}, this.formData, this.vehicle);\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || \"\";\n    }\n  },\n  updated: function updated() {\n    console.log(\"oo\", this.formData.vehicleImage);\n  },\n  methods: {\n    getFormData: function getFormData() {\n      return this.formData;\n    },\n    removeForm: function removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    getVinData: function () {\n      var _getVinData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.formData.VIN) {\n                  _context.next = 3;\n                  break;\n                }\n\n                console.log(\"VIN EMPTY\");\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                _context.prev = 4;\n                _context.next = 7;\n                return API.get(\"company/vin\", {\n                  vin: this.formData.VIN\n                });\n\n              case 7:\n                data = _context.sent;\n                this.formData = _objectSpread({}, this.formData, data.data);\n                console.log(\"data vin\", data.data);\n                this.formData.year = data.data.year;\n                this.formData.make = data.data.make;\n                this.formData.model = data.data.model;\n                this.formData.vehicleType = data.data.vehicleType;\n                console.log(\"this.formData.vehicleType\", this.formData.vehicleType); // console.log(\"this.v\",this.vehicleTypes)\n                // console.log(\"data.data.vehicleType\",data.data.vehicleType)\n                // var type = this.vehicleTypes.filter(v => v == data.data.vehicleType)\n                // console.log(\"type\",type)\n\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](4);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 21:\n                _context.prev = 21;\n                this.loading = false;\n                return _context.finish(21);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 17, 21, 24]]);\n      }));\n\n      function getVinData() {\n        return _getVinData.apply(this, arguments);\n      }\n\n      return getVinData;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoVehiclesAndTrailersItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form-item container-fluid mob-2\">\n    <div class=\"row\">\n       <!-- <div class=\"col\">\n        <h2 class=\"h5\">Trailer #{{ index + 1 }}</h2>\n      </div> -->\n\n       <!-- <div class=\"col text-right\">\n        <a class=\"pointer\" @click=\"removeForm(index)\">Remove</a>\n      </div> -->\n         <button type=\"button\" class=\"lt-button mx-2 mb-3 text-right col\" @click=\"removeForm(index)\">\n       <h3> - </h3>\n      </button>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.VIN\"\n            :class=\"{ 'has-error': formErrors.VIN }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"VIN #*\"\n            required\n            @focus=\"onFocus('VIN')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('VIN')\"\n          >\n\n          <div v-if=\"formErrors.VIN\" class=\"text-danger\">{{ formErrors.VIN }}</div>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <button\n          :disabled=\"loading\"\n          type=\"button\"\n          class=\"lt-button lt-button-main get-data\"\n          @click=\"getVinData\"\n        >\n          {{ loading ? 'Loading...' : 'Get Data' }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.year\"\n            :class=\"{ 'has-error': formErrors.year }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Year*\"\n            required\n            @focus=\"onFocus('year')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('year')\"\n          >\n            <!-- <option value disabled>year</option>\n            <option>2004</option>\n            <option>2005</option>\n          </select> -->\n\n          <div v-if=\"formErrors.year\" class=\"text-danger\">{{ formErrors.year }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.make\"\n            :class=\"{ 'has-error': formErrors.make }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Make*\"\n            required\n            @focus=\"onFocus('make')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('make')\"\n          >\n            <!-- <option value disabled>Make</option>\n            <option>2004</option>\n            <option>2005</option> -->\n          \n\n          <div v-if=\"formErrors.make\" class=\"text-danger\">{{ formErrors.make }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.model\"\n            :class=\"{ 'has-error': formErrors.model }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Model*\"\n            required\n            @focus=\"onFocus('model')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('model')\" >\n            <!-- <option value disabled>Model</option> -->\n        \n          <div v-if=\"formErrors.model\" class=\"text-danger\">{{ formErrors.model }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col-10 pt-4\">\n        <div class=\"form-group\">\n          <div class=\"border-bottom p-1\">\n            <span>Select Vehicle and Trailer type</span>\n          </div>\n          <div v-if=\"vehicle\">\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Tractor\" checked v-model=\"formData.vehicleImage\">\n              <img\n                alt=\"Tractor\"\n                src=\"../assets/images/tracktor.png\"     \n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              \n              <p>Tractor</p>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Box Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/boxtruck.png\"\n                \n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Box Truck</span>\n            </label>\n          </div>\n\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Dump Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/dumptruck.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Dump Truck</span>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Two Trucks\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/twotrucks.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Two Trucks</span>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Pickup Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/pickup_truck.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Pickup Truck</span>\n            </label>\n          </div>\n          </div>\n          <div v-else> \n          <select\n            v-model=\"formData.vehicleType\"\n            class=\"lt-input\"\n            required\n            :class=\"{ 'has-error': formErrors.vehicleType }\"\n            @focus=\"onFocus('vehicleType')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('vehicleType')\"\n          >\n            <option value disabled>Select Other Vehicle/Trailer type</option>\n            <option v-for=\"item in vehicleTypes\" :key=\"item\" :value=\"item\">{{ item }}</option>\n          </select>\n        </div>\n          <div v-if=\"formErrors.vehicleType\" class=\"text-danger\">{{ formErrors.vehicleImage }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.zipCode\"\n            :class=\"{ 'has-error': formErrors.zipCode }\"\n            type=\"text\"\n             \n            class=\"lt-input\"\n            placeholder=\"Garaging Zip Code*\"\n            required\n            @focus=\"onFocus('zipCode')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('zipCode')\"\n          >\n\n          <div v-if=\"formErrors.zipCode\" class=\"text-danger\">{{ formErrors.zipCode }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col pt-3\">\n        <div class=\"form-group\">\n          <div>\n            <label class=\"d-block\">\n              <span class=\"label\">Radius of Travel (in miles)</span>\n\n              <input\n                v-model=\"radiusOfTravel\"\n                :class=\"{ 'has-error': formErrors.radiusOfTravel }\"\n                type=\"range\"\n                min=\"0\"\n                :max=\"radiuses.length - 1\"\n                step=\"1\"\n                class=\"form-control-range lt-input\"\n                placeholder=\"Radius of Travel*\"\n                required\n                @focus=\"onFocus('radiusOfTravel')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('radiusOfTravel')\"\n              >\n            </label>\n          </div>\n\n          <div class=\"text-center\">\n            <strong>{{ formData.radiusOfTravel }}</strong>\n          </div>\n\n          <div v-if=\"formErrors.radiusOfTravel\" class=\"text-danger\">{{ formErrors.radiusOfTravel }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col font-weight-bold\">Are you looking for Comprehesive & Collision Coverage?</div>\n\n      <div class=\"col text-right\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': formData.coverage }\"\n              @click=\"formData.coverage = true\"\n            >Yes</button>\n          </div>\n\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': !formData.coverage }\"\n              @click=\"formData.coverage = false\"\n            >No</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template v-if=\"formData.coverage\">\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">Current value of the vehicle/trailer</div>\n\n        <div class=\"col text-right\">\n          <input\n            v-model.trim=\"currentValueOfTransport\"\n            :class=\"{ 'has-error': formErrors.currentValue }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"$\"\n            required\n            @focus=\"onFocus('currentValue')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('currentValue')\"\n          >\n\n          <div v-if=\"formErrors.currentValue\" class=\"text-danger\">{{ formErrors.currentValue }}</div>\n        </div>\n      </div>\n\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">Deductible</div>\n\n        <div class=\"col text-right\">\n          <select\n            v-model=\"formData.deductible\"\n            :class=\"{ 'has-error': formErrors.deductible }\"\n            class=\"lt-input\"\n            required\n            @change=\"validateField('deductible')\"\n            @focus=\"onFocus('deductible')\"\n            @blur=\"onBlur\"\n          >\n            <option disabled value>Deductible*</option>\n            <option\n              v-for=\"item in deductibles\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n            >{{ item.name }}</option>\n          </select>\n\n          <div v-if=\"formErrors.deductible\" class=\"text-danger\">{{ formErrors.deductible }}</div>\n        </div>\n        \n      </div>\n    </template>\n    \n    \n  </div>\n  \n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport {mapState} from \"vuex\"\n\n\nexport default {\n  name: \"AccountInfoVehiclesAndTrailersItem\",\n  props: {\n    vehicleOrTrailer:{\n      type:String,\n      required:true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    },\n  },\n\n  beforeMount(){\n\n  console.log(\"this.vehicle\",this.vehicleOrTrailer)\n  if(this.vehicleOrTrailer == \"Vehicle\"){\n    this.vehicle = true\n  }\n  else{\n    this.vehicle = false\n  }\n  },\n  mounted(){\nconsole.log(\"this.vehicle\",this.vehicleOrTrailer)\nif(localStorage.getItem(\"token\")){\n    this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data[5]\n     let b = JSON.parse(a.val)[0]\n     console.log(\"bbb\",b)\n    //  for(var i=0;i<b.length;i++){\n    // this.formData.VIN = b[i].VIN;\n    // this.formData.make=b[i].make;\n    // this.formData.year=b[i].year;\n    // this.formData.zipCode=b[i].zipCode;\n    // this.formData.model=b[i].model;\n    // this.formData.vehicleImage=b[i].vehicleImage;\n    // this.formData.vehicleType=b[i].vehicleType;\n    // this.formData.radiusOfTravel=b[i].radiusOfTravel;\n    //  }\n\n    this.formData.VIN = b.VIN;\n    this.formData.make=b.make;\n    this.formData.year=b.year;\n    this.formData.zipCode=b.zipCode;\n    this.formData.model=b.model;\n    this.formData.vehicleImage=b.vehicleImage;\n    this.formData.vehicleType=b.vehicleType;\n    this.formData.radiusOfTravel=b.radiusOfTravel;\n       \n    // console.log(\"ba\",b)\n   \n}\nelse{\n  \n    }  },\n  data() {\n    return {\n      formData: {\n        VIN: \"\",\n        year: \"\",\n        make: \"\",\n        model: \"\",\n        vehicleType: \"\",\n        vehicleImage:\"\",\n        zipCode: \"\",\n        radiusOfTravel: 50,\n        coverage: false,\n        currentValue: \"\",\n        deductible: \"\",\n        \n      },vehicle:false,\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: \"Some hint\"\n      },\n      deductibles: [\n        { name: \"$ 500\", value: \"500\" },\n        { name: \"$ 1000\", value: \"1000\" },\n        { name: \"$ 2500\", value: \"2500\" },\n        { name: \"$ 5000\", value: \"5000\" }\n      ],\n      vehicleTypes: [\n        \"Auto Hauler\",\n        \"Bottom Dump Trailer\",\n        \"Bulk Commodity Trailer\",\n        \"Concession Trailer\",\n        \"Dry Freight Trailer\",\n        \"Dump Body Trailer / Transfer Box\",\n        \"Flatbed Trailer\",\n        \"Gooseneck Trailer\",\n        \"Horse Trailer\",\n        \"Livestock Trailer\",\n        \"Logging Trailer\",\n        \"Low-Boy Trailer\",\n        \"Pole Trailer\",\n        \"Refrigerated Dry Freight Trailer\",\n        \"Tank Trailer\",\n        \"Tilt Trailer\",\n        \"Travel Trailer\",\n        \"Utility Trailer\",\n        \"Bus\",\n        \"Car\",\n        \"Cargo Van\",\n        \"Hearse\",\n        \"Limousine\",\n        \"Mini Van\",\n        \"Motor Home\",\n        \"PASSENGER CAR\",\n        \"Sport Utility Vehicle\",\n        \"Emergency Vehicle\",\n        \"Military Vehicle\"\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, \"Unlimited\"],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, \"\")\n          // replace all commas to dots\n          .replace(/,/g, \".\");\n        this.formData.currentValue = price;\n      },\n      ...mapState([\n    'data'\n  ])\n    },\n\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    \"formData.coverage\"(val) {\n      if (!val) {\n        this.formData.currentValue = \"\";\n        this.formData.deductible = \"\";\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || \"\";\n    }\n  },\nupdated(){\nconsole.log(\"oo\",this.formData.vehicleImage)\n},\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        console.log(\"VIN EMPTY\")\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get(\"company/vin\", {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n        \n     console.log(\"data vin\",data.data)\n     this.formData.year = data.data.year;\n     this.formData.make = data.data.make;\n     this.formData.model = data.data.model;\n    this.formData.vehicleType = data.data.vehicleType;\n    console.log(\"this.formData.vehicleType\",this.formData.vehicleType)\n    // console.log(\"this.v\",this.vehicleTypes)\n    // console.log(\"data.data.vehicleType\",data.data.vehicleType)\n    // var type = this.vehicleTypes.filter(v => v == data.data.vehicleType)\n\n    // console.log(\"type\",type)\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.vehicles-and-trailers-form-item {\n  .label {\n    font-size: 1.2rem;\n  }\n\n  .get-data {\n    font-weight: 300;\n    font-size: 1.3rem;\n  }\n  .containera-hov {\n    position: relative;\n    width: 50%;\n  }\n\n  .image {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: auto;\n    transition: 0.5s ease;\n    backface-visibility: hidden;\n  }\n\n  .middle {\n    transition: 0.5s ease;\n    opacity: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    text-align: center;\n    background-color: #5e98f9;\n  }\n\n  .containera-hov:hover .image {\n    opacity: 0.8;\n    cursor: pointer;\n  }\n\n  .containera-hov:hover .middle {\n    opacity: 1;\n  }\n\n  .text {\n    background-color: #4caf50;\n    color: white;\n    font-size: 16px;\n    padding: 16px 32px;\n  }\n  [type=\"radio\"] {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* IMAGE STYLES */\n  [type=\"radio\"] + img {\n    cursor: pointer;\n  }\n\n  /* CHECKED STYLES */\n  [type=\"radio\"]:checked + img {\n    outline: 2px solid #5e98f9;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}