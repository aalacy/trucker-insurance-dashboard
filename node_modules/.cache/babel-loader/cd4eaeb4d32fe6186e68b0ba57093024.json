{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoPersonalInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoPersonalInfo.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ChatBoat from \"./ChatBoat.vue\";\nexport default {\n  name: \"AccountInfoPersonalInfo\",\n  components: {\n    \"chat-boat\": ChatBoat\n  },\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    this.formData.USDOT = localStorage.getItem(\"usdot\");\n    this.formData.company = localStorage.getItem(\"company\");\n    console.log(\"this.formData.address\", this.formData.address);\n    this.formData.address = localStorage.getItem([\"Physical address\"]);\n    console.log(\"this.formData.address\", this.formData.address);\n    this.formData.phone = localStorage.getItem(\"Phone\");\n  },\n  data: function data() {\n    return {\n      checked: true,\n      formData: {\n        // firstName: \"\",\n        // lastName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zip: \"\",\n        USDOT: \"\",\n        company: '',\n        phone: '',\n        address1: \"\",\n        city1: \"\",\n        state1: \"\",\n        zip1: \"\"\n      },\n      rules: {\n        // firstName: [required],\n        // lastName: [required],\n        address: [required],\n        city: [required],\n        state: [required],\n        zip: [required]\n      },\n      formErrors: {},\n      hints: {\n        address: \"Another hint\"\n      },\n      loading: false,\n      error: null\n    };\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data, personalInfo;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  personalInfo = data.data.personalInfo;\n\n                  if (personalInfo) {\n                    this.formData = _objectSpread({}, this.formData, personalInfo);\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.$router.replace({\n                    name: \"Home\"\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 13:\n                _context.prev = 13;\n                this.loading = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return API.post(\"company/save\", {\n                  key: \"personalInfo\",\n                  val: this.formData\n                });\n\n              case 8:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  // console.log(\"data\",data)\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                // console.error(err);\n                this.error = _context2.t0.message;\n\n              case 15:\n                _context2.prev = 15;\n                this.loading = false;\n                return _context2.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12, 15, 18]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",null]}