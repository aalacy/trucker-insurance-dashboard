{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoBusinessStructure.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoBusinessStructure.vue","mtime":1560858509431},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required // minLength\n} from '../validators.js';\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoBusinessStructure',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      formData: {\n        businessStructure: '',\n        businessClassification: [],\n        MC: '',\n        businessType: ''\n      },\n      rules: {\n        businessStructure: [required],\n        businessClassification: [function (val) {\n          return minLength(val, 1);\n        }],\n        businessType: [required]\n      },\n      formErrors: {},\n      hints: {\n        businessStructure: 'Some hint',\n        MC: 'Another hint'\n      },\n      businessStructures: ['Sole Proprietorship', 'Partnership', 'Corporation', 'Limited Liability Company'],\n      businessClassifications: [{\n        name: 'Private (Property)',\n        value: 'Private(Property)' // 'Private (Property)',\n\n      }],\n      businessTypes: ['Trucker - General Freight', 'Dirt, Sand & Gravel (DSG) Hauler', 'Excavating, Landscaping or Building Contractor', 'Trucker - Refrigerated Goods', 'For-Hire Trucking – Additional Specialty Classes', 'Agricultural Hauling', 'Livestock Hauling', 'Farmer', 'Auto Hauler', 'Towing', 'Courier', 'Expediter', 'For-Hire Livery – Taxi, Black Car, Limousine, Sightseeing/Guided Tours', 'Not-For-Hire Livery – Social Services, Courtesy (Hotel) Shuttle, Religious Organization, Child/Adult Daycare'],\n      loading: false,\n      error: null\n    };\n  },\n  created: function created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    onFocus: function onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit('update-hint', '');\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data, businessStructure;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return API.get('company/current');\n\n              case 5:\n                data = _context.sent;\n\n                if (data.status === 'OK') {\n                  businessStructure = data.data.businessStructure;\n\n                  if (businessStructure) {\n                    this.formData = _objectSpread({}, this.formData, businessStructure);\n                  }\n                } else if (data.status === 'ERROR') {\n                  this.$router.replace({\n                    name: 'Home'\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 13:\n                _context.prev = 13;\n                this.loading = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return API.post('company/save', {\n                  key: 'businessStructure',\n                  val: this.formData\n                });\n\n              case 8:\n                data = _context2.sent;\n\n                if (data.status === 'OK') {\n                  this.goNextForm();\n                } else if (data.status === 'ERROR') {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 16:\n                _context2.prev = 16;\n                this.loading = false;\n                return _context2.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12, 16, 19]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoBusinessStructure.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"business-structure-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Business Structure</h4>\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <select\n                  v-model=\"formData.businessStructure\"\n                  :class=\"{ 'has-error': formErrors.businessStructure }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('businessStructure')\"\n                  @focus=\"onFocus('businessStructure')\"\n                  @blur=\"onBlur\"\n                >\n                  <option disabled value=\"\">Business Structure*</option>\n                  <option\n                    v-for=\"item in businessStructures\"\n                    :key=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </option>\n                </select>\n\n                <div v-if=\"formErrors.businessStructure\" class=\"text-danger\">\n                  {{ formErrors.businessStructure }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <select\n                  v-model=\"formData.businessClassification\"\n                  :class=\"{ 'has-error': formErrors.businessClassification }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('businessClassification')\"\n                  @focus=\"onFocus('businessClassification')\"\n                  @blur=\"onBlur\"\n                >\n\n                  <option disabled value=\"\">Business Classification*</option>\n                  <option\n                    v-for=\"item in businessClassifications\"\n                    :key=\"item.value\"\n                    :value=\"item.value\"\n                  >\n                    {{ item.name }}\n                  </option>\n                </select>\n\n                <div\n                  v-if=\"formErrors.businessClassification\"\n                  class=\"text-danger\"\n                >\n                  {{ formErrors.businessClassification }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-9\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.MC\"\n                  :class=\"{ 'has-error': formErrors.MC }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"MC# (Optional)\"\n                  @focus=\"onFocus('MC')\"\n                  @blur=\"onBlur\"\n                />\n\n                <div v-if=\"formErrors.MC\" class=\"text-danger\">\n                  {{ formErrors.MC }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <h4 class=\"card-title form-sub-title\">Business Type</h4>\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <select\n                  v-model=\"formData.businessType\"\n                  :class=\"{ 'has-error': formErrors.businessType }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('businessType')\"\n                  @focus=\"onFocus('businessType')\"\n                  @blur=\"onBlur\"\n                >\n                  <option disabled value=\"\">Business Type*</option>\n                  <option\n                    v-for=\"item in businessTypes\"\n                    :key=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </option>\n                </select>\n\n                <div v-if=\"formErrors.businessType\" class=\"text-danger\">\n                  {{ formErrors.businessType }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3\">\n                  Personal Info\n                </div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n                @click=\"goNextForm\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">\n                  Cargo Group\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required\n  // minLength\n} from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoBusinessStructure',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        businessStructure: '',\n        businessClassification: [],\n        MC: '',\n        businessType: ''\n      },\n      rules: {\n        businessStructure: [required],\n        businessClassification: [val => minLength(val, 1)],\n        businessType: [required]\n      },\n      formErrors: {},\n      hints: {\n        businessStructure: 'Some hint',\n        MC: 'Another hint'\n      },\n      businessStructures: [\n        'Sole Proprietorship',\n        'Partnership',\n        'Corporation',\n        'Limited Liability Company'\n      ],\n      businessClassifications: [\n        { name: 'Private (Property)', value: 'Private(Property)' }\n        // 'Private (Property)',\n      ],\n      businessTypes: [\n        'Trucker - General Freight',\n        'Dirt, Sand & Gravel (DSG) Hauler',\n        'Excavating, Landscaping or Building Contractor',\n        'Trucker - Refrigerated Goods',\n        'For-Hire Trucking – Additional Specialty Classes',\n        'Agricultural Hauling',\n        'Livestock Hauling',\n        'Farmer',\n        'Auto Hauler',\n        'Towing',\n        'Courier',\n        'Expediter',\n        'For-Hire Livery – Taxi, Black Car, Limousine, Sightseeing/Guided Tours',\n        'Not-For-Hire Livery – Social Services, Courtesy (Hotel) Shuttle, Religious Organization, Child/Adult Daycare'\n      ],\n      loading: false,\n      error: null\n    };\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n    goPrevForm() {\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { businessStructure } = data.data;\n          if (businessStructure) {\n            this.formData = {\n              ...this.formData,\n              ...businessStructure\n            };\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'businessStructure',\n          val: this.formData\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n// .business-structure-form {\n//   .next-wrapper {\n//     display: flex;\n//     justify-content: space-between;\n\n//     .next-title {\n//       font-size: 1.2rem;\n//     }\n//   }\n// }\n</style>\n"],"sourceRoot":"src/components"}]}