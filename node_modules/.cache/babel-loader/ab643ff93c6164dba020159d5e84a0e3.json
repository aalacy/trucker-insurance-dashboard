{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailers.vue","mtime":1563263991686},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required, minLength } from '../validators.js';\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AccountInfoVehiclesAndTrailers\",\n  components: {\n    AccountInfoVehiclesAndTrailersItem: function AccountInfoVehiclesAndTrailersItem() {\n      return import(\n      /* webpackChunkName: \"AccountInfoVehiclesAndTrailersItem\" */\n      \"./AccountInfoVehiclesAndTrailersItem.vue\");\n    },\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      showmodel: false,\n      save: true,\n      vehiclesTrailers: [],\n      loading: false,\n      error: null,\n      vehicleOrTrailer: '',\n      formErrors: [],\n      type: ['Vehicle', 'Trailer']\n    };\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n    } else {\n      this.$store.dispatch('loadData', localStorage.getItem(\"uuid\"));\n      var a = this.$store.state.getData.data; //  let b = JSON.parse(a.val)\n\n      console.log(\"ba\", a);\n      this.save = true;\n    }\n  },\n  computed: _objectSpread({}, mapState(['data'])),\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress); // this.loadCompany();\n  },\n  methods: {\n    addForm: function addForm() {\n      this.vehiclesTrailers.push({\n        _uuid: uuidv4()\n      });\n      this.error = null;\n    },\n    removeForm: function removeForm(index) {\n      this.vehiclesTrailers.splice(index, 1);\n\n      if (!this.vehiclesTrailers.length) {\n        this.error = \"Please add at least one vehicle / trailer\";\n      }\n    },\n    updateHint: function updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var vehicleForms, allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setDataFromForms();\n                vehicleForms = this.$refs.vehicleForm;\n\n                if (vehicleForms.length) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                allFormAreValid = vehicleForms.every(function (formRef) {\n                  return formRef.validateForm();\n                });\n\n                if (allFormAreValid) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 9;\n                _context.next = 12;\n                return API.post(\"company/save\", {\n                  key: \"vehiclesTrailers\",\n                  val: this.vehiclesTrailers.map(function (v) {\n                    var vehicle = _objectSpread({}, v);\n\n                    delete vehicle._uuid;\n                    return vehicle;\n                  }),\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 12:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (this.showmodel) {\n                    this.showmodel = false;\n                  } else {\n                    this.showmodel = true;\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](9);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 20:\n                _context.prev = 20;\n                this.loading = false;\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 16, 20, 23]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, vehiclesTrailers;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  vehiclesTrailers = data.data.vehiclesTrailers;\n\n                  if (vehiclesTrailers) {\n                    // console.log(\"vehiclesTrailers\", uuidv4());\n                    console.log(\"vehiclesTrailers\", vehiclesTrailers);\n                    this.vehiclesTrailers = vehiclesTrailers.map(function (v) {\n                      return _objectSpread({}, v, {\n                        _uuid: uuidv4()\n                      });\n                    });\n                  } else {\n                    this.addForm();\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false;\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    setDataFromForms: function setDataFromForms() {\n      var vehiclesTrailers = [];\n      this.$refs.vehicleForm.forEach(function (formRef) {\n        var formData = formRef.getFormData();\n        vehiclesTrailers.push(formData);\n      });\n      this.vehiclesTrailers = vehiclesTrailers;\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var vehicleForms, allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setDataFromForms();\n                vehicleForms = this.$refs.vehicleForm;\n\n                if (vehicleForms.length) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                allFormAreValid = vehicleForms.every(function (formRef) {\n                  return formRef.validateForm();\n                });\n\n                if (allFormAreValid) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                this.loading = true;\n                this.error = null;\n                _context3.prev = 9;\n                _context3.next = 12;\n                return API.post(\"company/save\", {\n                  key: \"vehiclesTrailers\",\n                  val: this.vehiclesTrailers.map(function (v) {\n                    var vehicle = _objectSpread({}, v);\n\n                    delete vehicle._uuid;\n                    return vehicle;\n                  }),\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 12:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context3.next = 20;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](9);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 20:\n                _context3.prev = 20;\n                this.loading = false;\n                return _context3.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[9, 16, 20, 23]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoVehiclesAndTrailers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Vehicle(s) & Trailer(s)</h4>\n          <account-info-vehicles-and-trailers-item\n            v-for=\"(item, index) in vehiclesTrailers\"\n            ref=\"vehicleForm\"\n            :key=\"item._uuid\"\n            :index=\"index\"\n            :vehicle=\"item\"\n            :vehicleOrTrailer=\"vehicleOrTrailer\"\n            class=\"mb-5\"\n            @update-hint=\"updateHint\"\n            @remove-form=\"removeForm\"\n          />\n\n          <hr>\n\n          <div class=\"row align-items-center mb-3\">\n            <div class=\"col font-weight-bold\">Add another vehicle or trailer</div>\n         \n          </div>\n          <div class=\"row\">      <div class=\"d-flex align-itens-between col\">\n               <select\n                  v-model=\"vehicleOrTrailer\"\n                  :class=\"{ 'has-error': formErrors.vehicleOrTrailer }\"\n                  class=\"lt-input \"\n                  required\n                 \n                >\n                  <option disabled value=\"\">Vehicle or Trailer</option>\n                  <option\n                    v-for=\"item in type\"\n                    :key=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </option>\n                </select>\n              <button type=\"button\" class=\"lt-button px-3\" @click=\"addForm\">+</button>\n            </div></div>\n       \n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Cargo Hauled</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white mob-2\">ELD Provider</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n   minLength\n} from '../validators.js';\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport {mapState} from \"vuex\"\nexport default {\n  name: \"AccountInfoVehiclesAndTrailers\",\n  components: {\n    AccountInfoVehiclesAndTrailersItem: () =>\n      import(/* webpackChunkName: \"AccountInfoVehiclesAndTrailersItem\" */\n      \"./AccountInfoVehiclesAndTrailersItem.vue\"),\n    modelLogin: ModalLogin\n  },\n\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      vehiclesTrailers: [],\n      loading: false,\n      error: null,\n      vehicleOrTrailer:'',\n      formErrors:[],\n      type:[\n        'Vehicle',\n        'Trailer'\n      ]\n    };\n  },\n mounted(){\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data\n    //  let b = JSON.parse(a.val)\n    console.log(\"ba\",a)\n     this.save = true\n   }\n },\n computed:{\n...mapState([\n    'data'\n  ])\n} ,\n   updated(){\nif(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.loadCompany();\n  },\n  methods: {\n    addForm() {\n      this.vehiclesTrailers.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.vehiclesTrailers.splice(index, 1);\n\n      if (!this.vehiclesTrailers.length) {\n        this.error = \"Please add at least one vehicle / trailer\";\n      }\n      \n    },\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n     onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n     validateField(fieldName) {\n      validateField(fieldName, this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async show() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n       try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n            userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n           if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    \n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { vehiclesTrailers } = data.data;\n\n          if (vehiclesTrailers) {\n            // console.log(\"vehiclesTrailers\", uuidv4());\n            console.log(\"vehiclesTrailers\", vehiclesTrailers);\n            this.vehiclesTrailers = vehiclesTrailers.map(v => ({...v,_uuid: uuidv4()}));\n          }else{\n                        this.addForm();\n\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDataFromForms() {\n      let vehiclesTrailers = [];\n\n      this.$refs.vehicleForm.forEach(formRef => {\n        let formData = formRef.getFormData();\n        vehiclesTrailers.push(formData);\n      });\n\n      this.vehiclesTrailers = vehiclesTrailers;\n    },\n    async updateCompany() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n// .vehicles-and-trailers-form {\n//   // .next-wrapper {\n//   //   display: flex;\n//   //   justify-content: space-between;\n\n//   //   .next-title {\n//   //     font-size: 1.2rem;\n//   //   }\n//   // }\n// }\n</style>\n"],"sourceRoot":"src/components"}]}