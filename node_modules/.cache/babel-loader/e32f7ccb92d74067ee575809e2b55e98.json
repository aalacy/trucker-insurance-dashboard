{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoVehiclesAndTrailersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoVehiclesAndTrailersItem.vue","mtime":1560863923554},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required, requiredWith } from '../validators.js';\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoVehiclesAndTrailersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      formData: {\n        VIN: '',\n        year: '',\n        make: '',\n        model: '',\n        vehicleType: '',\n        zipCode: '',\n        radiusOfTravel: 100,\n        coverage: false,\n        currentValue: '',\n        deductible: ''\n      },\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [function (val) {\n          return requiredWith(val, _this.formData.coverage);\n        }],\n        deductible: [function (val) {\n          return requiredWith(val, _this.formData.coverage);\n        }]\n      },\n      formErrors: {},\n      hints: {\n        VIN: 'Some asshint'\n      },\n      deductibles: [{\n        name: '$ 500',\n        value: '500'\n      }, {\n        name: '$ 1000',\n        value: '1000'\n      }, {\n        name: '$ 2500',\n        value: '2500'\n      }, {\n        name: '$ 5000',\n        value: '5000'\n      }],\n      vehicleTypes: ['Auto Hauler', 'Bottom Dump Trailer', 'Bulk Commodity Trailer', 'Concession Trailer', 'Dry Freight Trailer', 'Dump Body Trailer / Transfer Box', 'Flatbed Trailer', 'Gooseneck Trailer', 'Horse Trailer', 'Livestock Trailer', 'Logging Trailer', 'Low-Boy Trailer', 'Pole Trailer', 'Refrigerated Dry Freight Trailer', 'Tank Trailer', 'Tilt Trailer', 'Travel Trailer', 'Utility Trailer', 'Bus', 'Car', 'Cargo Van', 'Hearse', 'Limousine', 'Mini Van', 'Motor Home', 'Passenger Van', 'Pickup Truck', 'Sport Utility Vehicle', 'Truck', 'Emergency Vehicle', 'Military Vehicle'],\n      radiuses: [0, 100, 200, 300, 500, 1000, 'Unlimited'],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get: function get() {\n        return \"$ \".concat(this.formData.currentValue);\n      },\n      set: function set(val) {\n        var price = val // replace dollars and spaces to empty string\n        .replace(/[$\\s]/g, '') // replace all commas to dots\n        .replace(/,/g, '.');\n        this.formData.currentValue = price;\n      }\n    },\n    radiusOfTravel: {\n      get: function get() {\n        var _this2 = this;\n\n        var index = this.radiuses.findIndex(function (radius) {\n          return radius == _this2.formData.radiusOfTravel;\n        });\n        return index > -1 ? index : 1;\n      },\n      set: function set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    'formData.coverage': function formDataCoverage(val) {\n      if (!val) {\n        this.formData.currentValue = '';\n        this.formData.deductible = '';\n      }\n    }\n  },\n  created: function created() {\n    this.formData = _objectSpread({}, this.formData, this.vehicle);\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || '';\n    }\n  },\n  methods: {\n    getFormData: function getFormData() {\n      return this.formData;\n    },\n    removeForm: function removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    getVinData: function () {\n      var _getVinData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.formData.VIN) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.loading = true;\n                _context.prev = 3;\n                _context.next = 6;\n                return API.get('company/vin', {\n                  vin: this.formData.VIN\n                });\n\n              case 6:\n                data = _context.sent;\n                this.formData = _objectSpread({}, this.formData, data.data);\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 14:\n                _context.prev = 14;\n                this.loading = false;\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 10, 14, 17]]);\n      }));\n\n      function getVinData() {\n        return _getVinData.apply(this, arguments);\n      }\n\n      return getVinData;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoVehiclesAndTrailersItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form-item container-fluid mob-2\">\n    <div class=\"row\">\n      <!-- <div class=\"col\">\n        <h2 class=\"h5\">Trailer #{{ index + 1 }}</h2>\n      </div> -->\n\n      <!-- <div class=\"col text-right\">\n        <a class=\"pointer\" @click=\"removeForm(index)\">Remove</a>\n      </div> -->\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.VIN\"\n            :class=\"{ 'has-error': formErrors.VIN }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"VIN #*\"\n            required\n            @focus=\"onFocus('VIN')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('VIN')\"\n          />\n\n          <div v-if=\"formErrors.VIN\" class=\"text-danger\">\n            {{ formErrors.VIN }}\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class=\"col-4\">\n        <button\n          :disabled=\"loading\"\n          type=\"button\"\n          class=\"lt-button lt-button-main get-data\"\n          @click=\"getVinData\"\n        >\n          {{ loading ? 'Loading...' : 'Get Data' }}\n        </button>\n      </div> -->\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.year\"\n            :class=\"{ 'has-error': formErrors.year }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Year*\"\n            required\n            @focus=\"onFocus('year')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('year')\"\n          > <option value=\"\" disabled> year </option>\n          <option>Year*</option></select>\n\n          <div v-if=\"formErrors.year\" class=\"text-danger\">\n            {{ formErrors.year }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.make\"\n            :class=\"{ 'has-error': formErrors.make }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Make*\"\n            required\n            @focus=\"onFocus('make')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('make')\"\n          ><option value=\"\" disabled> Make </option>\n          <option>Make*</option></select>\n        \n\n          <div v-if=\"formErrors.make\" class=\"text-danger\">\n            {{ formErrors.make }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.model\"\n            :class=\"{ 'has-error': formErrors.model }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Model*\"\n            required\n            @focus=\"onFocus('model')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('model')\"\n          ><option value=\"\" disabled> Model </option>\n          <option>Model</option></select>\n\n          <div v-if=\"formErrors.model\" class=\"text-danger\">\n            {{ formErrors.model }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row  border-top\">\n      <div class=\"col-10 pt-4\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.vehicleType\"\n            class=\"lt-input\"\n            required\n            :class=\"{ 'has-error': formErrors.vehicleType }\"\n            @focus=\"onFocus('vehicleType')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('vehicleType')\"\n          >\n            <option value=\"\" disabled>Select Vehicle/Trailer type</option>\n            <option v-for=\"item in vehicleTypes\" :key=\"item\" :value=\"item\">\n              {{ item }}\n            </option>\n          </select>\n <img src=\"https://picsum.photos/g/100/100\" alt=\"\" style=\"width:100px;\"  class=\"d-inline mt-2  mr-2\"/> \n          <div v-if=\"formErrors.vehicleType\" class=\"text-danger\">\n            {{ formErrors.vehicleType }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.zipCode\"\n            :class=\"{ 'has-error': formErrors.zipCode }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Garaging Zip Code*\"\n            required\n            @focus=\"onFocus('zipCode')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('zipCode')\"\n          />\n\n          <div v-if=\"formErrors.zipCode\" class=\"text-danger\">\n            {{ formErrors.zipCode }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col pt-3\">\n        <div class=\"form-group\">\n          <div>\n            <label class=\"d-block\">\n              <span class=\"label\">Radius of Travel (in miles)</span>\n\n              <input\n                v-model=\"radiusOfTravel\"\n                :class=\"{ 'has-error': formErrors.radiusOfTravel }\"\n                type=\"range\"\n                min=\"0\"\n                :max=\"radiuses.length - 1\"\n                step=\"1\"\n                class=\"form-control-range lt-input\"\n                placeholder=\"Radius of Travel*\"\n                required\n                @focus=\"onFocus('radiusOfTravel')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('radiusOfTravel')\"\n              />\n            </label>\n          </div>\n\n          <div class=\"text-center\">\n            <strong>{{ formData.radiusOfTravel }}</strong>\n          </div>\n\n          <div v-if=\"formErrors.radiusOfTravel\" class=\"text-danger\">\n            {{ formErrors.radiusOfTravel }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col font-weight-bold\">\n        Are you looking for Comprehesive & Collision Coverage?\n      </div>\n\n      <div class=\"col text-right\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': formData.coverage }\"\n              @click=\"formData.coverage = true\"\n            >\n              Yes\n            </button>\n          </div>\n\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': !formData.coverage }\"\n              @click=\"formData.coverage = false\"\n            >\n              No\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template v-if=\"formData.coverage\">\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">\n          Current value of the vehicle/trailer\n        </div>\n\n        <div class=\"col text-right\">\n          <input\n            v-model.trim=\"currentValueOfTransport\"\n            :class=\"{ 'has-error': formErrors.currentValue }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"$\"\n            required\n            @focus=\"onFocus('currentValue')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('currentValue')\"\n          />\n\n          <div v-if=\"formErrors.currentValue\" class=\"text-danger\">\n            {{ formErrors.currentValue }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">\n          Deductible\n        </div>\n\n        <div class=\"col text-right\">\n          <select\n            v-model=\"formData.deductible\"\n            :class=\"{ 'has-error': formErrors.deductible }\"\n            class=\"lt-input\"\n            required\n            @change=\"validateField('deductible')\"\n            @focus=\"onFocus('deductible')\"\n            @blur=\"onBlur\"\n          >\n            <option disabled value=\"\">Deductible*</option>\n            <option\n              v-for=\"item in deductibles\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n            >\n              {{ item.name }}\n            </option>\n          </select>\n\n          <div v-if=\"formErrors.deductible\" class=\"text-danger\">\n            {{ formErrors.deductible }}\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoVehiclesAndTrailersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      formData: {\n        VIN: '',\n        year: '',\n        make: '',\n        model: '',\n        vehicleType: '',\n        zipCode: '',\n        radiusOfTravel: 100,\n        coverage: false,\n        currentValue: '',\n        deductible: ''\n      },\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: 'Some asshint'\n      },\n      deductibles: [\n        { name: '$ 500', value: '500' },\n        { name: '$ 1000', value: '1000' },\n        { name: '$ 2500', value: '2500' },\n        { name: '$ 5000', value: '5000' }\n      ],\n      vehicleTypes: [\n        'Auto Hauler',\n        'Bottom Dump Trailer',\n        'Bulk Commodity Trailer',\n        'Concession Trailer',\n        'Dry Freight Trailer',\n        'Dump Body Trailer / Transfer Box',\n        'Flatbed Trailer',\n        'Gooseneck Trailer',\n        'Horse Trailer',\n        'Livestock Trailer',\n        'Logging Trailer',\n        'Low-Boy Trailer',\n        'Pole Trailer',\n        'Refrigerated Dry Freight Trailer',\n        'Tank Trailer',\n        'Tilt Trailer',\n        'Travel Trailer',\n        'Utility Trailer',\n        'Bus',\n        'Car',\n        'Cargo Van',\n        'Hearse',\n        'Limousine',\n        'Mini Van',\n        'Motor Home',\n        'Passenger Van',\n        'Pickup Truck',\n        'Sport Utility Vehicle',\n        'Truck',\n        'Emergency Vehicle',\n        'Military Vehicle'\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, 'Unlimited'],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, '')\n          // replace all commas to dots\n          .replace(/,/g, '.');\n        this.formData.currentValue = price;\n      }\n    },\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    'formData.coverage'(val) {\n      if (!val) {\n        this.formData.currentValue = '';\n        this.formData.deductible = '';\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || '';\n    }\n  },\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n    onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get('company/vin', {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.vehicles-and-trailers-form-item {\n  .label {\n    font-size: 1.2rem;\n  }\n\n  .get-data {\n    font-weight: 300;\n    font-size: 1.3rem;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}