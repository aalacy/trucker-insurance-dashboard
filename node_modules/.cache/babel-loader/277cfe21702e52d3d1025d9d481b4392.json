{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js!/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoCargoHauled.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoCargoHauled.vue","mtime":1563263278756},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"/Users/admin/Desktop/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { validateField as _validateField, validateForm as _validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nexport default {\n  name: \"AccountInfoCargoHauled\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    modelLogin: ModalLogin\n  },\n  data: function data() {\n    return {\n      showmodel: false,\n      save: true,\n      cargoGroup: [],\n      formData: {\n        haulType: {}\n      },\n      rules: {\n        haulType: [function (val) {\n          return minLength(val, 1, \"Please select Haul Type\");\n        }]\n      },\n      formErrors: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({}, mapState(\"cargo\", [\"cargoGroups\"]), {\n    selectedCargoGroups: function selectedCargoGroups() {\n      var _this = this;\n\n      return this.cargoGroups.filter(function (group) {\n        return _this.cargoGroup.indexOf(group.value) > -1;\n      }); // console.log(\"this.cargoGroup\",this.cargoGroup)\n    },\n    cargoHauledMap: function cargoHauledMap() {\n      var _this2 = this;\n\n      var map = {};\n\n      var _loop = function _loop(cargoGroupValue) {\n        map[cargoGroupValue] = {};\n        var haulTypes = _this2.formData.haulType[cargoGroupValue];\n        haulTypes.forEach(function (haulType) {\n          map[cargoGroupValue][haulType] = true;\n        });\n      };\n\n      for (var cargoGroupValue in this.formData.haulType) {\n        _loop(cargoGroupValue);\n      }\n\n      return map;\n    }\n  }, mapState(['data'])),\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      this.$store.dispatch('loadData', localStorage.getItem(\"uuid\"));\n      var a = this.$store.state.getData.data[2]; // let b = JSON.parse(a.val).haulType\n\n      console.log(\"aaa\", JSON.parse(a.val)); // let c =[]\n\n      for (var i = 0; i < this.cargoGroups.length; i++) {\n        for (var j = 0; j < this.cargoGroups[i].cargoHauled.length; j++) {\n          console.log(\"aaass\", this.cargoGroups[i].cargoHauled[j].value);\n        }\n      } //  let filteredKeywords = c.filter((word)=> b.includes(word));\n      // console.log(\"filteredKeywords\",filteredKeywords);\n      // for(var i=0;i<filteredKeywords.length;i++){\n      // this.selectCargoGroup(filteredKeywords[i])\n      // console.log(\"aaass\",this.cargoGroups[0].cargoHauled[0].value)\n      // for(var i=0;i<)\n\n    } else {\n      this.save = true;\n    }\n  },\n  methods: {\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 5;\n                _context.next = 8;\n                return API.post(\"company/save\", {\n                  key: \"cargoHauled\",\n                  val: this.formData,\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 8:\n                data = _context.sent;\n                console.log(\"show\", this.formData);\n                console.log(\"data.sattus\", data);\n\n                if (data.status === \"OK\") {\n                  if (this.showmodel) {\n                    this.showmodel = false;\n                  } else {\n                    this.showmodel = true;\n                  }\n                } else if (data.status === \"ERROR\") {\n                  // this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                  console.log(\"error\", data);\n                }\n\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](5);\n                console.error(_context.t0); // this.showmodel = true;\n\n                this.error = _context.t0.message;\n\n              case 18:\n                _context.prev = 18;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 14, 18, 21]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    selectHaulType: function selectHaulType(cargoGroupValue, haulTypeValue) {\n      if (!this.formData.haulType[cargoGroupValue]) {\n        this.$set(this.formData.haulType, cargoGroupValue, []);\n      }\n\n      var haulTypeIndex = this.formData.haulType[cargoGroupValue].indexOf(haulTypeValue);\n      console.log(\"cargoGroupValue\", cargoGroupValue);\n      console.log(\"haulTypeValue\", haulTypeValue);\n\n      if (haulTypeIndex > -1) {\n        this.formData.haulType[cargoGroupValue].splice(haulTypeIndex, 1);\n\n        if (!this.formData.haulType[cargoGroupValue].length) {\n          this.$delete(this.formData.haulType, cargoGroupValue);\n        }\n      } else {\n        this.formData.haulType[cargoGroupValue].push(haulTypeValue);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, _data$data$a, cargoGroupTab, cargoHauled, cargoGroup, groupData;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n                console.log(\"data\", data);\n\n                if (data.status === \"OK\") {\n                  _data$data$a = data.data.a, cargoGroupTab = _data$data$a.cargoGroup, cargoHauled = _data$data$a.cargoHauled;\n                  cargoGroup = cargoGroupTab.cargoGroup;\n                  groupData = data.data.a.cargoGroup;\n                  this.cargoGroup = groupData.cargoGroup;\n\n                  if (cargoHauled) {\n                    this.formData = _objectSpread({}, this.formData, cargoHauled);\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: \"Home\" });\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 14:\n                _context2.prev = 14;\n                this.loading = false;\n                return _context2.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10, 14, 17]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context3.prev = 5;\n                _context3.next = 8;\n                return API.post(\"company/save\", {\n                  key: \"cargoHauled\",\n                  val: this.formData,\n                  userId: localStorage.getItem(\"userId\"),\n                  uuid: localStorage.getItem(\"uuid\")\n                });\n\n              case 8:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](5);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 16:\n                _context3.prev = 16;\n                this.loading = false;\n                return _context3.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 12, 16, 19]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",null]}