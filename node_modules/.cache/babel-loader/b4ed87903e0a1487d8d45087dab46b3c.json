{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoBusinessStructure.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoBusinessStructure.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ModalLogin from \"./ModalLogin.vue\";\nimport { validateField as _validateField, validateForm as _validateForm, required, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nimport { constants } from \"fs\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoBusinessStructure\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    modelLogin: ModalLogin\n  },\n  data: function data() {\n    return {\n      final_uuid: \"\",\n      uuid: \"\",\n      showmodel: false,\n      save: true,\n      userData: \"\",\n      formData: {\n        businessStructure: \"\",\n        // businessClassification: '',\n        MC: \"\",\n        businessType: \"\"\n      },\n      rules: {\n        businessStructure: [required],\n        // businessClassification: [required],\n        businessType: [required]\n      },\n      formErrors: {},\n      hints: {\n        businessStructure: \"Please select Business Structure from below List\",\n        businessType: \"It’s very important to make the correct selection here. Before purchasing a policy, confirm that business type is accurate\",\n        // businessClassification:\"Please add Business Classfication here\",\n        MC: \"Please add MC number\"\n      },\n      businessStructures: [\"Sole Proprietorship\", \"Partnership\", \"Corporation\", \"Limited Liability Company\"],\n      // businessClassifications: [\n      //  'Private(Proerty)'\n      //   // { name: 'Private (Property)', value: 'Private(Property)' }\n      //   // 'Private (Property)',\n      // ],\n      businessTypes: [\"Trucker - General Freight\", \"Dirt, Sand & Gravel (DSG) Hauler\", \"Excavating, Landscaping or Building Contractor\", \"Trucker - Refrigerated Goods\", \"For-Hire Trucking – Additional Specialty Classes\", \"Agricultural Hauling\", \"Livestock Hauling\", \"Farmer\", \"Auto Hauler\", \"Towing\", \"Courier\", \"Expediter\", \"For-Hire Livery – Taxi, Black Car, Limousine, Sightseeing/Guided Tours\", \"Not-For-Hire Livery – Social Services, Courtesy (Hotel) Shuttle, Religious Organization, Child/Adult Daycare\"],\n      loading: false,\n      error: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i <= len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"businessStructure\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n              _this.formData.businessStructure = b.businessStructure;\n              _this.formData.businessType = b.businessType;\n              _this.formData.MC = b.MC;\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i <= len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"businessStructure\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n              _this.formData.businessStructure = b.businessStructure;\n              _this.formData.businessType = b.businessType;\n              _this.formData.MC = b.MC;\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  computed: _objectSpread({}, mapState([\"data\"])),\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        _this2.show();\n\n        if (willDelete) {\n          _this2.$router.push({\n            name: \"AccountInfoBusinessStructure\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, temp_uuid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  temp_uuid = this.userData;\n                } else {\n                  temp_uuid = this.uuid;\n                }\n\n                _context.prev = 6;\n                _context.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"businessStructure\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: temp_uuid\n                });\n\n              case 9:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (!localStorage.getItem(\"token\")) {\n                    if (this.showmodel) {\n                      this.showmodel = false;\n                    } else {\n                      this.showmodel = true;\n                    }\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 17:\n                _context.prev = 17;\n                this.loading = false;\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13, 17, 20]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, businessStructure;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  businessStructure = data.data.businessStructure;\n                  this.uuid = data.data.b;\n\n                  if (businessStructure) {\n                    this.formData = _objectSpread({}, this.formData, {}, businessStructure);\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false;\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                }\n\n                _context3.prev = 6;\n                _context3.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"businessStructure\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: this.final_uuid\n                });\n\n              case 9:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.final_uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {});\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](6);\n                this.error = _context3.t0.message;\n\n              case 17:\n                _context3.prev = 17;\n                this.loading = false;\n                return _context3.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 14, 17, 20]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoBusinessStructure.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"business-structure-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Business Structure</h4>\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\">\n                <select\n                  v-model=\"formData.businessStructure\"\n                  :class=\"{ 'has-error': formErrors.businessStructure }\"\n                  class=\"lt-input\"\n                  @blur=\"onBlur\"\n                   @click=\"onFocus('businessStructure')\"\n                  required\n                  @change=\"validateField('businessStructure')\"\n                  \n                  \n                >\n                <!-- @focus=\"onFocus('businessStructure')\" -->\n                <!-- @blur=\"onBlur\" -->\n                  <option value>Business Structure*</option>\n                  <option v-for=\"item in businessStructures\" :key=\"item\" :value=\"item\">{{ item }}</option>\n                </select>\n\n                <div\n                  v-if=\"formErrors.businessStructure\"\n                  class=\"text-danger\"\n                >{{ formErrors.businessStructure }}</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- <div class=\"row\"> -->\n          <!-- <div class=\"col-12\"> -->\n          <!-- <div class=\"form-group\"> -->\n          <!-- <select\n                  v-model=\"formData.businessClassification\"\n                  :class=\"{ 'has-error': formErrors.businessClassification }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('businessClassification')\"\n                  @focus=\"onFocus('businessClassification')\"\n                  @blur=\"onBlur\"\n                >\n\n                  <option disabled value=\"\">Business Classification*</option>\n                  <option\n                    v-for=\"item in businessClassifications\"\n                    :key=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </option>\n          </select>-->\n          <!-- <input\n                  v-model=\"formData.businessClassification\"\n                  :class=\"{ 'has-error': formErrors.businessClassification }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"Business Classification# (Optional)\"\n                  @focus=\"onFocus('businessClassification')\"\n                  @blur=\"onBlur\"\n                />\n                <div\n                  v-if=\"formErrors.businessClassification\"\n                  class=\"text-danger\"\n                >\n                  {{ formErrors.businessClassification }}\n                </div>\n              </div>\n            </div>\n          </div>-->\n\n          <div class=\"row\">\n            <div class=\"col-9\">\n              <div class=\"form-group\">\n                <input\n                  v-model=\"formData.MC\"\n                  :class=\"{ 'has-error': formErrors.MC }\"\n                  type=\"text\"\n                  class=\"lt-input\"\n                  placeholder=\"MC# (Optional)\"\n                  @focus=\"onFocus('MC')\"\n                  @blur=\"onBlur\"\n                >\n\n                <div v-if=\"formErrors.MC\" class=\"text-danger\">{{ formErrors.MC }}</div>\n              </div>\n            </div>\n          </div>\n\n          <h4 class=\"card-title form-sub-title\">Business Type</h4>\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group\" @click=\"onFocus('businessType')\">\n                <select\n                  v-model=\"formData.businessType\"\n                  :class=\"{ 'has-error': formErrors.businessType }\"\n                  class=\"lt-input\"\n                  required\n                  @change=\"validateField('businessType')\"\n                  \n                  @blur=\"onBlur\"\n                >\n                <!-- @focus=\"onFocus('businessType')\" -->\n                  <option value>Business Type*</option>\n                  <option v-for=\"item in businessTypes\" :key=\"item\" :value=\"item\">{{ item }}</option>\n                </select>\n\n                <div\n                  v-if=\"formErrors.businessType\"\n                  class=\"text-danger\"\n                >{{ formErrors.businessType }}</div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3\">Business Info</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">Cargo Group</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n      <span class=\"save-hover\">Save & Continue</span>\n    </div>\n    <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n      <span class=\"save-hover\">Save Changes</span>\n    </div>\n    <div class v-if=\"showmodel\">\n      <modelLogin/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ModalLogin from \"./ModalLogin.vue\";\nimport {\n  validateField,\n  validateForm,\n  required,\n  minLength\n} from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nimport { constants } from \"fs\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"AccountInfoBusinessStructure\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    \n    modelLogin: ModalLogin\n  },\n  data() {\n    return {\n      final_uuid: \"\",\n      uuid: \"\",\n      showmodel: false,\n      save: true,\n      userData: \"\",\n      formData: {\n        businessStructure: \"\",\n        // businessClassification: '',\n        MC: \"\",\n        businessType: \"\"\n      },\n      rules: {\n        businessStructure: [required],\n        // businessClassification: [required],\n        businessType: [required]\n      },\n      formErrors: {},\n      hints: {\n        businessStructure: \"Please select Business Structure from below List\",\n        businessType:\n          \"It’s very important to make the correct selection here. Before purchasing a policy, confirm that business type is accurate\",\n        // businessClassification:\"Please add Business Classfication here\",\n        MC: \"Please add MC number\"\n      },\n      businessStructures: [\n        \"Sole Proprietorship\",\n        \"Partnership\",\n        \"Corporation\",\n        \"Limited Liability Company\"\n      ],\n\n      // businessClassifications: [\n      //  'Private(Proerty)'\n\n      //   // { name: 'Private (Property)', value: 'Private(Property)' }\n      //   // 'Private (Property)',\n      // ],\n      businessTypes: [\n        \"Trucker - General Freight\",\n        \"Dirt, Sand & Gravel (DSG) Hauler\",\n        \"Excavating, Landscaping or Building Contractor\",\n        \"Trucker - Refrigerated Goods\",\n        \"For-Hire Trucking – Additional Specialty Classes\",\n        \"Agricultural Hauling\",\n        \"Livestock Hauling\",\n        \"Farmer\",\n        \"Auto Hauler\",\n        \"Towing\",\n        \"Courier\",\n        \"Expediter\",\n        \"For-Hire Livery – Taxi, Black Car, Limousine, Sightseeing/Guided Tours\",\n        \"Not-For-Hire Livery – Social Services, Courtesy (Hotel) Shuttle, Religious Organization, Child/Adult Daycare\"\n      ],\n      loading: false,\n      error: null\n    };\n  },\n\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(res => {\n          let len = this.$store.state.getData.data;\n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"businessStructure\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              \n              this.formData.businessStructure = b.businessStructure;\n              this.formData.businessType = b.businessType;\n              this.formData.MC = b.MC;\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      \n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(res => {\n          let len = this.$store.state.getData.data;\n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"businessStructure\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              \n              this.formData.businessStructure = b.businessStructure;\n              this.formData.businessType = b.businessType;\n              this.formData.MC = b.MC;\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  computed: {\n    ...mapState([\"data\"])\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n\n  methods: {\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n        \n        this.show();\n        if (willDelete) {\n          this.$router.push({ name: \"AccountInfoBusinessStructure\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n\n    async show() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n      var temp_uuid;\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n        \n      } else {\n        temp_uuid = this.uuid;\n        \n      }\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"businessStructure\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { businessStructure } = data.data;\n          this.uuid = data.data.b;\n          if (businessStructure) {\n            this.formData = {\n              ...this.formData,\n              ...businessStructure\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n        \n      } else {\n        this.final_uuid = this.uuid;\n\n      }\n      try {\n\n        let data = await API.post(\"company/save\", {\n          key: \"businessStructure\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.final_uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n            \n          });\n      } catch (err) {\n        \n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style>\nselect{\n  position: relative;\n  -webkit-appearance: none;\n  background: url('../assets/images/arrow-dropdown.png') no-repeat 96% center;\n  -moz-appearance: none;\n}\n</style>\n"],"sourceRoot":"src/components"}]}