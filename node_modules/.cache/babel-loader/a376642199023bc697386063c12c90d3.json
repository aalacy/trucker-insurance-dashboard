{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoCargoGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoCargoGroup.vue","mtime":1560855180793},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectSpread from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { validateField as _validateField, validateForm as _validateForm, minLength } from '../validators.js';\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoCargoGroup',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      formData: {\n        cargoGroup: []\n      },\n      rules: {\n        cargoGroup: [function (val) {\n          return minLength(val, 1, 'Please select Cargo Group');\n        }]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({}, mapState('cargo', ['cargoGroups']), {\n    cargoGroupMap: function cargoGroupMap() {\n      var map = {};\n      this.formData.cargoGroup.forEach(function (val) {\n        map[val] = true;\n      });\n      return map;\n    }\n  }),\n  created: function created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    selectCargoGroup: function selectCargoGroup(cargoGroupValue) {\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(function (val) {\n          return val !== cargoGroupValue;\n        });\n        this.$emit('update-hint', '');\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit('update-hint', this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data, cargoGroup;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return API.get('company/current');\n\n              case 5:\n                data = _context.sent;\n\n                if (data.status === 'OK') {\n                  cargoGroup = data.data.cargoGroup;\n\n                  if (cargoGroup) {\n                    this.formData = _objectSpread({}, this.formData, cargoGroup);\n                  }\n                } else if (data.status === 'ERROR') {\n                  this.$router.replace({\n                    name: 'Home'\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 13:\n                _context.prev = 13;\n                this.loading = false;\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return API.post('company/save', {\n                  key: 'cargoGroup',\n                  val: this.formData\n                });\n\n              case 8:\n                data = _context2.sent;\n\n                if (data.status === 'OK') {\n                  this.goNextForm();\n                } else if (data.status === 'ERROR') {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](5);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 16:\n                _context2.prev = 16;\n                this.loading = false;\n                return _context2.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 12, 16, 19]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoCargoGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cargo-group-form\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Cargo Group</h4>\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in cargoGroups\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 cargo-group\"\n                @click=\"selectCargoGroup(item.value)\"\n              >\n                <div class=\"p-1\">\n                  <img src=\"https://picsum.photos/g/100/100\" alt=\"\" />\n                </div>\n\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: cargoGroupMap[item.value] }\"\n                >\n                  {{ item.value }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.cargoGroup\" class=\"text-danger\">\n            {{ formErrors.cargoGroup }}\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">\n                  Business Structure\n                </div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">\n                  Cargo Hauled\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { validateField, validateForm, minLength } from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoCargoGroup',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        cargoGroup: []\n      },\n      rules: {\n        cargoGroup: [val => minLength(val, 1, 'Please select Cargo Group')]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState('cargo', ['cargoGroups']),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        (map[val] = true)\n        });\n      return map;\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    selectCargoGroup(cargoGroupValue) {\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit('update-hint', '');\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit('update-hint', this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { cargoGroup } = data.data;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'cargoGroup',\n          val: this.formData\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none{\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n     \n      border-radius: 5px;\n      min-height: 50px;\n     font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n       \n        \n        color: #5e98f9;\n      }\n    }\n  }\n @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3{\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n   @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3{\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"],"sourceRoot":"src/components"}]}