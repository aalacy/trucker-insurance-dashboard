{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoEldProvider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoEldProvider.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport { validateField as _validateField, validateForm as _validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { setTimeout } from 'timers';\nexport default {\n  name: \"AccountInfoEldProvider\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      final_uuid: \"\",\n      uuid: \"\",\n      showmodel: false,\n      userData: \"\",\n      formData: {\n        eldProvider: []\n      },\n      rules: {\n        eldProvider: [function (val) {\n          return minLength(val, 1, \"Please select ELD Provider\");\n        }]\n      },\n      formErrors: {},\n      hints: {},\n      userProviders: [],\n      userProviderName: \"\",\n      loading: false,\n      error: null,\n      save: true\n    };\n  },\n  computed: _objectSpread({}, mapState(\"eld\", [\"eldProviders\"]), {\n    allProviders: function allProviders() {\n      return this.eldProviders.concat(this.userProviders);\n    },\n    eldProviderMap: function eldProviderMap() {\n      var map = {};\n      this.formData.eldProvider.forEach(function (val) {\n        return map[val] = true;\n      });\n      return map;\n    }\n  }, mapState([\"data\"])),\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  components: {\n    modelLogin: ModalLogin\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var j = 0; j < len.length; j++) {\n            if (_this.$store.state.getData.data[j].key == \"eldProvider\") {\n              var i;\n              var i;\n\n              (function () {\n                var a = _this.$store.state.getData.data[j];\n                var b = JSON.parse(a.val).eldProvider;\n                var c = [];\n\n                for (i = 0; i < b.length; i++) {\n                  c.push(b[i]);\n                }\n\n                var filteredKeywords = c.filter(function (word) {\n                  return b.includes(word);\n                });\n\n                for (i = 0; i < filteredKeywords.length; i++) {\n                  _this.selectProvider(filteredKeywords[i]);\n                }\n              })();\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var j = 0; j < len.length; j++) {\n            if (_this.$store.state.getData.data[j].key == \"eldProvider\") {\n              var i;\n              var i;\n\n              (function () {\n                var a = _this.$store.state.getData.data[j];\n                var b = JSON.parse(a.val).eldProvider;\n                var c = [];\n\n                for (i = 0; i < b.length; i++) {\n                  c.push(b[i]);\n                }\n\n                var filteredKeywords = c.filter(function (word) {\n                  return b.includes(word);\n                });\n\n                for (i = 0; i < filteredKeywords.length; i++) {\n                  _this.selectProvider(filteredKeywords[i]);\n                }\n              })();\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        _this2.show();\n\n        if (willDelete) {\n          _this2.$router.push({\n            name: \"AccountInfoEldProvider\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var formIsValid, temp_uuid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  temp_uuid = this.userData;\n                } else {\n                  temp_uuid = this.uuid;\n                }\n\n                _context.prev = 6;\n                _context.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"eldProvider\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: temp_uuid\n                });\n\n              case 9:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (!localStorage.getItem(\"token\")) {\n                    if (this.showmodel) {\n                      this.showmodel = false;\n                    } else {\n                      this.showmodel = true;\n                    }\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                console.error(_context.t0); // this.showmodel = true;\n\n                this.error = _context.t0.message;\n\n              case 17:\n                _context.prev = 17;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13, 17, 20]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    addProvider: function addProvider() {\n      if (!this.userProviderName || this.eldProviderMap[this.userProviderName]) {\n        return;\n      }\n\n      this.userProviders.push({\n        value: this.userProviderName\n      });\n      this.userProviderName = \"\";\n    },\n    selectProvider: function selectProvider(providerValue) {\n      if (this.eldProviderMap[providerValue]) {\n        this.formData.eldProvider = this.formData.eldProvider.filter(function (val) {\n          return val !== providerValue;\n        });\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.eldProvider.push(providerValue);\n        this.$emit(\"update-hint\", this.hints[providerValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, eldProviderTab, eldProvider;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  eldProviderTab = data.data.eldProvider;\n                  this.uuid = data.data.b;\n\n                  if (eldProviderTab) {\n                    this.formData = _objectSpread({}, this.formData, {}, eldProviderTab);\n                    eldProvider = eldProviderTab.eldProvider;\n                    this.addUserProviders(eldProvider);\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false;\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    addUserProviders: function addUserProviders(eldProvider) {\n      var _this3 = this;\n\n      eldProvider.forEach(function (providerName) {\n        var providersIndex = _this3.eldProviders.findIndex(function (p) {\n          return p.value === providerName;\n        });\n\n        if (providersIndex === -1) {\n          _this3.userProviders.push({\n            value: providerName\n          });\n        }\n      });\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem('token')) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                }\n\n                _context3.prev = 6;\n                _context3.next = 9;\n                return API.post(\"company/save\", {\n                  key: \"eldProvider\",\n                  val: this.formData,\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: this.final_uuid\n                });\n\n              case 9:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.final_uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {});\n                _context3.next = 18;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](6);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 18:\n                _context3.prev = 18;\n                this.loading = false;\n                return _context3.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 14, 18, 21]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoEldProvider.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"eld-provider-form container-fluid mob-2\">\n    \n    <form id=\"eldProviderForm\" @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">ELD Provider</h4>\n\n          <form id=\"addProviderForm\" class=\"mb-2\" @submit.prevent=\"addProvider\">\n            <div class=\"d-flex\">\n              <div class=\"flex-grow-1 form-group\">\n                <input\n                  v-model.trim=\"userProviderName\"\n                  type=\"text\"\n                  placeholder=\"Other Provider\"\n                  required\n                  class=\"lt-input\"\n                >\n              </div>\n\n              <div class=\"px-2\">\n                <button\n                  form=\"addProviderForm\"\n                  type=\"submit\"\n                  class=\"px-3 lt-button lt-button-main get-data\"\n                >ADD</button>\n              </div>\n            </div>\n          </form>\n\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in allProviders\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 \"\n                @click=\"selectProvider(item.value)\"  :class=\"{ selected: eldProviderMap[item.value] }\"\n              >\n              <div class=\"eld-provider\">\n                <div class=\"p-1 provider-img-wrapper\">\n                  <img v-if=\"item.image\" :src=\"item.image\" alt class=\"provider-img rounded\">\n                  <!-- <div v-else class=\"p-1 provider-img-wrapper\">\n                  <img\n                    src=\"../assets/images/bigroad.jpeg\"\n                    alt=\"\"\n                    class=\"provider-img\"\n                  />\n                  \n                  \n                  </div>-->\n                </div>\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: eldProviderMap[item.value] }\"\n                >{{ item.value }}</div>\n              </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.eldProvider\" class=\"text-danger\">{{ formErrors.eldProvider }}</div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb mob-2\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Vehicles & Trailers</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                form=\"eldProviderForm\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white mob-2\">Drivers</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { validateField, validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { setTimeout } from 'timers';\n\nexport default {\n  name: \"AccountInfoEldProvider\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      final_uuid:\"\",\n      uuid:\"\",\n      showmodel: false,\n      userData:\"\",\n      formData: {\n        eldProvider: []\n      },\n      rules: {\n        eldProvider: [val => minLength(val, 1, \"Please select ELD Provider\")]\n      },\n      formErrors: {},\n      hints: {},\n      userProviders: [],\n      userProviderName: \"\",\n      loading: false,\n      error: null,\n      save: true\n    };\n  },\n  computed: {\n    ...mapState(\"eld\", [\"eldProviders\"]),\n    allProviders() {\n      return this.eldProviders.concat(this.userProviders);\n    },\n    eldProviderMap() {\n      let map = {};\n      this.formData.eldProvider.forEach(val => (map[val] = true));\n      return map;\n    },\n    ...mapState([\"data\"])\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  components: {\n    modelLogin: ModalLogin,\n\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      \n     this.save = false;\n       axios\n      .get(\n        \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n          localStorage.getItem(\"userId\")\n      )\n      .then(coins => {\n        this.userData = coins.data.uuid;\n      });\n      setTimeout(()=>{\n  this.$store\n        .dispatch(\"loadData\", this.userData)\n        .then(() => {\n          let len = this.$store.state.getData.data;\n          for(let j=0;j<len.length;j++){\n            if(this.$store.state.getData.data[j].key == \"eldProvider\")\n            {\n          let a = this.$store.state.getData.data[j];\n          let b = JSON.parse(a.val).eldProvider;\n          \n          let c = [];\n          for (var i = 0; i < b.length; i++) {\n            c.push(b[i]);\n          }\n          let filteredKeywords = c.filter(word => b.includes(word));\n          \n          for (var i = 0; i < filteredKeywords.length; i++) {\n            this.selectProvider(filteredKeywords[i]);\n          }\n            }\n         \n           \n          }\n          \n     });\n      },1000)\n      \n    } else {\n      this.save = true;\n         setTimeout(()=>{\n  this.$store\n        .dispatch(\"loadData\", this.uuid)\n        .then(() => {\n          let len = this.$store.state.getData.data;\n          for(let j=0;j<len.length;j++){\n            if(this.$store.state.getData.data[j].key == \"eldProvider\")\n            {\n          let a = this.$store.state.getData.data[j];\n          let b = JSON.parse(a.val).eldProvider;\n          \n          let c = [];\n          for (var i = 0; i < b.length; i++) {\n            c.push(b[i]);\n          }\n          let filteredKeywords = c.filter(word => b.includes(word));\n          \n          for (var i = 0; i < filteredKeywords.length; i++) {\n            this.selectProvider(filteredKeywords[i]);\n          }\n            }\n         \n           \n          }\n          \n     });\n      },1000)\n    }\n    \n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n        this.show();\n        \n        if (willDelete) {\n          this.$router.push({ name: \"AccountInfoEldProvider\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n    var temp_uuid;\n      this.loading = true;\n      this.error = null;\n  if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n        \n      } else {\n        temp_uuid = this.uuid;\n        \n      }\n      \n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"eldProvider\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n\n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        // this.showmodel = true;\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    addProvider() {\n      if (\n        !this.userProviderName ||\n        this.eldProviderMap[this.userProviderName]\n      ) {\n        return;\n      }\n\n      this.userProviders.push({ value: this.userProviderName });\n      this.userProviderName = \"\";\n    },\n    selectProvider(providerValue) {\n      if (this.eldProviderMap[providerValue]) {\n        this.formData.eldProvider = this.formData.eldProvider.filter(\n          val => val !== providerValue\n        );\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.eldProvider.push(providerValue);\n        this.$emit(\"update-hint\", this.hints[providerValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { eldProvider: eldProviderTab } = data.data;\n          this.uuid = data.data.b;\n          if (eldProviderTab) {\n            this.formData = {\n              ...this.formData,\n              ...eldProviderTab\n            };\n\n            let { eldProvider } = eldProviderTab;\n            this.addUserProviders(eldProvider);\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    addUserProviders(eldProvider) {\n      eldProvider.forEach(providerName => {\n        let providersIndex = this.eldProviders.findIndex(\n          p => p.value === providerName\n        );\n        if (providersIndex === -1) {\n          this.userProviders.push({ value: providerName });\n        }\n      });\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n         if(localStorage.getItem('token')){\n        \n          this.final_uuid = this.userData;\n          \n      }else{\n        this.final_uuid = this.uuid;\n        \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"eldProvider\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid:  this.final_uuid\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios.post(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\"+ this.final_uuid +\"&user_id=\"+localStorage.getItem(\"userId\")\n        )\n        .then(res => {\n          \n        })\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.eld-provider-form {\n  .eld-provider {\n    .provider-img-wrapper {\n      height: 100px;\n      width: 100px;\n      margin: 0 auto;\n\n      // .provider-img {\n      //   max-width: 100%;\n      //   height: auto;\n      // }\n    }\n\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      border-radius: 5px;\n      // min-height: 50px;\n      // height: 100%;\n      word-break: break-word;\n\n      &.selected {\n        color: #5e98f9;\n      }\n    }\n  }\n  @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n  @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"],"sourceRoot":"src/components"}]}