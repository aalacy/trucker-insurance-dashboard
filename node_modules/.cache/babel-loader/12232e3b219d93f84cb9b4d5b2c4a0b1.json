{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoDriversItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoDriversItem.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required, minLength as _minLength } from \"../validators.js\";\nimport { mapState } from \"vuex\";\nimport { API } from \"../api.js\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoDriversItem\",\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    driver: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"token\")) {\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i < len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"drivers\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val)[0];\n              _this.formData.firstName = b.firstName;\n              _this.formData.lastName = b.lastName;\n              _this.formData.middleName = b.middleName;\n\n              var _b$dateOfBirth$split = b.dateOfBirth.split(\"/\");\n\n              var _b$dateOfBirth$split2 = _slicedToArray(_b$dateOfBirth$split, 3);\n\n              _this.formData.dobD = _b$dateOfBirth$split2[0];\n              _this.formData.dobM = _b$dateOfBirth$split2[1];\n              _this.formData.dobY = _b$dateOfBirth$split2[2];\n              // this.formData.dobM = dobM;\n              _this.formData.address = b.address;\n              _this.formData.licenseNumber = b.licenseNumber;\n              _this.formData.state = b.state;\n              _this.formData.city = b.city;\n              _this.formData.zip = b.zip;\n\n              var _b$dateOfHire$split = b.dateOfHire.split(\"/\");\n\n              var _b$dateOfHire$split2 = _slicedToArray(_b$dateOfHire$split, 3);\n\n              _this.formData.dohD = _b$dateOfHire$split2[0];\n              _this.formData.dohM = _b$dateOfHire$split2[1];\n              _this.formData.dohY = _b$dateOfHire$split2[2];\n              _this.formData.yearsOfExperience = b.yearsOfExperience;\n              _this.formData.CDL = b.CDL;\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i < len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"drivers\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val)[0];\n              _this.formData.firstName = b.firstName;\n              _this.formData.middleName = b.middleName;\n              _this.formData.lastName = b.lastName;\n\n              var _b$dateOfBirth$split3 = b.dateOfBirth.split(\"/\");\n\n              var _b$dateOfBirth$split4 = _slicedToArray(_b$dateOfBirth$split3, 3);\n\n              _this.formData.dobD = _b$dateOfBirth$split4[0];\n              _this.formData.dobM = _b$dateOfBirth$split4[1];\n              _this.formData.dobY = _b$dateOfBirth$split4[2];\n              // this.formData.dobM = dobM;\n              _this.formData.address = b.address;\n              _this.formData.licenseNumber = b.licenseNumber;\n              _this.formData.state = b.state;\n              _this.formData.city = b.city;\n              _this.formData.zip = b.zip;\n\n              var _b$dateOfHire$split3 = b.dateOfHire.split(\"/\");\n\n              var _b$dateOfHire$split4 = _slicedToArray(_b$dateOfHire$split3, 3);\n\n              _this.formData.dohD = _b$dateOfHire$split4[0];\n              _this.formData.dohM = _b$dateOfHire$split4[1];\n              _this.formData.dohY = _b$dateOfHire$split4[2];\n              _this.formData.yearsOfExperience = b.yearsOfExperience;\n              _this.formData.CDL = b.CDL;\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  data: function data() {\n    return {\n      uuid: \"\",\n      value: 5,\n      error1: \"Zip number Invalid! Must be minmum of 5 digits\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        address: \"\",\n        city: \"\",\n        zip: \"\",\n        licenseNumber: \"\",\n        state: \"\",\n        dohM: \"\",\n        dohD: \"\",\n        dohY: \"\",\n        yearsOfExperience: \"\",\n        CDL: \"\"\n      },\n      rules: {\n        firstName: [required],\n        lastName: [required],\n        middleName: [required],\n        city: [required],\n        zip: [required],\n        dobM: [required],\n        dobD: [required],\n        dobY: [required],\n        licenseNumber: [required],\n        state: [required],\n        dohM: [required],\n        dohD: [required],\n        dohY: [required],\n        yearsOfExperience: [required]\n      },\n      formErrors: {},\n      hints: {},\n      userData: \"\",\n      loading: false,\n      error: null\n    };\n  },\n  computed: _objectSpread({\n    dateOfBirth: function dateOfBirth() {\n      var _this$formData = this.formData,\n          m = _this$formData.dobM,\n          d = _this$formData.dobD,\n          y = _this$formData.dobY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  }, mapState([\"data\"]), {\n    dateOfHire: function dateOfHire() {\n      var _this$formData2 = this.formData,\n          m = _this$formData2.dohM,\n          d = _this$formData2.dohD,\n          y = _this$formData2.dohY;\n\n      if (m.length < 2) {\n        m = \"0\".concat(m);\n      }\n\n      if (d.length < 2) {\n        d = \"0\".concat(d);\n      }\n\n      return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n    }\n  }),\n  created: function created() {\n    var dobM = \"\",\n        dobD = \"\",\n        dobY = \"\";\n    var dohM = \"\",\n        dohD = \"\",\n        dohY = \"\";\n\n    if (this.driver.dateOfBirth) {\n      var _this$driver$dateOfBi = this.driver.dateOfBirth.split(\"/\");\n\n      var _this$driver$dateOfBi2 = _slicedToArray(_this$driver$dateOfBi, 3);\n\n      dobM = _this$driver$dateOfBi2[0];\n      dobD = _this$driver$dateOfBi2[1];\n      dobY = _this$driver$dateOfBi2[2];\n    }\n\n    if (this.driver.dateOfHire) {\n      var _this$driver$dateOfHi = this.driver.dateOfHire.split(\"/\");\n\n      var _this$driver$dateOfHi2 = _slicedToArray(_this$driver$dateOfHi, 3);\n\n      dohM = _this$driver$dateOfHi2[0];\n      dohD = _this$driver$dateOfHi2[1];\n      dohY = _this$driver$dateOfHi2[2];\n    }\n\n    this.formData = _objectSpread({}, this.formData, {}, this.driver, {\n      dobM: dobM,\n      dobD: dobD,\n      dobY: dobY,\n      dohM: dohM,\n      dohD: dohD,\n      dohY: dohY\n    });\n    this.loadCompany();\n  },\n  methods: {\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.get(\"company/current\");\n\n              case 3:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  // let data = data.data;\n                  this.uuid = data.data.b;\n                }\n\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    getFormData: function getFormData() {\n      var formData = _objectSpread({}, this.formData, {\n        dateOfBirth: this.dateOfBirth,\n        dateOfHire: this.dateOfHire\n      });\n\n      delete formData.dobM;\n      delete formData.dobD;\n      delete formData.dobY;\n      delete formData.dohM;\n      delete formData.dohD;\n      delete formData.dohY;\n      return formData;\n    },\n    removeForm: function removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    minLength: function minLength(fieldName, value, errorMessage) {\n      return _minLength(fieldName, this.value, this.errorzip);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    }\n  }\n};",{"version":3,"sources":["AccountInfoDriversItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"driver-form-item container-fluid mob-2\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2 class=\"h5\">Driver # {{ index + 1 }}</h2>\n      </div>\n\n      <button\n        type=\"button\"\n        class=\"lt-button mx-2 mb-3\"\n        @click=\"removeForm(index)\"\n        title=\"Remove Driver\"\n      >\n        <h3>-</h3>\n      </button>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-lg-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.firstName\"\n            :class=\"{ 'has-error': formErrors.firstName }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"First name\"\n            required\n            @focus=\"onFocus('firstName')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('firstName')\"\n          >\n\n          <div v-if=\"formErrors.firstName\" class=\"text-danger\">{{ formErrors.firstName }}</div>\n        </div>\n      </div>\n      <div class=\"col-4 col-lg-2\">\n        <div class=\"form-group\">\n          <input>\n\n          <div v-if=\"formErrors.middleName\" class=\"text-danger\">{{ formErrors.middleName }}</div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.lastName\"\n            :class=\"{ 'has-error': formErrors.lastName }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Last name\"\n            required\n            @focus=\"onFocus('lastName')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('lastName')\"\n          >\n\n          <div v-if=\"formErrors.lastName\" class=\"text-danger\">{{ formErrors.lastName }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-md-6 pt-2\">\n        <div>Date of Birth</div>\n\n        <div v-if=\"formErrors.dateOfBirth\" class=\"text-danger\">{{ formErrors.dateOfBirth }}</div>\n      </div>\n\n      <div class=\"col-12 col-md-6\" id=\"text-date\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dobM\"\n                :class=\"{ 'has-error': formErrors.dobM }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"MM\"\n                required\n                @focus=\"onFocus('dobM')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dobM')\"\n              >\n\n              <div v-if=\"formErrors.dobM\" class=\"text-danger\">{{ formErrors.dobM }}</div>\n            </div>\n          </div>\n          <span class=\"mt-1\">/</span>\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dobD\"\n                :class=\"{ 'has-error': formErrors.dobD }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"DD\"\n                required\n                @focus=\"onFocus('dobD')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dobD')\"\n              >\n\n              <div v-if=\"formErrors.dobD\" class=\"text-danger\">{{ formErrors.dobD }}</div>\n            </div>\n          </div>\n          <span class=\"mt-1\">/</span>\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dobY\"\n                :class=\"{ 'has-error': formErrors.dobY }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"YYYY\"\n                required\n                @focus=\"onFocus('dobY')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dobY')\"\n              >\n\n              <div v-if=\"formErrors.dobY\" class=\"text-danger\">{{ formErrors.dobY }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.licenseNumber\"\n            :class=\"{ 'has-error': formErrors.licenseNumber }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"License Number\"\n            required\n            @focus=\"onFocus('licenseNumber')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('licenseNumber')\"\n          >\n\n          <div v-if=\"formErrors.licenseNumber\" class=\"text-danger\">{{ formErrors.licenseNumber }}</div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.CDL\"\n            :class=\"{ 'has-error': formErrors.CDL }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"CDL(optional)\"\n            @focus=\"onFocus('CDL')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('CDL')\"\n          >\n\n          <div v-if=\"formErrors.CDL\" class=\"text-danger\">{{ formErrors.CDL }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 col-md-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.address\"\n            :class=\"{ 'has-error': formErrors.address }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Address\"\n            required\n            @focus=\"onFocus('address')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('address')\"\n          >\n\n          <div v-if=\"formErrors.address\" class=\"text-danger\">{{ formErrors.address }}</div>\n        </div>\n      </div>\n      <div class=\"col-12 col-md-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.city\"\n            :class=\"{ 'has-error': formErrors.city }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"City\"\n            required\n            @focus=\"onFocus('city')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('city')\"\n          >\n\n          <div v-if=\"formErrors.city\" class=\"text-danger\">{{ formErrors.city }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.state\"\n            :class=\"{ 'has-error': formErrors.state }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"State\"\n            required\n            @focus=\"onFocus('state')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('state')\"\n          >\n\n          <div v-if=\"formErrors.state\" class=\"text-danger\">{{ formErrors.state }}</div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.zip\"\n            :class=\"{ 'has-error': formErrors.zip }\"\n            type=\"text\"\n            minlength=\"5\"\n            class=\"lt-input hide-scroll\"\n            placeholder=\"Zip\"\n            required\n            @focus=\"onFocus('zip')\"\n            @blur=\"minLength('zip')\"\n            @change=\"validateField('zip')\"\n          >\n\n          <div v-if=\"formErrors.zip\" class=\"text-danger\">{{ formErrors.zip }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" id=\"text-date\">\n      <div class=\"col-12 col-md-6 pt-2\">\n        <div>Date of Hire</div>\n\n        <div v-if=\"formErrors.dateOfHire\" class=\"text-danger\">{{ formErrors.dateOfHire }}</div>\n      </div>\n\n      <div class=\"col-12 col-md-6\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dohM\"\n                :class=\"{ 'has-error': formErrors.dohM }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"MM\"\n                required\n                @focus=\"onFocus('dohM')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dohM')\"\n              >\n\n              <div v-if=\"formErrors.dohM\" class=\"text-danger\">{{ formErrors.dohM }}</div>\n            </div>\n          </div>\n          <span class=\"mt-1\">/</span>\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dohD\"\n                :class=\"{ 'has-error': formErrors.dohD }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"DD\"\n                required\n                @focus=\"onFocus('dohD')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dohD')\"\n              >\n\n              <div v-if=\"formErrors.dohD\" class=\"text-danger\">{{ formErrors.dohD }}</div>\n            </div>\n          </div>\n          <span class=\"mt-1\">/</span>\n          <div class=\"col\">\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.dohY\"\n                :class=\"{ 'has-error': formErrors.dohY }\"\n                type=\"text\"\n                class=\"lt-input\"\n                placeholder=\"YYYY\"\n                required\n                @focus=\"onFocus('dohY')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('dohY')\"\n              >\n\n              <div v-if=\"formErrors.dohY\" class=\"text-danger\">{{ formErrors.dohY }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.yearsOfExperience\"\n            :class=\"{ 'has-error': formErrors.yearsOfExperience }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Years of Experience\"\n            required\n            @focus=\"onFocus('yearsOfExperience')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('yearsOfExperience')\"\n          >\n            <option value>Years of Experience</option>\n\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n            <option>6</option>\n            <option>7</option>\n            <option>8</option>\n            <option>9</option>\n            <option>10</option>\n            <option>11</option>\n            <option>12</option>\n            <option>13</option>\n            <option>14</option>\n            <option>15</option>\n            <option>16</option>\n            <option>17</option>\n            <option>18</option>\n            <option>19</option>\n            <option>20</option>\n            <option>21</option>\n            <option>22</option>\n            <option>23</option>\n            <option>24</option>\n            <option>25</option>\n            <option>26</option>\n            <option>27</option>\n            <option>28</option>\n            <option>29</option>\n            <option>30</option>\n            <option>31</option>\n            <option>32</option>\n            <option>33</option>\n            <option>34</option>\n            <option>35</option>\n            <option>36</option>\n            <option>37</option>\n            <option>38</option>\n            <option>39</option>\n            <option>40</option>\n            <option>41</option>\n            <option>42</option>\n            <option>43</option>\n            <option>44</option>\n            <option>45+</option>\n          </select>\n          <div\n            v-if=\"formErrors.yearsOfExperience\"\n            class=\"text-danger\"\n          >{{ formErrors.yearsOfExperience }}</div>\n        </div>\n      </div>\n      <div class=\"row ml-3\">\n        <!-- <div class=\"col-lg-10\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.CDL\"\n            :class=\"{ 'has-error': formErrors.CDL }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"CDL(optional)\"       \n            @focus=\"onFocus('CDL')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('CDL')\"\n          />\n\n          <div v-if=\"formErrors.CDL\" class=\"text-danger\">\n            {{ formErrors.CDL }}\n          </div>\n        </div>\n        </div>-->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n  minLength\n} from \"../validators.js\";\nimport { mapState } from \"vuex\";\nimport { API } from \"../api.js\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoDriversItem\",\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    driver: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    }\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          \n          for (let i = 0; i < len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"drivers\") {\n              let a = this.$store.state.getData.data[i];\n              \n              let b = JSON.parse(a.val)[0];\n              this.formData.firstName = b.firstName;\n              \n              this.formData.lastName = b.lastName;\n              this.formData.middleName = b.middleName;\n              [\n                this.formData.dobD,\n                this.formData.dobM,\n                this.formData.dobY\n              ] = b.dateOfBirth.split(\"/\");\n              // this.formData.dobM = dobM;\n              \n              this.formData.address = b.address;\n              this.formData.licenseNumber = b.licenseNumber;\n              this.formData.state = b.state;\n              this.formData.city = b.city;\n              this.formData.zip = b.zip;\n              [\n                this.formData.dohD,\n                this.formData.dohM,\n                this.formData.dohY\n              ] = b.dateOfHire.split(\"/\");\n              this.formData.yearsOfExperience = b.yearsOfExperience;\n              this.formData.CDL = b.CDL;\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let i = 0; i < len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"drivers\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val)[0];\n              this.formData.firstName = b.firstName;\n              this.formData.middleName = b.middleName;\n              this.formData.lastName = b.lastName;\n              [\n                this.formData.dobD,\n                this.formData.dobM,\n                this.formData.dobY\n              ] = b.dateOfBirth.split(\"/\");\n              // this.formData.dobM = dobM;\n              \n              this.formData.address = b.address;\n              this.formData.licenseNumber = b.licenseNumber;\n              this.formData.state = b.state;\n              this.formData.city = b.city;\n              this.formData.zip = b.zip;\n              [\n                this.formData.dohD,\n                this.formData.dohM,\n                this.formData.dohY\n              ] = b.dateOfHire.split(\"/\");\n              this.formData.yearsOfExperience = b.yearsOfExperience;\n              this.formData.CDL = b.CDL;\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  data() {\n    return {\n      uuid: \"\",\n      value: 5,\n      error1: \"Zip number Invalid! Must be minmum of 5 digits\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        middleName: \"\",\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        address: \"\",\n        city: \"\",\n        zip: \"\",\n        licenseNumber: \"\",\n        state: \"\",\n        dohM: \"\",\n        dohD: \"\",\n        dohY: \"\",\n        yearsOfExperience: \"\",\n        CDL: \"\"\n      },\n      rules: {\n        firstName: [required],\n        lastName: [required],\n        middleName: [required],\n        city: [required],\n        zip: [required],\n        dobM: [required],\n        dobD: [required],\n        dobY: [required],\n        licenseNumber: [required],\n        state: [required],\n        dohM: [required],\n        dohD: [required],\n        dohY: [required],\n        yearsOfExperience: [required]\n      },\n      formErrors: {},\n      hints: {},\n      userData: \"\",\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    dateOfBirth() {\n      let { dobM: m, dobD: d, dobY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    },\n    ...mapState([\"data\"]),\n    dateOfHire() {\n      let { dohM: m, dohD: d, dohY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    }\n  },\n  created() {\n    let dobM = \"\",\n      dobD = \"\",\n      dobY = \"\";\n    let dohM = \"\",\n      dohD = \"\",\n      dohY = \"\";\n\n    if (this.driver.dateOfBirth) {\n      [dobM, dobD, dobY] = this.driver.dateOfBirth.split(\"/\");\n    }\n\n    if (this.driver.dateOfHire) {\n      [dohM, dohD, dohY] = this.driver.dateOfHire.split(\"/\");\n    }\n\n    this.formData = {\n      ...this.formData,\n      ...this.driver,\n      dobM,\n      dobD,\n      dobY,\n      dohM,\n      dohD,\n      dohY\n    };\n    this.loadCompany();\n  },\n  methods: {\n    async loadCompany() {\n      try {\n        let data = await API.get(\"company/current\");\n        if (data.status === \"OK\") {\n          // let data = data.data;\n          this.uuid = data.data.b;\n        }\n      } catch {}\n    },\n    getFormData() {\n      let formData = {\n        ...this.formData,\n        dateOfBirth: this.dateOfBirth,\n        dateOfHire: this.dateOfHire\n      };\n\n      delete formData.dobM;\n      delete formData.dobD;\n      delete formData.dobY;\n      delete formData.dohM;\n      delete formData.dohD;\n      delete formData.dohY;\n\n      return formData;\n    },\n    removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    minLength(fieldName, value, errorMessage) {\n      return minLength(fieldName, this.value, this.errorzip);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n  }\n};\n</script>\n\n<style>\nselect {\n  position: relative;\n  -webkit-appearance: none;\n  background: url(\"../assets/images/arrow-dropdown.png\") no-repeat 96% center;\n  -moz-appearance: none;\n}\n</style>\n\n\n"],"sourceRoot":"src/components"}]}