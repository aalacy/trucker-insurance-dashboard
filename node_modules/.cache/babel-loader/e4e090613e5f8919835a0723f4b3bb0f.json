{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoThankYou.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoThankYou.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { API } from '../api.js';\nexport default {\n  name: 'AccountInfoThankYou',\n  props: {\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      loading: false,\n      error: null\n    };\n  },\n\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n\n  methods: {\n    download() {\n      window.open(\"\".concat(process.env.VUE_APP_BACKEND_URL, \"/company/pdf\"));\n    },\n\n    // async download() {\n    //   this.loading = true;\n    //   this.error = null;\n    //   try {\n    //     let data = await API.get('company/pdf', null, {\n    //       responseType: 'blob'\n    //     });\n    //     if (data.status === 'ERROR') {\n    //       this.error = data.messages[0] || data.data;\n    //     } else {\n    //       let blob = new Blob([data], { type: 'application/pdf' });\n    //       let url = window.URL.createObjectURL(blob);\n    //       window.open(url);\n    //     }\n    //   } catch (err) {\n    //     console.error(err);\n    //     this.error = err.message;\n    //   } finally {\n    //     this.loading = false;\n    //   }\n    // },\n    loadCompany() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.loading = true;\n        _this.error = null;\n\n        try {\n          let data = yield API.get('company/current');\n\n          if (data.status === 'ERROR') {\n            _this.$router.replace({\n              name: 'Home'\n            });\n          }\n        } catch (err) {\n          console.error(err);\n          _this.error = err.message;\n        } finally {\n          _this.loading = false;\n        }\n      })();\n    }\n\n  }\n};",null]}