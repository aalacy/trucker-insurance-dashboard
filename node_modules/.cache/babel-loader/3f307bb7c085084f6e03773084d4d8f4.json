{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js!/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/components/AccountInfoUploadDocuments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/components/AccountInfoUploadDocuments.vue","mtime":1561725709698},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ubuntu/luckytruck/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { validateField, validateForm, required } from '../validators.js';\nimport { API } from '../api.js';\nimport { isMobile } from 'mobile-device-detect';\nexport default {\n  name: 'AccountInfoUploadDocuments',\n  mobile: 'phone',\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      msg: isMobile ? 'Welcome to Your Vue.js mobile App!' : 'Welcome to Your Vue.js App',\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      // rules: {},\n      formErrors: {},\n      preview: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    submitBtnText: function submitBtnText() {\n      if (this.loading) {\n        return 'Loading...';\n      }\n\n      var _this$formData = this.formData,\n          imageIdFront = _this$formData.imageIdFront,\n          imageIdBack = _this$formData.imageIdBack,\n          imageDOT = _this$formData.imageDOT,\n          imageRegistration = _this$formData.imageRegistration;\n      var anyImageSelected = imageIdFront || imageIdBack || imageDOT || imageRegistration;\n\n      if (anyImageSelected) {\n        return 'Upload';\n      }\n\n      return 'Skip';\n    }\n  },\n  created: function created() {\n    this.$emit('update-progress', this.progress);\n  },\n  methods: {\n    // validateField(fieldName) {\n    //   validateField(fieldName, this.formData, this.rules, this.formErrors);\n    // },\n    // validateForm() {\n    //   this.formErrors = {};\n    //   return validateForm(this.formData, this.rules, this.formErrors);\n    // },\n    setImage: function setImage(event, fieldName) {\n      var files = event.target.files;\n      var image = files[0] || null;\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName); // this.validateField(fieldName);\n    },\n    previewFile: function previewFile(file, fieldName) {\n      var _this = this;\n\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    uploadDocuments: function () {\n      var _uploadDocuments = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.formData('company/upload', this.formData);\n\n              case 3:\n                data = _context.sent;\n\n                // console.log(data);\n                if (data.status === 'OK') {\n                  this.$router.push({\n                    name: this.nextForm\n                  });\n                } else if (data.status === 'ERROR') {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 11:\n                _context.prev = 11;\n                this.loading = false;\n                return _context.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7, 11, 14]]);\n      }));\n\n      function uploadDocuments() {\n        return _uploadDocuments.apply(this, arguments);\n      }\n\n      return uploadDocuments;\n    }()\n  }\n};",null]}