{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoUploadDocuments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoUploadDocuments.vue","mtime":1561196642228},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { validateField, validateForm, required } from '../validators.js';\nimport { API } from '../api.js';\nimport { isMobile } from 'mobile-device-detect';\nexport default {\n  name: 'AccountInfoUploadDocuments',\n  mobile: 'phone',\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      msg: isMobile ? 'Welcome to Your Vue.js mobile App!' : 'Welcome to Your Vue.js App',\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      // rules: {},\n      formErrors: {},\n      preview: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    submitBtnText: function submitBtnText() {\n      if (this.loading) {\n        return 'Loading...';\n      }\n\n      var _this$formData = this.formData,\n          imageIdFront = _this$formData.imageIdFront,\n          imageIdBack = _this$formData.imageIdBack,\n          imageDOT = _this$formData.imageDOT,\n          imageRegistration = _this$formData.imageRegistration;\n      var anyImageSelected = imageIdFront || imageIdBack || imageDOT || imageRegistration;\n\n      if (anyImageSelected) {\n        return 'Upload';\n      }\n\n      return 'Skip';\n    }\n  },\n  created: function created() {\n    this.$emit('update-progress', this.progress);\n  },\n  methods: {\n    // validateField(fieldName) {\n    //   validateField(fieldName, this.formData, this.rules, this.formErrors);\n    // },\n    // validateForm() {\n    //   this.formErrors = {};\n    //   return validateForm(this.formData, this.rules, this.formErrors);\n    // },\n    setImage: function setImage(event, fieldName) {\n      var files = event.target.files;\n      var image = files[0] || null;\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName); // this.validateField(fieldName);\n    },\n    previewFile: function previewFile(file, fieldName) {\n      var _this = this;\n\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    uploadDocuments: function () {\n      var _uploadDocuments = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.formData('company/upload', this.formData);\n\n              case 3:\n                data = _context.sent;\n\n                // console.log(data);\n                if (data.status === 'OK') {\n                  this.$router.push({\n                    name: this.nextForm\n                  });\n                } else if (data.status === 'ERROR') {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                this.error = _context.t0.message;\n\n              case 11:\n                _context.prev = 11;\n                this.loading = false;\n                return _context.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7, 11, 14]]);\n      }));\n\n      function uploadDocuments() {\n        return _uploadDocuments.apply(this, arguments);\n      }\n\n      return uploadDocuments;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoUploadDocuments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"upload-documents container py-2\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h3 class=\"title\">Upload documents</h3>\n\n        <p>\n          Please upload the following documents: drivers license, registration,\n          and picture of the side of your vehicle to make the process go\n          faster.<br />\n          Donâ€™t have these documents? No worries, just press skip.\n        </p>\n\n        <form @submit.prevent=\"uploadDocuments\">\n          <div class=\"row\">\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  for=\"imageIdFront\"\n                  class=\"lt-input\"\n                >\n                  Select Image ID Front\n                </label>\n\n                <input\n                  id=\"imageIdFront\"\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  type=\"file\"\n                  accept=\"image/*;capture=camera\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdFront')\"\n                />\n\n                <div v-if=\"formErrors.imageIdFront\" class=\"text-danger\">\n                  {{ formErrors.imageIdFront }}\n                </div>\n\n                <div v-if=\"preview.imageIdFront\" class=\"preview\">\n                  <img\n                    :src=\"preview.imageIdFront\"\n                    alt=\"\"\n                    class=\"preview-image\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdBack }\"\n                  for=\"imageIdBack\"\n                  class=\"lt-input\"\n                >\n                  Select Image ID Back\n                </label>\n            \n\n                <input\n                  id=\"imageIdBack\"\n                  :class=\"{ 'has-error': formErrors.imageIdBack }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  accept=\"image/*;capture=camera\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdBack')\"\n                />\n\n                <div v-if=\"formErrors.imageIdBack\" class=\"text-danger\">\n                  {{ formErrors.imageIdBack }}\n                </div>\n\n                <div v-if=\"preview.imageIdBack\" class=\"preview\">\n                  <img\n                    :src=\"preview.imageIdBack\"\n                    alt=\"\"\n                    class=\"preview-image\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageDOT }\"\n                  for=\"imageDOT\"\n                  class=\"lt-input\"\n                >\n                  Select Image DOT\n                </label>\n\n                <input\n                  id=\"imageDOT\"\n                  :class=\"{ 'has-error': formErrors.imageDOT }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  accept=\"image/*;capture=camera\"\n                  hidden\n                  @change=\"setImage($event, 'imageDOT')\"\n                />\n\n                <div v-if=\"formErrors.imageDOT\" class=\"text-danger\">\n                  {{ formErrors.imageDOT }}\n                </div>\n\n                <div v-if=\"preview.imageDOT\" class=\"preview\">\n                  <img :src=\"preview.imageDOT\" alt=\"\" class=\"preview-image\" />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageRegistration }\"\n                  for=\"imageRegistration\"\n                  class=\"lt-input\"\n                >\n                  Select Image Registration\n                </label>\n\n                <input\n                  id=\"imageRegistration\"\n                  :class=\"{ 'has-error': formErrors.imageRegistration }\"\n                  type=\"file\"\n                  accept=\"image/*;capture=camera\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageRegistration')\"\n                />\n\n                <div v-if=\"formErrors.imageRegistration\" class=\"text-danger\">\n                  {{ formErrors.imageRegistration }}\n                </div>\n\n                <div v-if=\"preview.imageRegistration\" class=\"preview\">\n                  <img\n                    :src=\"preview.imageRegistration\"\n                    alt=\"\"\n                    class=\"preview-image\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n\n          <div class=\"text-right\">\n            <button\n              :disabled=\"loading\"\n              type=\"submit\"\n              class=\"lt-button btn-md lt-button-main\"\n            >\n              {{ submitBtnText }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import { validateField, validateForm, required } from '../validators.js';\nimport { API } from '../api.js';\nimport { isMobile } from 'mobile-device-detect';\n\nexport default {\n  name: 'AccountInfoUploadDocuments',\n  mobile:'phone',\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      msg: isMobile ? 'Welcome to Your Vue.js mobile App!' : 'Welcome to Your Vue.js App',\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      // rules: {},\n      formErrors: {},\n      preview: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    submitBtnText() {\n      if (this.loading) {\n        return 'Loading...';\n      }\n\n      let {\n        imageIdFront,\n        imageIdBack,\n        imageDOT,\n        imageRegistration\n      } = this.formData;\n      let anyImageSelected =\n        imageIdFront || imageIdBack || imageDOT || imageRegistration;\n      if (anyImageSelected) {\n        return 'Upload';\n      }\n\n      return 'Skip';\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n  },\n  methods: {\n    // validateField(fieldName) {\n    //   validateField(fieldName, this.formData, this.rules, this.formErrors);\n    // },\n    // validateForm() {\n    //   this.formErrors = {};\n    //   return validateForm(this.formData, this.rules, this.formErrors);\n    // },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    async uploadDocuments() {\n      // let formIsValid = this.validateForm();\n      // if (!formIsValid) {\n      //   return;\n      // }\n  \n\n      try {\n        let data = await API.formData('company/upload', this.formData);\n\n        // console.log(data);\n\n        if (data.status === 'OK') {\n          this.$router.push({ name: this.nextForm });\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.upload-documents {\n  .preview {\n    height: 200px;\n    text-align: center;\n\n    .preview-image {\n      max-height: 100%;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}