{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoSignComplete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoSignComplete.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validateField as _validateField, validateForm as _validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nimport { setTimeout } from \"timers\";\nexport default _defineProperty({\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapState([\"data\"])),\n  data: function data() {\n    return {\n      uuid: \"\",\n      userData: \"\",\n      final_uuid: \"\",\n      showmodel: false,\n      save: true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageSign: \"\"\n      },\n      preview: {\n        imageSign: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required] // sign: [required]\n\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created: function created() {\n    var dobM = \"\",\n        imageSign = \"\",\n        dobD = \"\",\n        dobY = \"\"; // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n    // this.formData = {\n    //   ...this.formData,\n    //   //   ...this.driver,\n    //   dobM,\n    //   dobD,\n    //   dobY\n    // };\n\n    this.loadCompany();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var currentDate = new Date();\n    var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, \"/\");\n\n    var _currentDateWithForma = currentDateWithFormat.split(\"/\");\n\n    var _currentDateWithForma2 = _slicedToArray(_currentDateWithForma, 3);\n\n    this.formData.dobD = _currentDateWithForma2[0];\n    this.formData.dobM = _currentDateWithForma2[1];\n    this.formData.dobY = _currentDateWithForma2[2];\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i <= len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"imageSign\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n              var url = \"\";\n\n              _this.getBase64Image(\"http://3.13.68.92:3000/company/\" + b[0].filename, function (base64image) {\n                url = base64image;\n\n                _this.previewFile(url, \"imageSign\");\n              });\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.uuid).then(function (res) {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i <= len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"imageSign\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n              var url = \"\";\n\n              _this.previewFile(b[0].filename, \"imageSign\");\n\n              _this.getBase64Image(\"http://3.13.68.92:3000/company/\" + b[0].filename, function (base64image) {\n                url = base64image;\n\n                _this.previewFile(url, \"imageSign\");\n              });\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  methods: {\n    editSignature: function editSignature() {\n      this.preview.imageSign = false;\n    },\n    clearSignature: function clearSignature() {\n      this.$refs.signaturePad.clearSignature();\n    },\n    saveSignature: function saveSignature() {\n      var _this$$refs$signature = this.$refs.signaturePad.saveSignature(),\n          isEmpty = _this$$refs$signature.isEmpty,\n          data = _this$$refs$signature.data;\n\n      if (isEmpty) {}\n\n      var a = this.base64toBlob(data.split(\",\")[1], \"jpeg\");\n      this.formData.imageSign = a;\n      this.updateCompany();\n    },\n    base64toBlob: function base64toBlob(base64Data, contentType) {\n      contentType = contentType || \"\";\n      var sliceSize = 1024;\n      var byteCharacters = atob(base64Data);\n      var bytesLength = byteCharacters.length;\n      var slicesCount = Math.ceil(bytesLength / sliceSize);\n      var byteArrays = new Array(slicesCount);\n\n      for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        var begin = sliceIndex * sliceSize;\n        var end = Math.min(begin + sliceSize, bytesLength);\n        var bytes = new Array(end - begin);\n\n        for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\n          bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n      }\n\n      return new Blob(byteArrays, {\n        type: contentType\n      });\n    },\n    getBase64Image: function getBase64Image(imgUrl, callback) {\n      var img = new Image();\n\n      img.onload = function () {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        callback(dataURL);\n      }; // set attributes and src\n\n\n      img.setAttribute(\"crossOrigin\", \"anonymous\"); //\n\n      img.src = imgUrl;\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.get(\"company/current\");\n\n              case 3:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  // let data = data.data;\n                  this.uuid = data.data.b;\n                }\n\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        if (willDelete) {\n          _this2.show();\n\n          _this2.$router.push({\n            name: \"AccountInfoSignComplete\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    show: function show() {\n      if (!localStorage.getItem(\"token\")) {\n        if (this.showmodel) {\n          this.showmodel = false;\n        } else {\n          this.showmodel = true;\n        }\n      }\n    },\n    setImage: function setImage(event, fieldName) {\n      var files = event.target.files; //\n      //\n\n      var image = files[0] || null;\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName); // this.validateField(fieldName);\n    },\n    previewFile: function previewFile(file, fieldName) {\n      var _this3 = this;\n\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this3.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        this.preview[fieldName] = file; // reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles: function clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var formIsValid, data;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // if(this.$refs.signaturePad.isEmpty()){\n                //   \n                // }\n                formIsValid = this.validateForm();\n\n                if (formIsValid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                } // this.saveSignature;\n\n\n                _context2.prev = 6;\n                _context2.next = 9;\n                return API.formData(\"company/upload\", this.formData);\n\n              case 9:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm;\n                  this.$router.push({\n                    name: this.nextForm\n                  });\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {});\n                _context2.next = 18;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](6);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 18:\n                _context2.prev = 18;\n                this.loading = false;\n                return _context2.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 14, 18, 21]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }(),\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus: function onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur: function onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField: function validateField(fieldName) {\n      _validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm: function validateForm() {\n      this.formErrors = {};\n      return _validateForm(this.formData, this.rules, this.formErrors);\n    }\n  }\n}, \"computed\", {\n  dateOfSign: function dateOfSign() {\n    var _this$formData = this.formData,\n        m = _this$formData.dobM,\n        d = _this$formData.dobD,\n        y = _this$formData.dobY;\n\n    if (m.length < 2) {\n      m = \"0\".concat(m);\n    }\n\n    if (d.length < 2) {\n      d = \"0\".concat(d);\n    }\n\n    return \"\".concat(m, \"/\").concat(d, \"/\").concat(y);\n  }\n});",{"version":3,"sources":["AccountInfoSignComplete.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-fluid mob-2\" id=\"card-pad\">\n    <form @submit.prevent=\"saveSignature\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Sign and Complete</h4>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4 pt-2\">\n              <div>Date of Sign</div>\n\n              <div v-if=\"formErrors.dateOfSign\" class=\"text-danger\">{{ formErrors.dateOfSign }}</div>\n            </div>\n\n            <div class=\"col-12 col-md-8\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobD\"\n                      :class=\"{ 'has-error': formErrors.dobD }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"DD\"\n                      required\n                      @focus=\"onFocus('dobD')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobD')\"\n                    >\n                    <div v-if=\"formErrors.dobD\" class=\"text-danger\">{{ formErrors.dobD }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobM\"\n                      :class=\"{ 'has-error': formErrors.dobM }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"MM\"\n                      required\n                      @focus=\"onFocus('dobM')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobM')\"\n                    >\n\n                    <div v-if=\"formErrors.dobM\" class=\"text-danger\">{{ formErrors.dobM }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobY\"\n                      :class=\"{ 'has-error': formErrors.dobY }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"YYYY\"\n                      required\n                      @focus=\"onFocus('dobY')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobY')\"\n                    >\n\n                    <div v-if=\"formErrors.dobY\" class=\"text-danger\">{{ formErrors.dobY }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <h5>\n                  <label class=\"d-flex\">Signature</label>\n                </h5>\n                <!-- \n                <input\n                  id=\"imageSign\"\n                  :class=\"{ 'has-error': formErrors.imageSign }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageSign')\"\n                >-->\n                <div v-if=\"preview.imageSign\" class=\"preview\" >\n                  <img :src=\"preview.imageSign\" alt class=\"preview-image mt-3\">\n                  <button @click=\"editSignature\" class=\"lt-button m-2\" type=\"button\">Edit</button>\n                </div>\n                <div class=\"\" v-else>\n                  <VueSignaturePad\n                    width=\"100%\"\n                    saveType=\"image/jpeg\"\n                    height=\"180px\"\n                    ref=\"signaturePad\"\n                    id=\"signature\"\n                    :options=\"{penColor:'#5e98f9',dotSize:'0.5'}\"\n                  />\n                  <div class=\"m-2 d-flex\">\n                    <!-- <button\n                      @click=\"saveSignature\"\n                      class=\"lt-button lt-button-main mr-2\"\n                      type=\"button\"\n                    >Save</button> -->\n                    <button\n                      @click=\"clearSignature\"\n                      class=\"lt-button\"\n                      type=\"button\"\n                    >Clear</button>\n                  </div>\n                </div>\n                <div v-if=\"formErrors.imageSign\" class=\"text-danger\">{{ formErrors.imageSign }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer\"> \n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline  pl-3 pad-0 mob-2\">Upload Document</div>\n                <!-- <div class=\"next-title text-center d-inline  pl-3 pad-0 mob-2\">Underwriting Q<span class=\"hide-que\">ues</span>t<span class=\"hide-que\">ions</span></div> -->\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb color-green\"\n              >\n                {{ loading ? 'Loading...' : 'Complete!' }}\n                <!-- <div class=\"next-title text-center d-inline pl-3 mob-2 text-white\"></div> -->\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin,\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState([\"data\"])\n  },\n  data() {\n    return {\n      uuid: \"\",\n      userData: \"\",\n      final_uuid: \"\",\n      showmodel: false,\n      save: true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageSign: \"\"\n      },\n      preview: {\n        imageSign: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required]\n        // sign: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created() {\n    let dobM = \"\",\n      imageSign = \"\",\n      dobD = \"\",\n      dobY = \"\";\n    // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n    // this.formData = {\n    //   ...this.formData,\n    //   //   ...this.driver,\n    //   dobM,\n    //   dobD,\n    //   dobY\n    // };\n    this.loadCompany();\n  },\n  mounted() {\n\n    var currentDate = new Date();\n    var currentDateWithFormat = new Date()\n      .toJSON()\n      .slice(0, 10)\n      .replace(/-/g, \"/\");\n    [\n      this.formData.dobD,\n      this.formData.dobM,\n      this.formData.dobY\n    ] = currentDateWithFormat.split(\"/\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(res => {\n          let len = this.$store.state.getData.data;\n          \n          \n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"imageSign\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  \n                  url = base64image;\n                  \n                  this.previewFile(url, \"imageSign\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(res => {\n          let len = this.$store.state.getData.data;\n    \n    \n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"imageSign\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageSign\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  \n                  url = base64image;\n                  \n                  this.previewFile(url, \"imageSign\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  methods: {\n    editSignature() {\n      this.preview.imageSign = false;\n    },\n   clearSignature() {\n      this.$refs.signaturePad.clearSignature();\n    },\n    saveSignature() {\n\n      const { isEmpty, data } = this.$refs.signaturePad.saveSignature();\n    if(isEmpty){\n\n    }\n      var a = this.base64toBlob(data.split(\",\")[1], \"jpeg\");\n      this.formData.imageSign = a;\n      this.updateCompany();\n      \n    },\n    base64toBlob(base64Data, contentType) {\n      contentType = contentType || \"\";\n      var sliceSize = 1024;\n      var byteCharacters = atob(base64Data);\n      var bytesLength = byteCharacters.length;\n      var slicesCount = Math.ceil(bytesLength / sliceSize);\n      var byteArrays = new Array(slicesCount);\n\n      for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        var begin = sliceIndex * sliceSize;\n        var end = Math.min(begin + sliceSize, bytesLength);\n\n        var bytes = new Array(end - begin);\n        for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\n          bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n      }\n      return new Blob(byteArrays, { type: contentType });\n    },\n    getBase64Image(imgUrl, callback) {\n      var img = new Image();\n      img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        callback(dataURL);\n      };\n\n      // set attributes and src\n      img.setAttribute(\"crossOrigin\", \"anonymous\"); //\n      img.src = imgUrl;\n    },\n    async loadCompany() {\n      try {\n        let data = await API.get(\"company/current\");\n        if (data.status === \"OK\") {\n          // let data = data.data;\n          this.uuid = data.data.b;\n        }\n      } catch {}\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n  \n        if (willDelete) {\n          this.show();\n          this.$router.push({ name: \"AccountInfoSignComplete\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n\n    show() {\n      if (!localStorage.getItem(\"token\")) {\n        if (this.showmodel) {\n          this.showmodel = false;\n        } else {\n          this.showmodel = true;\n        }\n      }\n    },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n      \n      //\n      //\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        this.preview[fieldName] = file;\n        // reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    async updateCompany() {\n      // if(this.$refs.signaturePad.isEmpty()){\n      //   \n      // }\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n  \n      } else {\n        this.final_uuid = this.uuid;\n  \n      }\n      \n      // this.saveSignature;\n      try {\n        let data = await API.formData(\"company/upload\", this.formData);\n  \n  \n        if (data.status === \"OK\") {\n          this.goNextForm;\n          \n          this.$router.push({ name: this.nextForm });\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n      \n          });\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n  },\n  computed: {\n    dateOfSign() {\n      let { dobM: m, dobD: d, dobY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#signature {\n  border: solid 2px black;\n  border-radius: 5px;\n  // background-image: linear-gradient(white, white);\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n}\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}