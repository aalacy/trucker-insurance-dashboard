{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoOwners.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoOwners.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"AccountInfoOwners\",\n  components: {\n    // AccountInfoOwnersItem: () => import(\"./AccountInfoOwnersItem.vue\"),\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      userData: \"\",\n      uuid: \"\",\n      final_uuid: \"\",\n      selected: \"Select Driver\",\n      showmodel: false,\n      save: true,\n      formData: {\n        driverIsOwner: false,\n        driverOwnerIndex: -1,\n        owners: []\n      },\n      drivers: [],\n      driversData: [],\n      loading: false,\n      error: null,\n      selectedDriver: \"\",\n      validations: {\n        driversData: {},\n        oneDriver: {\n          is_valid: true,\n          text: \"\"\n        },\n        website: {\n          is_valid: true,\n          text: \"\"\n        }\n      }\n    };\n  },\n  computed: {\n    noOwners: function noOwners() {\n      return this.formData.driverOwnerIndex === -1 && !this.formData.owners.length;\n    }\n  },\n  watch: {\n    \"formData.driverIsOwner\": function formDataDriverIsOwner(driverIsOwner) {\n      if (!driverIsOwner) {\n        this.formData.driverOwnerIndex = -1;\n      }\n    },\n    noOwners: function noOwners(_noOwners) {\n      this.error = _noOwners ? \"Please add at least one owner\" : null;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios.get(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" + localStorage.getItem(\"userId\")).then(function (coins) {\n        _this.userData = coins.data.uuid;\n      });\n      setTimeout(function () {\n        _this.$store.dispatch(\"loadData\", _this.userData).then(function () {\n          var len = _this.$store.state.getData.data;\n\n          for (var i = 0; i < len.length; i++) {\n            if (_this.$store.state.getData.data[i].key == \"owners\") {\n              var a = _this.$store.state.getData.data[i];\n              var b = JSON.parse(a.val);\n\n              if (b.owners.length > 0) {\n                _this.driversData = b.owners;\n\n                _this.addDriverDataValidation(b.owners.length);\n              }\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n    }\n  },\n  created: function created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated: function updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    validateFieldCustom: function validateFieldCustom(fieldName, index) {\n      if (this.driversData[index][fieldName].trim() == '') {\n        this.validations.driversData[index][fieldName].is_valid = false;\n        this.validations.driversData[index][fieldName].text = 'Please enter   ' + fieldName + '!';\n      } else {\n        this.validations.driversData[index][fieldName].is_valid = true;\n      }\n    },\n    sizeOfObject: function sizeOfObject(obj) {\n      var size = 0,\n          key;\n\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n      }\n\n      return size;\n    },\n    changeData: function changeData() {\n      if (!this.driverIsOwner) {\n        this.driversData[0].firstName = \"\";\n        this.driversData[0].lastName = \"\";\n        this.driversData[0].dobM = \"\";\n        this.driversData[0].dobD = \"\";\n        this.driversData[0].dobY = \"\";\n        this.driversData[0].address = \"\";\n        this.driversData[0].city = \"\";\n        this.driversData[0].state = \"\";\n        this.driversData[0].zip = \"\";\n      }\n    },\n    addDriverDataValidation: function addDriverDataValidation(count) {\n      var driverDatavalidationsLength = this.sizeOfObject(this.validations.driversData);\n\n      for (var index = 0; index < count; index++) {\n        this.$set(this.validations.driversData, driverDatavalidationsLength + index, {\n          firstName: {\n            is_valid: true,\n            text: \"\"\n          },\n          lastName: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobY: {\n            is_valid: true,\n            text: \"\"\n          },\n          address: {\n            is_valid: true,\n            text: \"\"\n          },\n          city: {\n            is_valid: true,\n            text: \"\"\n          },\n          state: {\n            is_valid: true,\n            text: \"\"\n          },\n          zip: {\n            is_valid: true,\n            text: \"\"\n          }\n        });\n      }\n    },\n    addDriverData: function addDriverData(data) {\n      if (data == undefined || data.firstName == undefined) {\n        this.driversData.push({\n          firstName: \"\",\n          lastName: \"\",\n          dobM: \"\",\n          dobD: \"\",\n          dobY: \"\",\n          address: \"\",\n          city: \"\",\n          zip: \"\",\n          state: \"\"\n        });\n        this.addDriverDataValidation(1);\n      } else {\n        this.driversData.push(data);\n      }\n    },\n    removeDriverData: function removeDriverData(key) {\n      this.driversData.splice(key, 1);\n      Vue.delete(this.validations.driversData, key); // this.validations.driversData.splice( key, 1 );\n    },\n    validateNewDriverData: function validateNewDriverData() {\n      var validNewDriverForm = true;\n\n      for (var index in this.driversData) {\n        if (this.driversData.hasOwnProperty(index)) {\n          if (this.driversData[index].firstName.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].firstName.is_valid = false;\n            this.validations.driversData[index].firstName.text = 'Please enter firstname!';\n          } else {\n            this.validations.driversData[index].firstName.is_valid = true;\n            this.validations.driversData[index].firstName.text = '';\n          }\n\n          if (this.driversData[index].lastName.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].lastName.is_valid = false;\n            this.validations.driversData[index].lastName.text = 'Please enter lastname!';\n          } else {\n            this.validations.driversData[index].lastName.is_valid = true;\n            this.validations.driversData[index].lastName.text = '';\n          }\n\n          if (this.driversData[index].dobM < 1 || this.driversData[index].dobM > 12) {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text = \"Please enter valid month!\";\n\n            if (this.driversData[index].dobM.trim() == '') {\n              validNewDriverForm = false;\n              this.validations.driversData[index].dobM.is_valid = false;\n              this.validations.driversData[index].dobM.text = 'Please enter month!';\n            }\n          } else {\n            this.validations.driversData[index].dobM.is_valid = true;\n            this.validations.driversData[index].dobM.text = '';\n          }\n\n          if (this.driversData[index].dobD < 1 || this.driversData[index].dobD > 31) {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text = \"Please enter valid date!\";\n\n            if (this.driversData[index].dobD.trim() == '') {\n              validNewDriverForm = false;\n              this.validations.driversData[index].dobD.is_valid = false;\n              this.validations.driversData[index].dobD.text = 'Please enter date!';\n            }\n          } else {\n            this.validations.driversData[index].dobD.is_valid = true;\n            this.validations.driversData[index].dobD.text = '';\n          }\n\n          if (this.driversData[index].dobY.length < 4) {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text = \"Please enter valid year!\";\n\n            if (this.driversData[index].dobY.trim() == '') {\n              validNewDriverForm = false;\n              this.validations.driversData[index].dobY.is_valid = false;\n              this.validations.driversData[index].dobY.text = 'Please enter year!';\n            }\n          } else {\n            this.validations.driversData[index].dobY.is_valid = true;\n            this.validations.driversData[index].dobY.text = '';\n          }\n\n          if (this.driversData[index].address.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].address.is_valid = false;\n            this.validations.driversData[index].address.text = 'Please enter an address!';\n          } else {\n            this.validations.driversData[index].address.is_valid = true;\n            this.validations.driversData[index].address.text = '';\n          }\n\n          if (this.driversData[index].city.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].city.is_valid = false;\n            this.validations.driversData[index].city.text = 'Please enter city!';\n          } else {\n            this.validations.driversData[index].city.is_valid = true;\n            this.validations.driversData[index].city.text = '';\n          }\n\n          if (this.driversData[index].state.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].state.is_valid = false;\n            this.validations.driversData[index].state.text = 'Please enter state!';\n          } else {\n            this.validations.driversData[index].state.is_valid = true;\n            this.validations.driversData[index].state.text = '';\n          }\n\n          if (!this.driversData[index].zip.match(/(^\\d{5}$)/)) {\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = 'Please enter minimum 5 character!';\n\n            if (this.driversData[index].zip.trim() == '') {\n              validNewDriverForm = false;\n              this.validations.driversData[index].zip.is_valid = false;\n              this.validations.driversData[index].zip.text = 'Please enter zip!';\n            }\n          } else {\n            this.validations.driversData[index].zip.is_valid = true;\n            this.validations.driversData[index].zip.text = '';\n          }\n        }\n      }\n\n      return validNewDriverForm;\n    },\n    newQuoteReq: function newQuoteReq() {\n      var _this2 = this;\n\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(function (willDelete) {\n        _this2.show();\n\n        if (willDelete) {\n          _this2.$router.push({\n            name: \"AccountInfoOwners\"\n          });\n        } else {\n          swal(\"Thank You!\", \"Your changes has been accepted! You will get new Updated Quote\", {\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    show: function () {\n      var _show = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var temp_uuid, allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.formData.driverIsOwner && this.formData.driverOwnerIndex === -1) {\n                  this.formData.driverIsOwner = false;\n                }\n\n                this.setDataFromForms();\n\n                if (!this.noOwners) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                allFormAreValid = this.$refs.ownerForm ? this.$refs.ownerForm.every(function (formRef) {\n                  return formRef.validateForm();\n                }) : true;\n\n                if (allFormAreValid) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 7:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem(\"token\")) {\n                  temp_uuid = this.userData;\n                } else {\n                  temp_uuid = this.uuid;\n                }\n\n                _context.prev = 10;\n                _context.next = 13;\n                return API.post(\"company/save\", {\n                  key: \"owners\",\n                  val: {\n                    owners: this.driversData.map(function (o) {\n                      var owner = _objectSpread({}, o);\n\n                      delete owner._uuid;\n                      return owner;\n                    })\n                  },\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: temp_uuid\n                });\n\n              case 13:\n                data = _context.sent;\n\n                if (data.status === \"OK\") {\n                  if (!localStorage.getItem(\"token\")) {\n                    if (this.showmodel) {\n                      this.showmodel = false;\n                    } else {\n                      this.showmodel = true;\n                    }\n                  }\n                } else if (data.status === \"ERROR\") {\n                  this.showmodel = true;\n                  this.error = data.messages[0] || data.data;\n                }\n\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](10);\n                console.error(_context.t0); // this.showmodel = true;\n\n                this.error = _context.t0.message;\n\n              case 21:\n                _context.prev = 21;\n                // this.showmodel = true;\n                this.loading = false;\n                return _context.finish(21);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[10, 17, 21, 24]]);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }(),\n    addForm: function addForm() {\n      // \n      // var dropDown = document.getElementById(\"driverList\");\n      // \n      // dropDown.selectedIndex = 0;\n      // \n      // \n      this.formData.owners.push({\n        _uuid: uuidv4()\n      });\n      this.error = null;\n    },\n    removeForm: function removeForm(index) {\n      this.formData.owners.splice(index, 1);\n    },\n    onChange: function onChange($event) {\n      // if(this.drivers.drivers[$event.target.value] != undefined){\n      this.driversData[0] = Object.assign({}, this.driversData[0], this.drivers.drivers[$event.target.value]);\n      this.driversData[0].dobD = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[1];\n      this.driversData[0].dobM = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[0];\n      this.driversData[0].dobY = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[2]; // }\n      // else{\n      //   \n      // this.formData.driverIsOwner= false;\n      //     this.driversData[0] = \"\";\n      // }\n    },\n    updateHint: function updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    goPrevForm: function goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm: function goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    loadCompany: function () {\n      var _loadCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var data, _data$data$a, drivers, ownersTab, owners;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                this.error = null;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return API.get(\"company/current\");\n\n              case 5:\n                data = _context2.sent;\n\n                if (data.status === \"OK\") {\n                  _data$data$a = data.data.a, drivers = _data$data$a.drivers, ownersTab = _data$data$a.owners; // \n\n                  this.uuid = data.data.b;\n\n                  if (drivers) {\n                    this.drivers = drivers;\n                  }\n\n                  if (ownersTab) {\n                    owners = ownersTab.owners; // this.formData = {\n                    //   ...this.formData,\n                    //   ...ownersTab,\n                    //   owners: ownersTab.map(o => ({ ...o, _uuid: uuidv4() }))\n                    // };\n\n                    if (data.data.a.owners.owners.length > 0) {\n                      this.driversData = data.data.a.owners.owners;\n                      this.addDriverDataValidation(data.data.a.owners.owners.length);\n                    } else {\n                      this.addDriverData();\n                    }\n                  } else {\n                    // this.addForm();\n                    this.addDriverData();\n                  }\n                } else if (data.status === \"ERROR\") {// this.$router.replace({ name: 'Home' });\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(_context2.t0);\n                this.error = _context2.t0.message;\n\n              case 13:\n                _context2.prev = 13;\n                this.loading = false; // this.addDriverData();\n\n                return _context2.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9, 13, 16]]);\n      }));\n\n      function loadCompany() {\n        return _loadCompany.apply(this, arguments);\n      }\n\n      return loadCompany;\n    }(),\n    // setDataFromForms() {\n    //   let owners = [];\n    //   if (this.$refs.ownerForm) {\n    //     this.$refs.ownerForm.forEach(formRef => {\n    //       let formData = formRef.getFormData();\n    //       owners.push(formData);\n    //     });\n    //   }\n    //   this.formData.owners = owners;\n    // },\n    updateCompany: function () {\n      var _updateCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var allFormAreValid, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.formData.driverIsOwner && this.formData.driverOwnerIndex === -1) {\n                  this.formData.driverIsOwner = false;\n                } // this.setDataFromForms();\n                // if (this.noOwners) {\n                //   return;\n                // }\n                // let allFormAreValid = this.$refs.ownerForm\n                //   ? this.$refs.ownerForm.every(formRef => formRef.validateForm())\n                //   : true;\n\n\n                allFormAreValid = this.validateNewDriverData();\n\n                if (allFormAreValid) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                this.loading = true;\n                this.error = null;\n\n                if (localStorage.getItem('token')) {\n                  this.final_uuid = this.userData;\n                } else {\n                  this.final_uuid = this.uuid;\n                }\n\n                _context3.prev = 9;\n                _context3.next = 12;\n                return API.post(\"company/save\", {\n                  key: \"owners\",\n                  val: {\n                    owners: this.driversData.map(function (o) {\n                      var owner = _objectSpread({}, o);\n\n                      delete owner._uuid;\n                      return owner; // owners: this.formData.owners.map(o => {\n                      //   let owner = { ...o };\n                      //   delete owner._uuid;\n                      //   return owner;\n                      // })\n                      // owners: this.driversData.map(o => {\n                      //   let owner = { ...o };\n                      //   delete owner._uuid;\n                      //   return owner;\n                      // })\n                    })\n                  },\n                  user_id: localStorage.getItem(\"userId\"),\n                  uuid: this.final_uuid\n                });\n\n              case 12:\n                data = _context3.sent;\n\n                if (data.status === \"OK\") {\n                  this.goNextForm();\n                } else if (data.status === \"ERROR\") {\n                  this.error = data.messages[0] || data.data;\n                }\n\n                axios.post(\"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" + this.final_uuid + \"&user_id=\" + localStorage.getItem(\"userId\")).then(function (res) {});\n                _context3.next = 21;\n                break;\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](9);\n                console.error(_context3.t0);\n                this.error = _context3.t0.message;\n\n              case 21:\n                _context3.prev = 21;\n                this.loading = false;\n                return _context3.finish(21);\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[9, 17, 21, 24]]);\n      }));\n\n      function updateCompany() {\n        return _updateCompany.apply(this, arguments);\n      }\n\n      return updateCompany;\n    }()\n  }\n};",{"version":3,"sources":["AccountInfoOwners.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"drivers-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Owner(s)</h4>\n\n          <div class=\"d-flex\">\n            <div class=\"pr-3\">Are one of the drivers the owner?</div>\n\n            <div class=\"flex-grow-1\">\n              <label>\n                <input v-model=\"formData.driverIsOwner\" type=\"checkbox\"  v-on:change=\"changeData()\"> Yes\n              </label>\n            </div>\n          </div>\n\n          <div v-if=\"formData.driverIsOwner\" class=\"col-12 col-md-6\">\n            <select v-model=\"formData.driverOwnerIndex\" @change=\"onChange($event)\" class=\"lt-input\" id=\"driverList\" >\n              <option value=\"\" disabled>Select Driver</option>\n \n              <option\n                v-for=\"(item, index) in drivers.drivers\"\n                :key=\"index\"\n                :value=\"index\"\n              >{{ item.firstName }} {{ item.lastName }}</option>\n            </select>\n          </div>\n\n          <hr>\n\n          <template>\n            <div class=\"owner-form-item container-fluid mob-2\" v-for=\"(singleDriver, index) in driversData\" :key=\"index\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h2 class=\"h5\">Owner #{{ index + 1 }}</h2>\n                </div>\n\n                <button\n                  v-show=\"index > 0\"\n                  type=\"button\"\n                  class=\"lt-button mx-2 mb-3\"\n                  @click=\"removeDriverData(index)\"\n                  title=\"Remove Owner\"\n                >\n                  <h3>-</h3>\n                </button>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.firstName }\" -->\n                    <input\n                      v-model=\"driversData[index].firstName\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"First name\"\n                      :class=\"{ 'has-error': !validations.driversData[index].firstName.is_valid }\"\n                      @change=\"validateFieldCustom('firstName', index)\"\n                    />\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('firstName')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('firstName')\" -->\n                    \n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].firstName.is_valid\">{{ validations.driversData[index].firstName.text }}</div>\n                  </div>\n                </div>\n\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.lastName }\" -->\n                    <input\n                      v-model=\"driversData[index].lastName\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"Last name\"\n                      :class=\"{ 'has-error': !validations.driversData[index].lastName.is_valid }\"\n                      @change=\"validateFieldCustom('lastName', index)\"\n                    />\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('lastName')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('lastName')\" -->\n\n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].lastName.is_valid\">{{ validations.driversData[index].lastName.text }}</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\" id=\"text-date\">\n                <div class=\"col-12 col-md-6 pt-2\">\n                  <div>Date of Birth</div>\n\n                  <!-- <div\n                    v-if=\"formErrors.dateOfBirth\"\n                    class=\"text-danger\"\n                  >{{ formErrors.dateOfBirth }}</div> -->\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                          <!-- :class=\"{ 'has-error': formErrors.dobM }\" -->\n                        <input\n                          v-model=\"driversData[index].dobM\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          :class=\"{ 'has-error': !validations.driversData[index].dobM.is_valid }\"\n                          @change=\"validateFieldCustom('Month', index)\"\n                          placeholder=\"MM\"\n                        />\n                          <!-- required -->\n                          <!-- @focus=\"onFocus('dobM')\"\n                          @blur=\"onBlur\"\n                          @change=\"validateField('dobM')\" -->\n\n                        <div class=\"text-danger\" v-show=\"!validations.driversData[index].dobM.is_valid\">{{ validations.driversData[index].dobM.text }}</div>\n                      </div>\n                    </div>\n                    <span class=\"mt-1\">/</span>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                          <!-- :class=\"{ 'has-error': formErrors.dobD }\" -->\n                        <input\n                          v-model=\"driversData[index].dobD\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          :class=\"{ 'has-error': !validations.driversData[index].dobD.is_valid }\"\n                          @change=\"validateFieldCustom('Day', index)\"\n                          placeholder=\"DD\"\n                        />\n                          <!-- required -->\n                          <!-- @focus=\"onFocus('dobD')\"\n                          @blur=\"onBlur\"\n                          @change=\"validateField('dobD')\" -->\n\n                        <div class=\"text-danger\" v-show=\"!validations.driversData[index].dobD.is_valid\">{{ validations.driversData[index].dobD.text }}</div>\n                      </div>\n                    </div>\n                    <span class=\"mt-1\">/</span>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                          <!-- :class=\"{ 'has-error': formErrors.dobY }\" -->\n                        <input\n                          v-model=\"driversData[index].dobY\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          placeholder=\"YYYY\"\n                          :class=\"{ 'has-error': !validations.driversData[index].dobY.is_valid }\"\n                          @change=\"validateFieldCustom('Year', index)\"\n                        />\n                          <!-- required -->\n                          <!-- @focus=\"onFocus('dobY')\"\n                          @blur=\"onBlur\"\n                          @change=\"validateField('dobY')\" -->\n\n                        <div class=\"text-danger\" v-show=\"!validations.driversData[index].dobY.is_valid\">{{ validations.driversData[index].dobY.text }}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.address }\" -->\n                    <input\n                      v-model=\"driversData[index].address\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"Address\"\n                      :class=\"{ 'has-error': !validations.driversData[index].address.is_valid }\"\n                      @change=\"validateFieldCustom('address', index)\"\n                    >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('address')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('address')\" -->\n\n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].address.is_valid\">{{ validations.driversData[index].address.text }}</div>\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.city }\" -->\n                    <input\n                      v-model=\"driversData[index].city\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"City\"\n                      :class=\"{ 'has-error': !validations.driversData[index].city.is_valid }\"\n                      @change=\"validateFieldCustom('city', index)\"\n                    >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('city')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('city')\" -->\n\n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].city.is_valid\">{{ validations.driversData[index].city.text }}</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.state }\" -->\n                    <input\n                      v-model=\"driversData[index].state\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"State\"\n                      :class=\"{ 'has-error': !validations.driversData[index].state.is_valid }\"\n                      @change=\"validateFieldCustom('state', index)\"\n                    >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('state')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('state')\" -->\n\n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].state.is_valid\">{{ validations.driversData[index].state.text }}</div>\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.zip }\" -->\n                    <input\n                      v-model=\"driversData[index].zip\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      minlength=\"5\"\n                      placeholder=\"Zip\"\n                      :class=\"{ 'has-error': !validations.driversData[index].zip.is_valid }\"\n                       @change=\"validateFieldCustom('zip', index)\"\n                    >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('zip')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('zip')\" -->\n\n                    <div class=\"text-danger\" v-show=\"!validations.driversData[index].zip.is_valid\">{{ validations.driversData[index].zip.text }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </template>\n          <!-- <account-info-owners-item\n            v-for=\"(item, index) in formData.owners\"\n            ref=\"ownerForm\"\n            :key=\"item._uuid\"\n            :index=\"index\"\n            :owner=\"item\"\n            :drivers=\"drivers\"\n            :selectedDriver=\"selectedDriver\"\n            :id=\"formData.driverIsOwner\"\n            class=\"mb-5\"\n            @update-hint=\"updateHint\"\n            @remove-form=\"removeForm\"\n          />-->\n\n          <hr>\n\n          <div class=\"row align-items-center mb-3\">\n            <div class=\"col font-weight-bold\">Add another owner</div>\n\n            <div class=\"col-auto text-right\">\n              <button type=\"button\" class=\"lt-button px-3\" @click=\"addDriverData\" title=\"Add Owner\">+</button>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Drivers</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div\n                  class=\"next-title text-center d-inline pl-3 text-white mob-2\"\n                >Additional Comments</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"AccountInfoOwners\",\n  components: {\n    // AccountInfoOwnersItem: () => import(\"./AccountInfoOwnersItem.vue\"),\n    modelLogin: ModalLogin,\n\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      userData:\"\",\n      uuid:\"\",\n      final_uuid:\"\",\n      selected:\"Select Driver\",\n      showmodel: false,\n      save: true,\n      formData: {\n        driverIsOwner: false,\n        driverOwnerIndex: -1,\n        owners: []\n      },\n      drivers: [],\n      driversData: [],\n      loading: false,\n      error: null,\n      selectedDriver: \"\",\n      validations: {\n        driversData: {},\n        oneDriver: {\n          is_valid: true,\n          text: \"\"\n        },\n        website: {\n          is_valid: true,\n          text: \"\"\n        }\n      }\n    };\n  },\n  computed: {\n    noOwners() {\n      return (\n        this.formData.driverOwnerIndex === -1 && !this.formData.owners.length\n      );\n    }\n  },\n  watch: {\n    \"formData.driverIsOwner\"(driverIsOwner) {\n      if (!driverIsOwner) {\n        this.formData.driverOwnerIndex = -1;\n      }\n    },\n    noOwners(noOwners) {\n      this.error = noOwners ? \"Please add at least one owner\" : null;\n    }\n  },\n  mounted() {\n      if (localStorage.getItem(\"token\")) {\n      this.save = false;\n        axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          \n          for (let i = 0; i < len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"owners\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              \n              if(b.owners.length>0){\n                this.driversData = b.owners; \n                this.addDriverDataValidation(b.owners.length)\n              }\n            }\n          }\n        }\n      )},1000)\n    } else {\n      this.save = true;\n    }\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    validateFieldCustom(fieldName, index){\n      if (this.driversData[index][fieldName].trim() == '') {\n        this.validations.driversData[index][fieldName].is_valid = false;\n        this.validations.driversData[index][fieldName].text = 'Please enter   ' + fieldName + '!';\n      } else {\n        this.validations.driversData[index][fieldName].is_valid = true;\n      }\n    },\n    sizeOfObject(obj) {\n      var size = 0, key;\n      for (key in obj) {\n          if (obj.hasOwnProperty(key)) size++;\n      }\n      return size;\n    },\n    changeData(){\n      if(!this.driverIsOwner){\n        \n        this.driversData[0].firstName = \"\";\n        this.driversData[0].lastName = \"\";\n        this.driversData[0].dobM = \"\";\n        this.driversData[0].dobD = \"\";\n        this.driversData[0].dobY=\"\";\n        this.driversData[0].address=\"\";\n        this.driversData[0].city=\"\";\n        this.driversData[0].state=\"\";\n        this.driversData[0].zip=\"\"\n      }\n    },\n    addDriverDataValidation(count){\n      let driverDatavalidationsLength = this.sizeOfObject(this.validations.driversData);\n      for (let index = 0; index < count; index++) {\n\n        this.$set(this.validations.driversData, driverDatavalidationsLength + index, {\n          firstName: {\n            is_valid: true,\n            text: \"\"\n          },\n          lastName: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobY: {\n            is_valid: true,\n            text: \"\"\n          },\n          address: {\n            is_valid: true,\n            text: \"\"\n          },\n          city: {\n            is_valid: true,\n            text: \"\"\n          },\n          state: {\n            is_valid: true,\n            text: \"\"\n          },\n          zip: {\n            is_valid: true,\n            text: \"\"\n          }\n        });\n      }\n    },\n    addDriverData(data) {\n      \n      if  (data == undefined || data.firstName == undefined) {\n        this.driversData.push({\n          firstName: \"\",\n          lastName: \"\",\n          dobM: \"\",\n          dobD: \"\",\n          dobY: \"\",\n          address: \"\",\n          city: \"\",\n          zip: \"\",\n          state: \"\"\n        });\n        this.addDriverDataValidation(1);\n      } else {\n        this.driversData.push(data);\n      }\n    },\n    removeDriverData( key ){\n      this.driversData.splice( key, 1 );\n      Vue.delete(this.validations.driversData,key)\n      // this.validations.driversData.splice( key, 1 );\n    },\n    validateNewDriverData() {\n      let validNewDriverForm = true;\n      for( var index in this.driversData ) {\n        if (this.driversData.hasOwnProperty( index ) ) {\n          \n          if( this.driversData[index].firstName.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].firstName.is_valid = false;\n            this.validations.driversData[index].firstName.text = 'Please enter firstname!';\n          }else{\n            this.validations.driversData[index].firstName.is_valid = true;\n            this.validations.driversData[index].firstName.text = '';\n          }\n\n          if( this.driversData[index].lastName.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].lastName.is_valid = false;\n            this.validations.driversData[index].lastName.text = 'Please enter lastname!';\n          }else{\n            this.validations.driversData[index].lastName.is_valid = true;\n            this.validations.driversData[index].lastName.text = '';\n          }\n\n          if (this.driversData[index].dobM < 1 || this.driversData[index].dobM > 12)  {\n              validNewDriverForm = false;\n              this.validations.driversData[index].dobM.is_valid = false;\n              this.validations.driversData[index].dobM.text =\n              \"Please enter valid month!\";\n          if( this.driversData[index].dobM.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text = 'Please enter month!';\n          }}\n          else{\n            this.validations.driversData[index].dobM.is_valid = true;\n            this.validations.driversData[index].dobM.text = '';\n          }\n\n\n\n          if (this.driversData[index].dobD < 1 || this.driversData[index].dobD > 31)  {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text =\n              \"Please enter valid date!\";\n          if( this.driversData[index].dobD.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text = 'Please enter date!';\n          }}else{\n            this.validations.driversData[index].dobD.is_valid = true;\n            this.validations.driversData[index].dobD.text = '';\n          }\n\n          \n          \n          if(this.driversData[index].dobY.length<4){\n              validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text =\n              \"Please enter valid year!\";\n          if( this.driversData[index].dobY.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text = 'Please enter year!';\n          }}else{\n            this.validations.driversData[index].dobY.is_valid = true;\n            this.validations.driversData[index].dobY.text = '';\n          }\n\n\n          if( this.driversData[index].address.trim() == '' ){\n            validNewDriverForm = false;\n            this.validations.driversData[index].address.is_valid = false;\n            this.validations.driversData[index].address.text = 'Please enter an address!';\n          }else{\n            this.validations.driversData[index].address.is_valid = true;\n            this.validations.driversData[index].address.text = '';\n          }\n\n          if(this.driversData[index].city.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].city.is_valid = false;\n            this.validations.driversData[index].city.text = 'Please enter city!';\n          } else {\n            this.validations.driversData[index].city.is_valid = true;\n            this.validations.driversData[index].city.text = '';\n          }\n\n          if(this.driversData[index].state.trim() == '') {\n            validNewDriverForm = false;\n            this.validations.driversData[index].state.is_valid = false;\n            this.validations.driversData[index].state.text = 'Please enter state!';\n          } else {\n            this.validations.driversData[index].state.is_valid = true;\n            this.validations.driversData[index].state.text = '';\n          }\n\n\n          if(!this.driversData[index].zip.match(/(^\\d{5}$)/)){\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = 'Please enter minimum 5 character!';\n          if(this.driversData[index].zip.trim() == '' ) {\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = 'Please enter zip!';\n          }} else {\n            this.validations.driversData[index].zip.is_valid = true;\n            this.validations.driversData[index].zip.text = '';\n          }\n        }\n      }\n      return validNewDriverForm;\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n        this.show();\n        \n        if (willDelete) {\n\n          this.$router.push({ name: \"AccountInfoOwners\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      if (\n        this.formData.driverIsOwner &&\n        this.formData.driverOwnerIndex === -1\n      ) {\n        this.formData.driverIsOwner = false;\n      }\n\n      this.setDataFromForms();\n      var temp_uuid;\n      if (this.noOwners) {\n        return;\n      }\n\n      let allFormAreValid = this.$refs.ownerForm\n        ? this.$refs.ownerForm.every(formRef => formRef.validateForm())\n        : true;\n\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n        \n      } else {\n        temp_uuid = this.uuid;\n        \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"owners\",\n          \n          val: {\n              owners:this.driversData.map(o => {\n              let owner = { ...o };\n              delete owner._uuid;\n              return owner;\n            })\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n\n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n              this.showmodel = false;\n            } else {\n              this.showmodel = true;\n            }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        // this.showmodel = true;\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    addForm() {\n      // \n\n      // var dropDown = document.getElementById(\"driverList\");\n      // \n      // dropDown.selectedIndex = 0;\n      // \n      // \n      this.formData.owners.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.formData.owners.splice(index, 1);\n    },\n\n    onChange($event) {\n      \n      \n      // if(this.drivers.drivers[$event.target.value] != undefined){\n      this.driversData[0] = Object.assign({}, this.driversData[0], this.drivers.drivers[$event.target.value]);\n      this.driversData[0].dobD = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[1];\n      this.driversData[0].dobM = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[0];\n      this.driversData[0].dobY = this.drivers.drivers[$event.target.value].dateOfBirth.split('/')[2];\n      // }\n      // else{\n      //   \n        \n      // this.formData.driverIsOwner= false;\n      //     this.driversData[0] = \"\";\n          \n      // }\n      \n    },\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { drivers, owners: ownersTab } = data.data.a;\n          \n          // \n          this.uuid = data.data.b;\n          if (drivers) {\n            this.drivers = drivers;\n          }\n          if (ownersTab) {\n            \n          let { owners } = ownersTab;\n            \n            \n\n            // this.formData = {\n            //   ...this.formData,\n            //   ...ownersTab,\n            //   owners: ownersTab.map(o => ({ ...o, _uuid: uuidv4() }))\n            // };\n\n            if(data.data.a.owners.owners.length > 0) {\n              this.driversData = data.data.a.owners.owners;\n              \n              this.addDriverDataValidation(data.data.a.owners.owners.length)\n            } else {\n              this.addDriverData();\n            }\n\n          } else {\n            // this.addForm();\n            this.addDriverData();\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n          \n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n        // this.addDriverData();\n\n      }\n    },\n    // setDataFromForms() {\n    //   let owners = [];\n\n    //   if (this.$refs.ownerForm) {\n    //     this.$refs.ownerForm.forEach(formRef => {\n    //       let formData = formRef.getFormData();\n    //       owners.push(formData);\n    //     });\n    //   }\n\n    //   this.formData.owners = owners;\n    // },\n    async updateCompany() {\n      \n      if ( this.formData.driverIsOwner && this.formData.driverOwnerIndex === -1 ) {\n        this.formData.driverIsOwner = false;\n      }\n\n      // this.setDataFromForms();\n\n      // if (this.noOwners) {\n      //   return;\n      // }\n\n      // let allFormAreValid = this.$refs.ownerForm\n      //   ? this.$refs.ownerForm.every(formRef => formRef.validateForm())\n      //   : true;\n\n      let allFormAreValid = this.validateNewDriverData();\n      if (!allFormAreValid) {\n        \n        return;\n      } else {\n        \n      }\n\n      this.loading = true;\n      this.error = null;\n      if(localStorage.getItem('token')){\n\n        this.final_uuid = this.userData;\n        \n      }else{\n        this.final_uuid = this.uuid;\n        \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"owners\",\n          val: {\n             owners:this.driversData.map(o => {\n              let owner = { ...o };\n              delete owner._uuid;\n              return owner;\n            // owners: this.formData.owners.map(o => {\n            //   let owner = { ...o };\n            //   delete owner._uuid;\n            //   return owner;\n            // })\n            // owners: this.driversData.map(o => {\n            //   let owner = { ...o };\n            //   delete owner._uuid;\n            //   return owner;\n            // })\n             })\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n             axios.post(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\"+this.final_uuid+\"&user_id=\"+localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n            \n          })\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"css\">\nselect{\n  position: relative;\n  -webkit-appearance: none;\n  background: url('../assets/images/arrow-dropdown.png') no-repeat 96% center;\n  -moz-appearance: none;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}