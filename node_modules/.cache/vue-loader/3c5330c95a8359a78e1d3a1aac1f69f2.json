{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoCargoGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoCargoGroup.vue","mtime":1560855180793},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex';\nimport { validateField, validateForm, minLength } from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoCargoGroup',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        cargoGroup: []\n      },\n      rules: {\n        cargoGroup: [val => minLength(val, 1, 'Please select Cargo Group')]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState('cargo', ['cargoGroups']),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        (map[val] = true)\n        });\n      return map;\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    selectCargoGroup(cargoGroupValue) {\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit('update-hint', '');\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit('update-hint', this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { cargoGroup } = data.data;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'cargoGroup',\n          val: this.formData\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoCargoGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"AccountInfoCargoGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"cargo-group-form\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Cargo Group</h4>\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in cargoGroups\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 cargo-group\"\n                @click=\"selectCargoGroup(item.value)\"\n              >\n                <div class=\"p-1\">\n                  <img src=\"https://picsum.photos/g/100/100\" alt=\"\" />\n                </div>\n\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: cargoGroupMap[item.value] }\"\n                >\n                  {{ item.value }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.cargoGroup\" class=\"text-danger\">\n            {{ formErrors.cargoGroup }}\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">\n                  Business Structure\n                </div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">\n                  Cargo Hauled\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { validateField, validateForm, minLength } from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoCargoGroup',\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        cargoGroup: []\n      },\n      rules: {\n        cargoGroup: [val => minLength(val, 1, 'Please select Cargo Group')]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState('cargo', ['cargoGroups']),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        (map[val] = true)\n        });\n      return map;\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    selectCargoGroup(cargoGroupValue) {\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit('update-hint', '');\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit('update-hint', this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('update-hint', '');\n      this.$emit('go-to-form', this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { cargoGroup } = data.data;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'cargoGroup',\n          val: this.formData\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none{\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n     \n      border-radius: 5px;\n      min-height: 50px;\n     font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n       \n        \n        color: #5e98f9;\n      }\n    }\n  }\n @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3{\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n   @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3{\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"]}]}