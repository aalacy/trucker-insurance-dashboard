{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoDrivers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoDrivers.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"AccountInfoDrivers\",\n  components: {\n    AccountInfoDriversItem: () => import(\"./AccountInfoDriversItem.vue\"),\n    modelLogin: ModalLogin,\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      userData:\"\",\n      final_uuid: \"\",\n      uuid: \"\",\n      loading: false,\n      error: null,\n      save: true,\n      showmodel: false,\n      formData: {\n        drivers: []\n      },\n      driversData: [],\n      validations: {\n        driversData: {},\n        oneOwner: {\n          is_valid: true,\n          text: \"\"\n        },\n        website: {\n          is_valid: true,\n          text: \"\"\n        }\n      }\n    };\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n        axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          \n          for (let i = 0; i < len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"drivers\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              \n              if(b.drivers.length>0){\n                this.driversData = b.drivers; \n                this.addDriverDataValidation(b.drivers.length)\n              }\n            }\n          }\n        }\n      )},1000)\n    } else {\n      this.save = true;\n    }\n  },\n\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    validateFieldCustom(fieldName, index){\n      if (this.driversData[index][fieldName].trim() == '') {\n        this.validations.driversData[index][fieldName].is_valid = false;\n        this.validations.driversData[index][fieldName].text = 'Please enter   ' + fieldName + '!';\n      } else {\n        this.validations.driversData[index][fieldName].is_valid = true;\n      }\n    },\n    sizeOfObject(obj) {\n      var size = 0, key;\n      for (key in obj) {\n          if (obj.hasOwnProperty(key)) size++;\n      }\n      return size;\n    },\n   \n     addDriverDataValidation(count){\n      let driverDatavalidationsLength = this.sizeOfObject(this.validations.driversData);\n      for (let index = 0; index < count; index++) {\n\n        this.$set(this.validations.driversData, driverDatavalidationsLength + index, {\n         firstName: {\n            is_valid: true,\n            text: \"\"\n          },\n          middleName: {\n            is_valid: true,\n            text: \"\"\n          },\n          lastName: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobY: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohY: {\n            is_valid: true,\n            text: \"\"\n          },\n          address: {\n            is_valid: true,\n            text: \"\"\n          },\n          city: {\n            is_valid: true,\n            text: \"\"\n          },\n          state: {\n            is_valid: true,\n            text: \"\"\n          },\n          zip: {\n            is_valid: true,\n            text: \"\"\n          },\n          licenseNumber: {\n            is_valid: true,\n            text: \"\"\n          },\n          // yearsOfExperience: {\n          //   is_valid: true,\n          //   text: \"\"\n          // },\n          CDL: {\n            is_valid: true,\n            text: \"\"\n          }\n        });\n      }\n    },\n    addDriverData(data) {\n      // \n      if (data == undefined || data.firstName   == undefined ) {\n        // \n       this.driversData.push({\n          firstName: '',\n          middleName: '',\n          lastName: '',\n          dobM: '',\n          dobD: '',\n          dobY: '',\n          address: '',\n          city: '',\n          state: '',\n          zip: '',\n          dohM: '',\n          dohD: '',\n          dohY: '',\n          licenseNumber: '',\n          CDL: ''\n        });\n        // \n        this.addDriverDataValidation(1);\n      } else {\n        \n        this.driversData.push(data);\n      }\n      \n    },\n    removeDriverData(key) {\n      this.driversData.splice(key, 1);\n      // this.validations.driversData.splice(key, 1);\n      Vue.delete(this.validations.driversData,key)\n    },\n    validateNewDriverData() {\n      let validNewDriverForm = true;\n      for (var index in this.driversData) {\n        if (this.driversData.hasOwnProperty(index)) {\n          if (this.driversData[index].firstName.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].firstName.is_valid = false;\n            this.validations.driversData[index].firstName.text =\n              \"Please enter firstname!\";\n          } else {\n            this.validations.driversData[index].firstName.is_valid = true;\n            this.validations.driversData[index].firstName.text = \"\";\n          }\n\n          if (this.driversData[index].lastName.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].lastName.is_valid = false;\n            this.validations.driversData[index].lastName.text =\n              \"Please enter lastname!\";\n          } else {\n            this.validations.driversData[index].lastName.is_valid = true;\n            this.validations.driversData[index].lastName.text = \"\";\n          }\n\n          if (this.driversData[index].dobM < 1 || this.driversData[index].dobM > 12)  {\n              validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text =\n              \"Please enter valid month!\";\n            if(this.driversData[index].dobM.trim() == \"\"){\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text =\n              \"Please enter month!\";\n          }\n           }else {\n            this.validations.driversData[index].dobM.is_valid = true;\n            this.validations.driversData[index].dobM.text = \"\";\n          }\n\n          if (this.driversData[index].dobD < 1 || this.driversData[index].dobD > 31)  {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text =\n              \"Please enter valid date!\";\n          if (this.driversData[index].dobD.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text =\n              \"Please enter date!\";\n          } }else {\n            this.validations.driversData[index].dobD.is_valid = true;\n            this.validations.driversData[index].dobD.text = \"\";\n          }\n\n\n          if(this.driversData[index].dobY.length<4){\n              validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text =\n              \"Please enter valid year!\";\n          if (this.driversData[index].dobY.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text =\n              \"Please enter year!\";\n          } }else {\n            \n            this.validations.driversData[index].dobY.is_valid = true;\n            this.validations.driversData[index].dobY.text = \"\";\n          }\n\n           if (this.driversData[index].dohM < 1 || this.driversData[index].dohM > 12)  {\n              validNewDriverForm = false;\n            this.validations.driversData[index].dohM.is_valid = false;\n            this.validations.driversData[index].dohM.text =\n              \"Please enter valid month!\";\n          if (this.driversData[index].dohM.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohM.is_valid = false;\n            this.validations.driversData[index].dohM.text =\n              \"Please enter month!\";\n          } }else {\n            this.validations.driversData[index].dohM.is_valid = true;\n            this.validations.driversData[index].dohM.text = \"\";\n          }\n\n          \n          if (this.driversData[index].dohD < 1 || this.driversData[index].dohD > 31)  {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohD.is_valid = false;\n            this.validations.driversData[index].dohD.text =\n              \"Please enter valid date!\";\n          if (this.driversData[index].dohD.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohD.is_valid = false;\n            this.validations.driversData[index].dohD.text =\n              \"Please enter date!\";\n          }} else {\n            this.validations.driversData[index].dohD.is_valid = true;\n            this.validations.driversData[index].dohD.text = \"\";\n          }\n\n\n          if(this.driversData[index].dohY.length<4){\n              validNewDriverForm = false;\n            this.validations.driversData[index].dohY.is_valid = false;\n            this.validations.driversData[index].dohY.text =\n              \"Please enter valid year!\";\n          if (this.driversData[index].dohY.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohY.is_valid = false;\n            this.validations.driversData[index].dohY.text =\n              \"Please enter year!\";\n          }} else {\n            this.validations.driversData[index].dohY.is_valid = true;\n            this.validations.driversData[index].dohY.text = \"\";\n          }\n\n          if (this.driversData[index].address.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].address.is_valid = false;\n            this.validations.driversData[index].address.text =\n              \"Please enter an address!\";\n          } else {\n            this.validations.driversData[index].address.is_valid = true;\n            this.validations.driversData[index].address.text = \"\";\n          }\n\n          if (this.driversData[index].city.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].city.is_valid = false;\n            this.validations.driversData[index].city.text =\n              \"Please enter city!\";\n          } else {\n            this.validations.driversData[index].city.is_valid = true;\n            this.validations.driversData[index].city.text = \"\";\n          }\n\n          if (this.driversData[index].state.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].state.is_valid = false;\n            this.validations.driversData[index].state.text =\n              \"Please enter state!\";\n          } else {\n            this.validations.driversData[index].state.is_valid = true;\n            this.validations.driversData[index].state.text = \"\";\n          }\n\n          if(!this.driversData[index].zip.match(/(^\\d{5}$)/)){\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = 'Please enter minimum 5 character!';\n          \n          if (this.driversData[index].zip.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = \"Please enter zip!\";\n          }} else {\n            this.validations.driversData[index].zip.is_valid = true;\n            this.validations.driversData[index].zip.text = \"\";\n          }\n\n          if (this.driversData[index].licenseNumber.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].licenseNumber.is_valid = false;\n            this.validations.driversData[index].licenseNumber.text =\n              \"Please enter licenseNumber!\";\n          } else {\n            this.validations.driversData[index].licenseNumber.is_valid = true;\n            this.validations.driversData[index].licenseNumber.text = \"\";\n          }\n          \n        }\n      }\n      return validNewDriverForm;\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n        \n        this.show();\n        if (willDelete) {\n          this.$router.push({ name: \"AccountInfoDrivers\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      this.setDataFromForms();\n\n      let driverForms = this.$refs.driverForm;\n      if (!driverForms.length) {\n        return;\n      }\n\n      let allFormAreValid = driverForms.every(formRef =>\n        formRef.validateForm()\n      );\n\n      if (!allFormAreValid) {\n        return;\n      }\n      var temp_uuid;\n      this.loading = true;\n      this.error = null;\n\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n        \n      } else {\n        temp_uuid = this.uuid;\n        \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"drivers\",\n          val: {\n          drivers:this.driversData.map(d => {\n            let driver = { ...d };\n            delete driver._uuid;\n            return driver;\n          }),\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n\n        if (data.status === \"OK\") {\n          if (!localStorage.getItem(\"token\")) {\n            if (this.showmodel) {\n              this.showmodel = false;\n            } else {\n              this.showmodel = true;\n            }\n          }\n        } else if (data.status === \"ERROR\") {\n          this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        // this.showmodel = true;\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    addForm() {\n      this.drivers.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.drivers.splice(index, 1);\n\n      // if (!this.drivers.length) {\n      //   this.error = \"Please add at least one driver\";\n      // }\n    },\n\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n     let data = await API.get(\"company/current\");\n        this.uuid = data.data.b;\n        if (data.status === \"OK\") {\n          let { drivers } = data.data.a;\n          \n          if (drivers.drivers && drivers.drivers.length) {\n            this.drivers = drivers.drivers.map(d => ({ ...d, _uuid: uuidv4() }));\n\n            if(drivers.drivers.length>0){\n              this.driversData = drivers.drivers;\n              \n              this.addDriverDataValidation(drivers.drivers.length)\n            }else{\n              this.addDriverData();\n            }\n          } else {\n            // this.addForm();\n             this.addDriverData();\n          }\n        } else if (data.status === \"ERROR\") {\n           \n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n           this.addDriverData();\n      } finally {\n        this.loading = false;\n           \n      }\n    },\n    \n    async updateCompany() {\n      // if (!this.driversData.length) {\n      //   return;\n      // }\n      let allFormAreValid = this.validateNewDriverData();\n      if (!allFormAreValid) {\n        \n        return;\n      } else {\n        \n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n        \n      } else {\n        this.final_uuid = this.uuid;\n        \n      } \n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"drivers\",\n          val: {    \n          drivers:this.driversData.map(d => {\n            let driver = { ...d };\n            delete driver._uuid;\n            return driver;\n          }),\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.final_uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n            \n          });\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoDrivers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2efile":"AccountInfoDrivers.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"drivers-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Drivers</h4>\n\n          <!-- <account-info-drivers-item\n            v-for=\"(item, index) in drivers\"\n            ref=\"driverForm\"\n            :key=\"item._uuid\"\n            :index=\"index\"\n            :driver=\"item\"\n            class=\"mb-5\"\n            @update-hint=\"updateHint\"\n            @remove-form=\"removeForm\"\n          />-->\n\n          <hr>\n\n          <template>\n            \n            <div\n              class=\"owner-form-item container-fluid mob-2\"\n              v-for=\"(singleDriver, index) in driversData\"\n              :key=\"index\"\n            >\n            \n              <div class=\"row\">\n                <div class=\"col\">\n                  <h2 class=\"h5\">Driver #{{ index + 1 }}</h2>\n                </div>\n\n                <button\n                  v-show=\"index > 0\"\n                  type=\"button\"\n                  class=\"lt-button mx-2 mb-3\"\n                  @click=\"removeDriverData(index)\"\n                  title=\"Remove Driver\"\n                >\n                  <h3>-</h3>\n                </button>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-12 col-lg-5\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"driversData[index].firstName\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"First name\"\n                      :class=\"{ 'has-error': !validations.driversData[index].firstName.is_valid }\"\n                      @change=\"validateFieldCustom('firstName', index)\"\n                      \n                    >\n\n                    <div\n                      class=\"text-danger\"\n                      v-show=\"!validations.driversData[index].firstName.is_valid\"\n                    >{{ validations.driversData[index].firstName.text }}</div>\n                  </div>\n                </div>\n                  <div class=\"col-4 col-lg-2\">\n                    <div class=\"form-group\">\n                      <input\n                      v-model=\"driversData[index].middleName\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      maxlength=\"1\"\n                      placeholder=\"M.\"\n                    >\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].middleName.is_valid\"\n                      >{{ validations.driversData[index].middleName.text }}</div>\n                   </div>\n                  </div>\n\n                  <div class=\"col-12 col-lg-5\">\n                    <div class=\"form-group\">\n                      <input\n                        v-model=\"driversData[index].lastName\"\n                        type=\"text\"\n                        class=\"lt-input\"\n                        placeholder=\"Last name\"\n                        :class=\"{ 'has-error': !validations.driversData[index].lastName.is_valid }\"\n                        @change=\"validateFieldCustom('lastName', index)\"\n                      >\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].lastName.is_valid\"\n                      >{{ validations.driversData[index].lastName.text }}</div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"row\" id=\"text-date\">\n                  <div class=\"col-12 col-md-6 pt-2\">\n                    <div>Date of Birth</div>\n                  </div>\n\n                  <div class=\"col-12 col-md-6\" id=\"text-date\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                       \n                          <input\n                            v-model=\"driversData[index].dobM\"\n                            type=\"number\"\n                            class=\"lt-input\"\n                            placeholder=\"MM\"\n                            :class=\"{ 'has-error': !validations.driversData[index].dobM.is_valid }\"\n                            @change=\"validateFieldCustom('Month', index)\"\n                          >\n                          <!-- required -->\n                          <!-- @focus=\"onFocus('dobM')\"\n                          @blur=\"onBlur\"\n                          @change=\"validateField('dobM')\"-->\n\n                          <div\n                            class=\"text-danger\"\n                            v-show=\"!validations.driversData[index].dobM.is_valid\"\n                          >{{ validations.driversData[index].dobM.text }}</div>\n                        </div>\n                      </div>\n                      <span class=\"mt-1\">/</span>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <!-- :class=\"{ 'has-error': formErrors.dobD }\" -->\n                          <input\n                            v-model=\"driversData[index].dobD\"\n                            type=\"number\"\n                            class=\"lt-input\"\n                            placeholder=\"DD\"\n                            :class=\"{ 'has-error': !validations.driversData[index].dobD.is_valid }\"\n                            @change=\"validateFieldCustom('Day', index)\"\n                          >\n                          <!-- required -->\n                          <!-- @focus=\"onFocus('dobD')\"\n                          @blur=\"onBlur\"\n                          @change=\"validateField('dobD')\"-->\n\n                          <div\n                            class=\"text-danger\"\n                            v-show=\"!validations.driversData[index].dobD.is_valid\"\n                          >{{ validations.driversData[index].dobD.text }}</div>\n                        </div>\n                      </div>\n                      <span class=\"mt-1\">/</span>\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <!-- :class=\"{ 'has-error': formErrors.dobY }\" -->\n                          <input\n                            v-model=\"driversData[index].dobY\"\n                            type=\"number\"\n                            class=\"lt-input\"\n                            placeholder=\"YYYY\"\n                            :class=\"{ 'has-error': !validations.driversData[index].dobY.is_valid }\"\n                            @change=\"validateFieldCustom('Year', index)\"\n                          >\n                          \n\n                          <div\n                            class=\"text-danger\"\n                            v-show=\"!validations.driversData[index].dobY.is_valid\"\n                          >{{ validations.driversData[index].dobY.text }}</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <input\n                        v-model=\"driversData[index].licenseNumber\"\n                        type=\"text\"\n                        class=\"lt-input\"\n                        placeholder=\"License Number\"\n                        :class=\"{ 'has-error': !validations.driversData[index].licenseNumber.is_valid }\"\n                        @change=\"validateFieldCustom('licenseNumber', index)\"\n                      >\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].licenseNumber.is_valid\"\n                      >{{ validations.driversData[index].licenseNumber.text }}</div>\n                    </div>\n                  </div>\n\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <input\n                        v-model=\"driversData[index].CDL\"\n                        type=\"number\"\n                        class=\"lt-input\"\n                        placeholder=\"Years of CDL Experience\"\n                      >\n\n                      <!-- <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].CDL.is_valid\"\n                      >{{ validations.driversData[index].CDL.text }}</div> -->\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.address }\" -->\n                      <input\n                        v-model=\"driversData[index].address\"\n                        type=\"text\"\n                        class=\"lt-input\"\n                        placeholder=\"Address\"\n                       :class=\"{ 'has-error': !validations.driversData[index].address.is_valid }\"\n                       @change=\"validateFieldCustom('address', index)\"\n                      >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('address')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('address')\"-->\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].address.is_valid\"\n                      >{{ validations.driversData[index].address.text }}</div>\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-md-6\">\n                    <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.city }\" -->\n                      <input\n                        v-model=\"driversData[index].city\"\n                        type=\"text\"\n                        class=\"lt-input\"\n                        placeholder=\"City\"\n                       :class=\"{ 'has-error': !validations.driversData[index].city.is_valid }\"\n                       @change=\"validateFieldCustom('city', index)\"\n                      >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('city')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('city')\"-->\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].city.is_valid\"\n                      >{{ validations.driversData[index].city.text }}</div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.state }\" -->\n                      <input\n                        v-model=\"driversData[index].state\"\n                        type=\"text\"\n                        class=\"lt-input\"\n                        placeholder=\"State\"\n                       :class=\"{ 'has-error': !validations.driversData[index].state.is_valid }\"\n                       @change=\"validateFieldCustom('state', index)\"\n                      >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('state')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('state')\"-->\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].state.is_valid\"\n                      >{{ validations.driversData[index].state.text }}</div>\n                    </div>\n                  </div>\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <!-- :class=\"{ 'has-error': formErrors.zip }\" -->\n                      <input\n                        v-model=\"driversData[index].zip\"\n                        type=\"number\"\n                        class=\"lt-input\"\n                        minlength=\"5\"\n                        placeholder=\"Zip\"\n                      :class=\"{ 'has-error': !validations.driversData[index].zip.is_valid }\"\n                      @change=\"validateFieldCustom('zip', index)\"\n                      >\n                      <!-- required -->\n                      <!-- @focus=\"onFocus('zip')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('zip')\"-->\n\n                      <div\n                        class=\"text-danger\"\n                        v-show=\"!validations.driversData[index].zip.is_valid\"\n                      >{{ validations.driversData[index].zip.text }}</div>\n                    </div>\n                  </div>\n              \n              </div>\n              <div class=\"row\" id=\"text-date\">\n                <div class=\"col-12 col-md-6 pt-2\">\n                  <div>Date of Hire</div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <input\n                          v-model=\"driversData[index].dohM\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          placeholder=\"MM\"\n                          :class=\"{ 'has-error': !validations.driversData[index].dohM.is_valid }\"\n                          @change=\"validateFieldCustom('dohM', index)\"\n                        >\n                        <div\n                          class=\"text-danger\"\n                          v-show=\"!validations.driversData[index].dohM.is_valid\"\n                        >{{ validations.driversData[index].dohM.text }}</div>\n                      </div>\n                    </div>\n                    <span class=\"mt-1\">/</span>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <input\n                          v-model=\"driversData[index].dohD\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          placeholder=\"DD\"\n                           :class=\"{ 'has-error': !validations.driversData[index].dohD.is_valid }\"\n                          @change=\"validateFieldCustom('dohD', index)\"\n                        >\n                        <div\n                          class=\"text-danger\"\n                          v-show=\"!validations.driversData[index].dohD.is_valid\"\n                        >{{ validations.driversData[index].dohD.text }}</div>\n                      </div>\n                    </div>\n                    <span class=\"mt-1\">/</span>\n                    <div class=\"col\">\n                      <div class=\"form-group\">\n                        <input\n                          v-model=\"driversData[index].dohY\"\n                          type=\"number\"\n                          class=\"lt-input\"\n                          placeholder=\"YYYY\"\n                           :class=\"{ 'has-error': !validations.driversData[index].dohY.is_valid }\"\n                          @change=\"validateFieldCustom('dohY', index)\"\n                        >\n                        <div\n                          class=\"text-danger\"\n                          v-show=\"!validations.driversData[index].dohY.is_valid\"\n                        >{{ validations.driversData[index].dohY.text }}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n             \n              <!-- <div class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"form-group\">\n                    <select\n                      v-model=\"driversData[index].yearsOfExperience\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"Years of Experience\"\n                    >\n                      <option value>Years of Experience</option>\n\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option>\n                      <option>7</option>\n                      <option>8</option>\n                      <option>9</option>\n                      <option>10</option>\n                      <option>11</option>\n                      <option>12</option>\n                      <option>13</option>\n                      <option>14</option>\n                      <option>15</option>\n                      <option>16</option>\n                      <option>17</option>\n                      <option>18</option>\n                      <option>19</option>\n                      <option>20</option>\n                      <option>21</option>\n                      <option>22</option>\n                      <option>23</option>\n                      <option>24</option>\n                      <option>25</option>\n                      <option>26</option>\n                      <option>27</option>\n                      <option>28</option>\n                      <option>29</option>\n                      <option>30</option>\n                      <option>31</option>\n                      <option>32</option>\n                      <option>33</option>\n                      <option>34</option>\n                      <option>35</option>\n                      <option>36</option>\n                      <option>37</option>\n                      <option>38</option>\n                      <option>39</option>\n                      <option>40</option>\n                      <option>41</option>\n                      <option>42</option>\n                      <option>43</option>\n                      <option>44</option>\n                      <option>45+</option>\n                    </select>\n                    <div\n                      class=\"text-danger\"\n                      v-show=\"!validations.driversData[index].zip.is_valid\"\n                    >{{ validations.driversData[index].zip.text }}</div>\n                  </div>\n                </div>\n              </div> -->\n            </div>\n            </div>\n          </template>\n\n          <div class=\"row align-items-center mb-3\">\n            <div class=\"col font-weight-bold\">Add another driver</div>\n\n            <div class=\"col-auto text-right\">\n              <button\n                type=\"button\"\n                class=\"lt-button px-3\"\n                @click=\"addDriverData\"\n                title=\"Add Driver\"\n              >+</button>\n            </div>\n          </div>\n\n          <!-- <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div> -->\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default mob-2 px-4 btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">ELD Provider</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main mob-2 px-4 btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white mob-2\">Owners</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    \n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"AccountInfoDrivers\",\n  components: {\n    AccountInfoDriversItem: () => import(\"./AccountInfoDriversItem.vue\"),\n    modelLogin: ModalLogin,\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      userData:\"\",\n      final_uuid: \"\",\n      uuid: \"\",\n      loading: false,\n      error: null,\n      save: true,\n      showmodel: false,\n      formData: {\n        drivers: []\n      },\n      driversData: [],\n      validations: {\n        driversData: {},\n        oneOwner: {\n          is_valid: true,\n          text: \"\"\n        },\n        website: {\n          is_valid: true,\n          text: \"\"\n        }\n      }\n    };\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n        axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          \n          for (let i = 0; i < len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"drivers\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              \n              if(b.drivers.length>0){\n                this.driversData = b.drivers; \n                this.addDriverDataValidation(b.drivers.length)\n              }\n            }\n          }\n        }\n      )},1000)\n    } else {\n      this.save = true;\n    }\n  },\n\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    validateFieldCustom(fieldName, index){\n      if (this.driversData[index][fieldName].trim() == '') {\n        this.validations.driversData[index][fieldName].is_valid = false;\n        this.validations.driversData[index][fieldName].text = 'Please enter   ' + fieldName + '!';\n      } else {\n        this.validations.driversData[index][fieldName].is_valid = true;\n      }\n    },\n    sizeOfObject(obj) {\n      var size = 0, key;\n      for (key in obj) {\n          if (obj.hasOwnProperty(key)) size++;\n      }\n      return size;\n    },\n   \n     addDriverDataValidation(count){\n      let driverDatavalidationsLength = this.sizeOfObject(this.validations.driversData);\n      for (let index = 0; index < count; index++) {\n\n        this.$set(this.validations.driversData, driverDatavalidationsLength + index, {\n         firstName: {\n            is_valid: true,\n            text: \"\"\n          },\n          middleName: {\n            is_valid: true,\n            text: \"\"\n          },\n          lastName: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dobY: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohM: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohD: {\n            is_valid: true,\n            text: \"\"\n          },\n          dohY: {\n            is_valid: true,\n            text: \"\"\n          },\n          address: {\n            is_valid: true,\n            text: \"\"\n          },\n          city: {\n            is_valid: true,\n            text: \"\"\n          },\n          state: {\n            is_valid: true,\n            text: \"\"\n          },\n          zip: {\n            is_valid: true,\n            text: \"\"\n          },\n          licenseNumber: {\n            is_valid: true,\n            text: \"\"\n          },\n          // yearsOfExperience: {\n          //   is_valid: true,\n          //   text: \"\"\n          // },\n          CDL: {\n            is_valid: true,\n            text: \"\"\n          }\n        });\n      }\n    },\n    addDriverData(data) {\n      // \n      if (data == undefined || data.firstName   == undefined ) {\n        // \n       this.driversData.push({\n          firstName: '',\n          middleName: '',\n          lastName: '',\n          dobM: '',\n          dobD: '',\n          dobY: '',\n          address: '',\n          city: '',\n          state: '',\n          zip: '',\n          dohM: '',\n          dohD: '',\n          dohY: '',\n          licenseNumber: '',\n          CDL: ''\n        });\n        // \n        this.addDriverDataValidation(1);\n      } else {\n        \n        this.driversData.push(data);\n      }\n      \n    },\n    removeDriverData(key) {\n      this.driversData.splice(key, 1);\n      // this.validations.driversData.splice(key, 1);\n      Vue.delete(this.validations.driversData,key)\n    },\n    validateNewDriverData() {\n      let validNewDriverForm = true;\n      for (var index in this.driversData) {\n        if (this.driversData.hasOwnProperty(index)) {\n          if (this.driversData[index].firstName.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].firstName.is_valid = false;\n            this.validations.driversData[index].firstName.text =\n              \"Please enter firstname!\";\n          } else {\n            this.validations.driversData[index].firstName.is_valid = true;\n            this.validations.driversData[index].firstName.text = \"\";\n          }\n\n          if (this.driversData[index].lastName.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].lastName.is_valid = false;\n            this.validations.driversData[index].lastName.text =\n              \"Please enter lastname!\";\n          } else {\n            this.validations.driversData[index].lastName.is_valid = true;\n            this.validations.driversData[index].lastName.text = \"\";\n          }\n\n          if (this.driversData[index].dobM < 1 || this.driversData[index].dobM > 12)  {\n              validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text =\n              \"Please enter valid month!\";\n            if(this.driversData[index].dobM.trim() == \"\"){\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobM.is_valid = false;\n            this.validations.driversData[index].dobM.text =\n              \"Please enter month!\";\n          }\n           }else {\n            this.validations.driversData[index].dobM.is_valid = true;\n            this.validations.driversData[index].dobM.text = \"\";\n          }\n\n          if (this.driversData[index].dobD < 1 || this.driversData[index].dobD > 31)  {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text =\n              \"Please enter valid date!\";\n          if (this.driversData[index].dobD.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobD.is_valid = false;\n            this.validations.driversData[index].dobD.text =\n              \"Please enter date!\";\n          } }else {\n            this.validations.driversData[index].dobD.is_valid = true;\n            this.validations.driversData[index].dobD.text = \"\";\n          }\n\n\n          if(this.driversData[index].dobY.length<4){\n              validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text =\n              \"Please enter valid year!\";\n          if (this.driversData[index].dobY.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dobY.is_valid = false;\n            this.validations.driversData[index].dobY.text =\n              \"Please enter year!\";\n          } }else {\n            \n            this.validations.driversData[index].dobY.is_valid = true;\n            this.validations.driversData[index].dobY.text = \"\";\n          }\n\n           if (this.driversData[index].dohM < 1 || this.driversData[index].dohM > 12)  {\n              validNewDriverForm = false;\n            this.validations.driversData[index].dohM.is_valid = false;\n            this.validations.driversData[index].dohM.text =\n              \"Please enter valid month!\";\n          if (this.driversData[index].dohM.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohM.is_valid = false;\n            this.validations.driversData[index].dohM.text =\n              \"Please enter month!\";\n          } }else {\n            this.validations.driversData[index].dohM.is_valid = true;\n            this.validations.driversData[index].dohM.text = \"\";\n          }\n\n          \n          if (this.driversData[index].dohD < 1 || this.driversData[index].dohD > 31)  {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohD.is_valid = false;\n            this.validations.driversData[index].dohD.text =\n              \"Please enter valid date!\";\n          if (this.driversData[index].dohD.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohD.is_valid = false;\n            this.validations.driversData[index].dohD.text =\n              \"Please enter date!\";\n          }} else {\n            this.validations.driversData[index].dohD.is_valid = true;\n            this.validations.driversData[index].dohD.text = \"\";\n          }\n\n\n          if(this.driversData[index].dohY.length<4){\n              validNewDriverForm = false;\n            this.validations.driversData[index].dohY.is_valid = false;\n            this.validations.driversData[index].dohY.text =\n              \"Please enter valid year!\";\n          if (this.driversData[index].dohY.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].dohY.is_valid = false;\n            this.validations.driversData[index].dohY.text =\n              \"Please enter year!\";\n          }} else {\n            this.validations.driversData[index].dohY.is_valid = true;\n            this.validations.driversData[index].dohY.text = \"\";\n          }\n\n          if (this.driversData[index].address.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].address.is_valid = false;\n            this.validations.driversData[index].address.text =\n              \"Please enter an address!\";\n          } else {\n            this.validations.driversData[index].address.is_valid = true;\n            this.validations.driversData[index].address.text = \"\";\n          }\n\n          if (this.driversData[index].city.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].city.is_valid = false;\n            this.validations.driversData[index].city.text =\n              \"Please enter city!\";\n          } else {\n            this.validations.driversData[index].city.is_valid = true;\n            this.validations.driversData[index].city.text = \"\";\n          }\n\n          if (this.driversData[index].state.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].state.is_valid = false;\n            this.validations.driversData[index].state.text =\n              \"Please enter state!\";\n          } else {\n            this.validations.driversData[index].state.is_valid = true;\n            this.validations.driversData[index].state.text = \"\";\n          }\n\n          if(!this.driversData[index].zip.match(/(^\\d{5}$)/)){\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = 'Please enter minimum 5 character!';\n          \n          if (this.driversData[index].zip.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].zip.is_valid = false;\n            this.validations.driversData[index].zip.text = \"Please enter zip!\";\n          }} else {\n            this.validations.driversData[index].zip.is_valid = true;\n            this.validations.driversData[index].zip.text = \"\";\n          }\n\n          if (this.driversData[index].licenseNumber.trim() == \"\") {\n            validNewDriverForm = false;\n            this.validations.driversData[index].licenseNumber.is_valid = false;\n            this.validations.driversData[index].licenseNumber.text =\n              \"Please enter licenseNumber!\";\n          } else {\n            this.validations.driversData[index].licenseNumber.is_valid = true;\n            this.validations.driversData[index].licenseNumber.text = \"\";\n          }\n          \n        }\n      }\n      return validNewDriverForm;\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n        \n        this.show();\n        if (willDelete) {\n          this.$router.push({ name: \"AccountInfoDrivers\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      this.setDataFromForms();\n\n      let driverForms = this.$refs.driverForm;\n      if (!driverForms.length) {\n        return;\n      }\n\n      let allFormAreValid = driverForms.every(formRef =>\n        formRef.validateForm()\n      );\n\n      if (!allFormAreValid) {\n        return;\n      }\n      var temp_uuid;\n      this.loading = true;\n      this.error = null;\n\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n        \n      } else {\n        temp_uuid = this.uuid;\n        \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"drivers\",\n          val: {\n          drivers:this.driversData.map(d => {\n            let driver = { ...d };\n            delete driver._uuid;\n            return driver;\n          }),\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n\n        if (data.status === \"OK\") {\n          if (!localStorage.getItem(\"token\")) {\n            if (this.showmodel) {\n              this.showmodel = false;\n            } else {\n              this.showmodel = true;\n            }\n          }\n        } else if (data.status === \"ERROR\") {\n          this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        // this.showmodel = true;\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    addForm() {\n      this.drivers.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.drivers.splice(index, 1);\n\n      // if (!this.drivers.length) {\n      //   this.error = \"Please add at least one driver\";\n      // }\n    },\n\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n     let data = await API.get(\"company/current\");\n        this.uuid = data.data.b;\n        if (data.status === \"OK\") {\n          let { drivers } = data.data.a;\n          \n          if (drivers.drivers && drivers.drivers.length) {\n            this.drivers = drivers.drivers.map(d => ({ ...d, _uuid: uuidv4() }));\n\n            if(drivers.drivers.length>0){\n              this.driversData = drivers.drivers;\n              \n              this.addDriverDataValidation(drivers.drivers.length)\n            }else{\n              this.addDriverData();\n            }\n          } else {\n            // this.addForm();\n             this.addDriverData();\n          }\n        } else if (data.status === \"ERROR\") {\n           \n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n           this.addDriverData();\n      } finally {\n        this.loading = false;\n           \n      }\n    },\n    \n    async updateCompany() {\n      // if (!this.driversData.length) {\n      //   return;\n      // }\n      let allFormAreValid = this.validateNewDriverData();\n      if (!allFormAreValid) {\n        \n        return;\n      } else {\n        \n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n        \n      } else {\n        this.final_uuid = this.uuid;\n        \n      } \n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"drivers\",\n          val: {    \n          drivers:this.driversData.map(d => {\n            let driver = { ...d };\n            delete driver._uuid;\n            return driver;\n          }),\n          },\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.final_uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n            \n          });\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\nselect {\n  position: relative;\n  -webkit-appearance: none;\n  background: url(\"../assets/images/arrow-dropdown.png\") no-repeat 96% center;\n  -moz-appearance: none;\n}\n</style>\n\n"]}]}