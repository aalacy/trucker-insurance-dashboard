{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoOwners.vue?vue&type=template&id=32f0a6fb&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoOwners.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"drivers-form container-fluid mob-2\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.updateCompany($event)\n          }\n        }\n      },\n      [\n        _c(\"div\", { staticClass: \"card mb-5\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"card-body\" },\n            [\n              _c(\"h4\", { staticClass: \"card-title form-sub-title\" }, [\n                _vm._v(\"Owner(s)\")\n              ]),\n              _c(\"div\", { staticClass: \"d-flex\" }, [\n                _c(\"div\", { staticClass: \"pr-3\" }, [\n                  _vm._v(\"Are one of the drivers the owner?\")\n                ]),\n                _c(\"div\", { staticClass: \"flex-grow-1\" }, [\n                  _c(\"label\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.formData.driverIsOwner,\n                          expression: \"formData.driverIsOwner\"\n                        }\n                      ],\n                      attrs: { type: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(_vm.formData.driverIsOwner)\n                          ? _vm._i(_vm.formData.driverIsOwner, null) > -1\n                          : _vm.formData.driverIsOwner\n                      },\n                      on: {\n                        change: [\n                          function($event) {\n                            var $$a = _vm.formData.driverIsOwner,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.formData,\n                                    \"driverIsOwner\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.formData,\n                                    \"driverIsOwner\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.formData, \"driverIsOwner\", $$c)\n                            }\n                          },\n                          function($event) {\n                            return _vm.changeData()\n                          }\n                        ]\n                      }\n                    }),\n                    _vm._v(\" Yes\\n            \")\n                  ])\n                ])\n              ]),\n              _vm.formData.driverIsOwner\n                ? _c(\"div\", { staticClass: \"col-12 col-md-6\" }, [\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.driverOwnerIndex,\n                            expression: \"formData.driverOwnerIndex\"\n                          }\n                        ],\n                        staticClass: \"lt-input\",\n                        attrs: { id: \"driverList\" },\n                        on: {\n                          change: [\n                            function($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function(o) {\n                                  return o.selected\n                                })\n                                .map(function(o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.$set(\n                                _vm.formData,\n                                \"driverOwnerIndex\",\n                                $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              )\n                            },\n                            function($event) {\n                              return _vm.onChange($event)\n                            }\n                          ]\n                        }\n                      },\n                      [\n                        _c(\"option\", { attrs: { value: \"\", disabled: \"\" } }, [\n                          _vm._v(\"Select Driver\")\n                        ]),\n                        _vm._l(_vm.drivers.drivers, function(item, index) {\n                          return _c(\n                            \"option\",\n                            { key: index, domProps: { value: index } },\n                            [\n                              _vm._v(\n                                _vm._s(item.firstName) +\n                                  \" \" +\n                                  _vm._s(item.lastName)\n                              )\n                            ]\n                          )\n                        })\n                      ],\n                      2\n                    )\n                  ])\n                : _vm._e(),\n              _c(\"hr\"),\n              _vm._l(_vm.driversData, function(singleDriver, index) {\n                return _c(\n                  \"div\",\n                  {\n                    key: index,\n                    staticClass: \"owner-form-item container-fluid mob-2\"\n                  },\n                  [\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col\" }, [\n                        _c(\"h2\", { staticClass: \"h5\" }, [\n                          _vm._v(\"Owner #\" + _vm._s(index + 1))\n                        ])\n                      ]),\n                      _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: index > 0,\n                              expression: \"index > 0\"\n                            }\n                          ],\n                          staticClass: \"lt-button mx-2 mb-3\",\n                          attrs: { type: \"button\", title: \"Remove Owner\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.removeDriverData(index)\n                            }\n                          }\n                        },\n                        [_c(\"h3\", [_vm._v(\"-\")])]\n                      )\n                    ]),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].firstName,\n                                expression: \"driversData[index].firstName\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .firstName.is_valid\n                            },\n                            attrs: { type: \"text\", placeholder: \"First name\" },\n                            domProps: {\n                              value: _vm.driversData[index].firstName\n                            },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\n                                  \"firstName\",\n                                  index\n                                )\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"firstName\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index]\n                                    .firstName.is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].firstName.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].firstName\n                                    .text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].lastName,\n                                expression: \"driversData[index].lastName\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .lastName.is_valid\n                            },\n                            attrs: { type: \"text\", placeholder: \"Last name\" },\n                            domProps: {\n                              value: _vm.driversData[index].lastName\n                            },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\n                                  \"lastName\",\n                                  index\n                                )\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"lastName\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index]\n                                    .lastName.is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].lastName.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].lastName\n                                    .text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ])\n                    ]),\n                    _c(\n                      \"div\",\n                      { staticClass: \"row\", attrs: { id: \"text-date\" } },\n                      [\n                        _vm._m(0, true),\n                        _c(\"div\", { staticClass: \"col-12 col-md-6\" }, [\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.driversData[index].dobM,\n                                      expression: \"driversData[index].dobM\"\n                                    }\n                                  ],\n                                  staticClass: \"lt-input\",\n                                  class: {\n                                    \"has-error\": !_vm.validations.driversData[\n                                      index\n                                    ].dobM.is_valid\n                                  },\n                                  attrs: { type: \"number\", placeholder: \"MM\" },\n                                  domProps: {\n                                    value: _vm.driversData[index].dobM\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.validateFieldCustom(\n                                        \"Month\",\n                                        index\n                                      )\n                                    },\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.driversData[index],\n                                        \"dobM\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\n                                  \"div\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: !_vm.validations.driversData[\n                                          index\n                                        ].dobM.is_valid,\n                                        expression:\n                                          \"!validations.driversData[index].dobM.is_valid\"\n                                      }\n                                    ],\n                                    staticClass: \"text-danger\"\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.validations.driversData[index].dobM\n                                          .text\n                                      )\n                                    )\n                                  ]\n                                )\n                              ])\n                            ]),\n                            _c(\"span\", { staticClass: \"mt-1\" }, [_vm._v(\"/\")]),\n                            _c(\"div\", { staticClass: \"col\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.driversData[index].dobD,\n                                      expression: \"driversData[index].dobD\"\n                                    }\n                                  ],\n                                  staticClass: \"lt-input\",\n                                  class: {\n                                    \"has-error\": !_vm.validations.driversData[\n                                      index\n                                    ].dobD.is_valid\n                                  },\n                                  attrs: { type: \"number\", placeholder: \"DD\" },\n                                  domProps: {\n                                    value: _vm.driversData[index].dobD\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.validateFieldCustom(\n                                        \"Day\",\n                                        index\n                                      )\n                                    },\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.driversData[index],\n                                        \"dobD\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\n                                  \"div\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: !_vm.validations.driversData[\n                                          index\n                                        ].dobD.is_valid,\n                                        expression:\n                                          \"!validations.driversData[index].dobD.is_valid\"\n                                      }\n                                    ],\n                                    staticClass: \"text-danger\"\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.validations.driversData[index].dobD\n                                          .text\n                                      )\n                                    )\n                                  ]\n                                )\n                              ])\n                            ]),\n                            _c(\"span\", { staticClass: \"mt-1\" }, [_vm._v(\"/\")]),\n                            _c(\"div\", { staticClass: \"col\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.driversData[index].dobY,\n                                      expression: \"driversData[index].dobY\"\n                                    }\n                                  ],\n                                  staticClass: \"lt-input\",\n                                  class: {\n                                    \"has-error\": !_vm.validations.driversData[\n                                      index\n                                    ].dobY.is_valid\n                                  },\n                                  attrs: {\n                                    type: \"number\",\n                                    placeholder: \"YYYY\"\n                                  },\n                                  domProps: {\n                                    value: _vm.driversData[index].dobY\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.validateFieldCustom(\n                                        \"Year\",\n                                        index\n                                      )\n                                    },\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.driversData[index],\n                                        \"dobY\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                }),\n                                _c(\n                                  \"div\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: !_vm.validations.driversData[\n                                          index\n                                        ].dobY.is_valid,\n                                        expression:\n                                          \"!validations.driversData[index].dobY.is_valid\"\n                                      }\n                                    ],\n                                    staticClass: \"text-danger\"\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.validations.driversData[index].dobY\n                                          .text\n                                      )\n                                    )\n                                  ]\n                                )\n                              ])\n                            ])\n                          ])\n                        ])\n                      ]\n                    ),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].address,\n                                expression: \"driversData[index].address\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .address.is_valid\n                            },\n                            attrs: { type: \"text\", placeholder: \"Address\" },\n                            domProps: { value: _vm.driversData[index].address },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\"address\", index)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"address\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index]\n                                    .address.is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].address.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].address\n                                    .text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].city,\n                                expression: \"driversData[index].city\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .city.is_valid\n                            },\n                            attrs: { type: \"text\", placeholder: \"City\" },\n                            domProps: { value: _vm.driversData[index].city },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\"city\", index)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"city\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index]\n                                    .city.is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].city.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].city.text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].state,\n                                expression: \"driversData[index].state\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .state.is_valid\n                            },\n                            attrs: { type: \"text\", placeholder: \"State\" },\n                            domProps: { value: _vm.driversData[index].state },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\"state\", index)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"state\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index]\n                                    .state.is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].state.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].state.text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ]),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.driversData[index].zip,\n                                expression: \"driversData[index].zip\"\n                              }\n                            ],\n                            staticClass: \"lt-input\",\n                            class: {\n                              \"has-error\": !_vm.validations.driversData[index]\n                                .zip.is_valid\n                            },\n                            attrs: {\n                              type: \"text\",\n                              minlength: \"5\",\n                              placeholder: \"Zip\"\n                            },\n                            domProps: { value: _vm.driversData[index].zip },\n                            on: {\n                              change: function($event) {\n                                return _vm.validateFieldCustom(\"zip\", index)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.driversData[index],\n                                  \"zip\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: !_vm.validations.driversData[index].zip\n                                    .is_valid,\n                                  expression:\n                                    \"!validations.driversData[index].zip.is_valid\"\n                                }\n                              ],\n                              staticClass: \"text-danger\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.validations.driversData[index].zip.text\n                                )\n                              )\n                            ]\n                          )\n                        ])\n                      ])\n                    ])\n                  ]\n                )\n              }),\n              _c(\"hr\"),\n              _c(\"div\", { staticClass: \"row align-items-center mb-3\" }, [\n                _c(\"div\", { staticClass: \"col font-weight-bold\" }, [\n                  _vm._v(\"Add another owner\")\n                ]),\n                _c(\"div\", { staticClass: \"col-auto text-right\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"lt-button px-3\",\n                      attrs: { type: \"button\", title: \"Add Owner\" },\n                      on: { click: _vm.addDriverData }\n                    },\n                    [_vm._v(\"+\")]\n                  )\n                ])\n              ]),\n              _vm.error\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"alert alert-danger\",\n                      attrs: { role: \"alert\" }\n                    },\n                    [_vm._v(_vm._s(_vm.error))]\n                  )\n                : _vm._e()\n            ],\n            2\n          ),\n          _c(\"div\", { staticClass: \"card-footer\" }, [\n            _c(\"div\", { staticClass: \"form-buttons next-wrapper\" }, [\n              _c(\"div\", { staticClass: \"col-6 p-0\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass:\n                      \"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\",\n                    attrs: { disabled: _vm.loading, type: \"button\" },\n                    on: { click: _vm.goPrevForm }\n                  },\n                  [\n                    _vm._v(\"\\n              Prev\\n              \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"next-title text-center d-inline pl-3 mob-2\"\n                      },\n                      [_vm._v(\"Drivers\")]\n                    )\n                  ]\n                )\n              ]),\n              _c(\"div\", { staticClass: \"col-6 p-0\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass:\n                      \"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\",\n                    attrs: { disabled: _vm.loading, type: \"submit\" }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n              \" +\n                        _vm._s(_vm.loading ? \"Loading...\" : \"Next\") +\n                        \"\\n              \"\n                    ),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"next-title text-center d-inline pl-3 text-white mob-2\"\n                      },\n                      [_vm._v(\"Additional Comments\")]\n                    )\n                  ]\n                )\n              ])\n            ])\n          ])\n        ]),\n        _vm.save\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"d-flex justify-content-center m-4\",\n                on: { click: _vm.show }\n              },\n              [\n                _c(\"span\", { staticClass: \"save-hover\" }, [\n                  _vm._v(\"Save & Continue\")\n                ])\n              ]\n            )\n          : _c(\n              \"div\",\n              {\n                staticClass: \"d-flex justify-content-center m-4\",\n                on: { click: _vm.newQuoteReq }\n              },\n              [\n                _c(\"span\", { staticClass: \"save-hover\" }, [\n                  _vm._v(\"Save Changes\")\n                ])\n              ]\n            ),\n        _vm.showmodel ? _c(\"div\", [_c(\"modelLogin\")], 1) : _vm._e()\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col-12 col-md-6 pt-2\" }, [\n      _c(\"div\", [_vm._v(\"Date of Birth\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}