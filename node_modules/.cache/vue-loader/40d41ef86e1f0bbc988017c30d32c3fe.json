{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoUploadDocuments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoUploadDocuments.vue","mtime":1563011864417},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport { isMobile } from \"mobile-device-detect\";\nimport ModalLogin from \"./ModalLogin.vue\";\nexport default {\n  name: \"AccountInfoUploadDocuments\",\n  mobile: \"phone\",\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    modelLogin: ModalLogin\n  },\n mounted(){\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.save = true\n   }\n },\n  data() {\n    return {\n      msg: isMobile\n        ? \"Welcome to Your Vue.js mobile App!\"\n        : \"Welcome to Your Vue.js App\",\n      showmodel: false,\n      save:true,\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      // rules: {},\n      formErrors: {},\n      preview: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    submitBtnText() {\n      if (this.loading) {\n        return \"Loading...\";\n      }\n\n      let {\n        imageIdFront,\n        imageIdBack,\n        imageDOT,\n        imageRegistration\n      } = this.formData;\n      let anyImageSelected =\n        imageIdFront || imageIdBack || imageDOT || imageRegistration;\n      if (anyImageSelected) {\n        return \"Upload\";\n      }\n\n      return \"Skip\";\n    }\n  },\n \n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.uploadDocuments()\n  },\n  methods: {\n    // validateField(fieldName) {\n    //   validateField(fieldName, this.formData, this.rules, this.formErrors);\n    // },\n    // validateForm() {\n    //   this.formErrors = {};\n    //   return validateForm(this.formData, this.rules, this.formErrors);\n    // },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    show() {\n      if (this.showmodel) {\n        this.showmodel = false;\n      } else {\n        this.showmodel = true;\n      }\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    async uploadDocuments() {\n      // let formIsValid = this.validateForm();\n      // if (!formIsValid) {\n      //   return;\n      // }\n\n      try {\n        let data = await API.formData(\"company/upload\", this.formData);\n\n        // console.log(data);\n\n        if (data.status === \"OK\") {\n          console.log(\"this.nextForm\", this.nextForm);\n          this.$router.push({ name: this.nextForm });\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",null]}