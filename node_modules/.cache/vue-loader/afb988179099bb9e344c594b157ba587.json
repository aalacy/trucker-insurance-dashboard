{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/ModalLogin.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/ModalLogin.vue","mtime":1562986457939},{"path":"/Users/admin/Desktop/luckytruck/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.bor-rad{\n    border-radius: 20px !important; \n}\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  transition: opacity 0.3s ease;\n}\n\n.modal-wrapper {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.modal-container {\n  width: 300px;\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.3s ease;\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.modal-header h3 {\n  margin-top: 0;\n  color: #42b983;\n}\n\n.modal-body {\n  margin: 20px 0;\n}\n\n.modal-default-button {\n  float: right;\n}\n\n/*\n * The following styles are auto-applied to elements with\n * transition=\"modal\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n\n.modal-enter {\n  opacity: 0;\n}\n\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave-active .modal-container {\n        \n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n.color-fb,\n.color-g {\n  width: 28px;\n  height: auto;\n}\n.color-fb path {\n  fill: #3b5998;\n  font-size: 18px;\n}\n.color-g path {\n  fill: #db3236;\n  font-size: 18px;\n}\n.log-in-text {\n  font-size: 1.5rem;\n}\n@media screen and (max-width: 1024px) {\n  .dispay {\n    display: block !important;\n  }\n}\n",{"version":3,"sources":["ModalLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalLogin.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"modal-template \">\n    <transition name=\"modal\">\n      <div class=\"modal-mask \" v-if=\"showModal\">\n        <div class=\"modal-wrapper col-12 col-sm-10 col-md-8 col-lg-5 \">\n          <div class=\"modal-container bor-rad\"  >\n               <form class=\"login-form\" @submit.prevent>\n            <div class=\"form-title row\">\n              <div class=\"title log-in-text \">Welcome back!</div>\n              <div class=\"form-group\">\n                      <button type=\"button\" class=\"btn ico-btna\" @click=\"dosomething\">\n                     <font-awesome-icon\n                        icon=\"times\"\n                        size=\"2x\"\n                       class=\"d-flex ml-5\"\n                      />\n                      </button>\n                <!-- <router-link\n                 @click.native=\"dosomething\"\n                 to=\"/\"\n                  tag=\"button\"\n                  type=\"button\"\n                  class=\"lt-button lt-button-close pl-5\"\n                /> -->\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <input\n              v-model=\"formData.email\"\n                type=\"email\"\n                class=\"lt-input lt-input-border\"\n                placeholder=\"Email\"\n              >\n            </div>\n\n            <div class=\"form-group\">\n              <input\n                v-model=\"formData.password\"\n                type=\"password\"\n                class=\"lt-input lt-input-border\"\n                placeholder=\"Password\"\n              >\n            </div>\n\n            <div class=\"d-flex align-items-center\">\n              <div>\n                <a href=\"#forgot-password\" class=\"text-reset\" @click.prevent>Forgot your password?</a>\n              </div>\n\n              <div class=\"text-right flex-grow-1\">\n                <button\n                  type=\"submit\"\n                  @click=\"login\"\n                  class=\"lt-button lt-button-main go-button\"\n                >LOGIN</button>\n                <!-- <button\n                  :disabled=\"loading\"\n                  type=\"submit\"\n                  @click=\"logout\"\n                  class=\"lt-button lt-button-main go-button\"\n                >LOGOUT</button>-->\n              </div>\n            </div>\n            <div class=\"row align-items-stretch sign-in-with\">\n              <div class=\"col mt-4 text-center\">\n                <div class=\"border-top  pt-2 pb-2\">Sign in With</div>\n                <font-awesome-icon\n                  :icon=\"{ prefix: 'fab', iconName: 'facebook-square' }\"\n                  size=\"2x\"\n                  class=\"mr-4 color-fb\"\n                />\n                <font-awesome-icon\n                  :icon=\"{ prefix: 'fab', iconName: 'google' }\"\n                  size=\"2x\"\n                  class=\"color-g\"\n                />\n              </div>\n            </div>\n            <div>\n              <router-link  :to=\"{ name: 'SignUp' }\">\n                <span>New user? Sign up</span>\n              </router-link>\n            </div>\n          </form>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <div id=\"app\">\n      <!-- <button id=\"show-modal\" @click=\"showModal = true\">Show Modal</button> -->\n      <!-- use the modal component, pass in the prop -->\n      <!-- <modal v-if=\"showModal\" @close=\"showModal = false\"> -->\n        <!--\n      you can use custom content here to overwrite\n      default content\n        -->\n      <!-- </modal> -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API } from \"../api.js\";\n\nexport default {\n  name: \"ModalLogin\",\n  data() {\n    return {\n      \n      showModal: true,\n      formData:{\n      email:'',\n      password:'',\n      userID:''\n      // uuid:''\n    }\n    };\n    \n  },\n  mounted(){\n    localStorage.setItem(\"showModal\",true)\n    // this.uuid = localStorage.getItem(\"uuid\")\n    // console.log(\"uuid login\",this.uuid)\n  },\n  methods:{\n     async login() {\n     \n      try {\n        let data = await API.post(\"users/login\", {\n          email: this.formData.email,\n          password: this.formData.password,\n        });\n        console.log(\"data\", data.data.id);\n\n        if (data.status === \"ok\") {\n          console.log(\"data2\", data.status);\n           let t = data.data;\n           localStorage.setItem(\"token\", t);\n           localStorage.setItem(\"accBtn\",true);\n           localStorage.setItem(\"userId\",data.data.id)\n           localStorage.setItem(\"viewQuote\", false);\n           localStorage.setItem(\"showModal\",false)\n          this.$router.push({ name: \"AccountInfoPersonalInfo\" });\n        } else if (data.status === \"error\") {\n          this.error = data.messages || data.data;\n        }\n      } catch (err) {\n        console.error(\"catch\", err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    dosomething(){\n      if(this.showModal)\n      {\n        // console.log(\"modal if1\",this.showModal)\n        localStorage.setItem(\"showModal\",false)\n        // console.log(\"modal local set\",localStorage.getItem(\"showModal\"))\n        this.showModal = false;\n        // console.log(\"modal if2\",this.showModal)\n      }\n      else{\n        // localStorage.setItem(\"showModal\",true)\n        console.log(\"modal else\",this.showModal)\n        this.showModal = true;\n      }\n    }\n  }\n\n  \n};\n</script>\n\n\n<style>\n.bor-rad{\n    border-radius: 20px !important; \n}\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  transition: opacity 0.3s ease;\n}\n\n.modal-wrapper {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.modal-container {\n  width: 300px;\n  margin: 0px auto;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.3s ease;\n  font-family: Helvetica, Arial, sans-serif;\n}\n\n.modal-header h3 {\n  margin-top: 0;\n  color: #42b983;\n}\n\n.modal-body {\n  margin: 20px 0;\n}\n\n.modal-default-button {\n  float: right;\n}\n\n/*\n * The following styles are auto-applied to elements with\n * transition=\"modal\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n\n.modal-enter {\n  opacity: 0;\n}\n\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave-active .modal-container {\n        \n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n.color-fb,\n.color-g {\n  width: 28px;\n  height: auto;\n}\n.color-fb path {\n  fill: #3b5998;\n  font-size: 18px;\n}\n.color-g path {\n  fill: #db3236;\n  font-size: 18px;\n}\n.log-in-text {\n  font-size: 1.5rem;\n}\n@media screen and (max-width: 1024px) {\n  .dispay {\n    display: block !important;\n  }\n}\n</style>\n\n"]}]}