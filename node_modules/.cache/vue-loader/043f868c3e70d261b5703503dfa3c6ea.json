{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoQuestions.vue?vue&type=style&index=0&id=5aec5a42&lang=scss&scoped=true&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoQuestions.vue","mtime":1563369189172},{"path":"/Users/admin/Desktop/luckytruck/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.account-info-questions-form {\n  .answer {\n    border: 1px solid #b3aaaa;\n    width: 100%;\n    height: 80px;\n    border-radius: 10px;\n    margin-top: 10px;\n  }\n}\n",{"version":3,"sources":["AccountInfoQuestions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountInfoQuestions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"account-info-questions-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Additional Underwriting Questions</h4>\n\n          <div v-for=\"{ text, key, required } in questions\" :key=\"key\" class=\"mb-2\">\n            <div>{{ text }}</div>\n\n            <div>\n              <textarea v-model=\"formData[key]\" class=\"answer\" :required=\"required\"></textarea>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Owners</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 mob-2 btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 mob-2 text-white\">Document Upload</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport {mapState} from \"vuex\";\nexport default {\n  name: \"AccountInfoQuestions\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    modelLogin: ModalLogin\n  },\n mounted(){\n    if(localStorage.getItem(\"token\")){\n      this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data[9]\n     let b = JSON.parse(a.val)\n     this.formData.question1 = b.question1;\n     this.formData.question2 = b.question2;\n     console.log(\"b\",b)\n     this.save = false\n   }else{\n     this.save = true\n   }\n },\n computed:{\n...mapState([\n    'data'\n  ])\n} ,\n\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      questions: [\n        { key: \"question1\", text: \"Question 1\", required: true },\n        { key: \"question2\", text: \"Question 2\", required: true }\n      ],\n      formData: {\n        question1: \"\",\n        question2: \"\"\n      },\n      rules: {\n        question1: [required],\n        question2: [required]\n      },\n      loading: false,\n      error: null\n    };\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  methods: {\n    async show() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"questions\",\n          val: this.formData,\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n          if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        // this.showmodel = true;\n\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { questions } = data.data;\n\n          if (questions) {\n            this.formData = {\n              ...this.formData,\n              ...questions\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"questions\",\n          val: this.formData,\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.account-info-questions-form {\n  .answer {\n    border: 1px solid #b3aaaa;\n    width: 100%;\n    height: 80px;\n    border-radius: 10px;\n    margin-top: 10px;\n  }\n}\n</style>\n"]}]}