{"remainingRequest":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/luckytruck/src/views/SimpleEstimateWizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/luckytruck/src/views/SimpleEstimateWizard.vue","mtime":1561725709702},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/babel-loader/lib/index.js","mtime":1561725708306},{"path":"/home/ubuntu/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":1561725708362},{"path":"/home/ubuntu/luckytruck/node_modules/vue-loader/lib/index.js","mtime":1561725709586}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, email } from 'vuelidate/lib/validators';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'SimpleEstimateWizard',\n  components: {\n    DocumentPreviewMain: () =>\n      import(/* webpackChunkName: \"DocumentPreviewMain\" */\n      '../components/DocumentPreviewMain.vue'),\n    DocumentPreviewDot: () =>\n      import(/* webpackChunkName: \"DocumentPreviewDot\" */\n      '../components/DocumentPreviewDot.vue')\n  },\n  data() {\n    return {\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null,\n        phone: process.env.VUE_APP_WIZARD_PHONE || null,\n        email: process.env.VUE_APP_WIZARD_EMAIL || null,\n        garagingZip: process.env.VUE_APP_WIZARD_GARAGING_ZIP || null,\n        cargoType: process.env.VUE_APP_WIZARD_CARGO_TYPE || null,\n        ownerFirstName: process.env.VUE_APP_WIZARD_OWNER_FIRST_NAME || null,\n        ownerLastName: process.env.VUE_APP_WIZARD_OWNER_LAST_NAME || null,\n        ownerCountry: process.env.VUE_APP_WIZARD_OWNER_COUNTRY || null,\n        ownerState: process.env.VUE_APP_WIZARD_OWNER_STATE || null,\n        ownerCity: process.env.VUE_APP_WIZARD_OWNER_CITY || null,\n        ownerStreet: process.env.VUE_APP_WIZARD_OWNER_STREET || null,\n        ownerZip: process.env.VUE_APP_WIZARD_OWNER_ZIP || null,\n        ownerDOB: process.env.VUE_APP_WIZARD_OWNER_DOB || null,\n        yearBusinessStarted:\n          process.env.VUE_APP_WIZARD_YEAR_BUSINESS_STARTED || null,\n        electronicDeviceProvider:\n          process.env.VUE_APP_WIZARD_ELECTRONIC_DEVICE_PROVIDER || null,\n        currentInsuranceProvider:\n          process.env.VUE_APP_WIZARD_CURRENT_INSURANCE_PROVIDER || null\n      },\n      mainInfo: null,\n      dotData: null,\n      getDocInfoTimeout: null,\n      resultDOT: null,\n      loading: false,\n      error: null,\n      loadingDoc: false,\n      errorDoc: null\n    };\n  },\n  // vuelidate\n  validations: {\n    formData: {\n      imageIdFront: { required },\n      imageIdBack: { required },\n      imageDOT: { required },\n      imageRegistration: { required },\n      phone: { required },\n      email: { required, email },\n      garagingZip: { required },\n      cargoType: { required },\n      ownerFirstName: { required },\n      ownerLastName: { required },\n      ownerCountry: { required },\n      ownerState: { required },\n      ownerCity: { required },\n      ownerStreet: { required },\n      ownerZip: { required },\n      ownerDOB: { required },\n      yearBusinessStarted: { required },\n      electronicDeviceProvider: { required },\n      currentInsuranceProvider: { required }\n    }\n  },\n  computed: {\n    imgPrefix() {\n      return `${process.env.VUE_APP_BACKEND_URL}/tmp/`;\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.getDocInfoTimeout);\n  },\n  methods: {\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      if (!files.length) {\n        this.$v.formData[fieldName].$model = null;\n        return;\n      }\n\n      this.$v.formData[fieldName].$model = files[0];\n    },\n    docTryAgain() {\n      if (this.resultDOT === false) {\n        this.errorDoc = null;\n        this.mainInfo = null;\n      } else {\n        this.getDocInfo();\n      }\n    },\n    async submit() {\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        console.log('form invalid');\n        return;\n      }\n\n      console.log('submit');\n\n      try {\n        this.error = null;\n        this.loading = true;\n\n        let data = await API.formData('documents/upload', {\n          ...this.formData\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          this.mainInfo = data.data;\n          this.getDocInfo();\n        }\n      } catch (error) {\n        this.error = error.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async getDocInfo() {\n      console.log('getDocInfo');\n      this.loadingDoc = true;\n      this.errorDoc = null;\n\n      try {\n        let data = await API.post('documents/admin/item', {\n          _id: this.mainInfo._id\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          if (\n            data.data.resultDOT === false ||\n            data.data.resultDOT === 'false'\n          ) {\n            this.loadingDoc = false;\n            this.resultDOT = false;\n            this.errorDoc = 'Could not parse DOT document.';\n            return;\n          }\n\n          if (data.data.resultDOTSaferData) {\n            console.log('done');\n            this.loadingDoc = false;\n            this.dotData = data.data.resultDOTSaferData;\n          } else {\n            console.log('no DOT data');\n            this.getDocInfoTimeout = setTimeout(this.getDocInfo, 1000);\n          }\n        }\n      } catch (error) {\n        this.errorDoc = error.message;\n        this.loadingDoc = false;\n      }\n    }\n  }\n};\n",null]}