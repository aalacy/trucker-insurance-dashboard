{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailers.vue","mtime":1563263991686},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  validateField,\n  validateForm,\n  required,\n   minLength\n} from '../validators.js';\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport {mapState} from \"vuex\"\nexport default {\n  name: \"AccountInfoVehiclesAndTrailers\",\n  components: {\n    AccountInfoVehiclesAndTrailersItem: () =>\n      import(/* webpackChunkName: \"AccountInfoVehiclesAndTrailersItem\" */\n      \"./AccountInfoVehiclesAndTrailersItem.vue\"),\n    modelLogin: ModalLogin\n  },\n\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      vehiclesTrailers: [],\n      loading: false,\n      error: null,\n      vehicleOrTrailer:'',\n      formErrors:[],\n      type:[\n        'Vehicle',\n        'Trailer'\n      ]\n    };\n  },\n mounted(){\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data\n    //  let b = JSON.parse(a.val)\n    console.log(\"ba\",a)\n     this.save = true\n   }\n },\n computed:{\n...mapState([\n    'data'\n  ])\n} ,\n   updated(){\nif(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.loadCompany();\n  },\n  methods: {\n    addForm() {\n      this.vehiclesTrailers.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.vehiclesTrailers.splice(index, 1);\n\n      if (!this.vehiclesTrailers.length) {\n        this.error = \"Please add at least one vehicle / trailer\";\n      }\n      \n    },\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n     onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n     validateField(fieldName) {\n      validateField(fieldName, this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async show() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n       try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n            userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n           if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    \n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { vehiclesTrailers } = data.data;\n\n          if (vehiclesTrailers) {\n            // console.log(\"vehiclesTrailers\", uuidv4());\n            console.log(\"vehiclesTrailers\", vehiclesTrailers);\n            this.vehiclesTrailers = vehiclesTrailers.map(v => ({...v,_uuid: uuidv4()}));\n          }else{\n                        this.addForm();\n\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDataFromForms() {\n      let vehiclesTrailers = [];\n\n      this.$refs.vehicleForm.forEach(formRef => {\n        let formData = formRef.getFormData();\n        vehiclesTrailers.push(formData);\n      });\n\n      this.vehiclesTrailers = vehiclesTrailers;\n    },\n    async updateCompany() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoVehiclesAndTrailers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"AccountInfoVehiclesAndTrailers.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Vehicle(s) & Trailer(s)</h4>\n          <account-info-vehicles-and-trailers-item\n            v-for=\"(item, index) in vehiclesTrailers\"\n            ref=\"vehicleForm\"\n            :key=\"item._uuid\"\n            :index=\"index\"\n            :vehicle=\"item\"\n            :vehicleOrTrailer=\"vehicleOrTrailer\"\n            class=\"mb-5\"\n            @update-hint=\"updateHint\"\n            @remove-form=\"removeForm\"\n          />\n\n          <hr>\n\n          <div class=\"row align-items-center mb-3\">\n            <div class=\"col font-weight-bold\">Add another vehicle or trailer</div>\n         \n          </div>\n          <div class=\"row\">      <div class=\"d-flex align-itens-between col\">\n               <select\n                  v-model=\"vehicleOrTrailer\"\n                  :class=\"{ 'has-error': formErrors.vehicleOrTrailer }\"\n                  class=\"lt-input \"\n                  required\n                 \n                >\n                  <option disabled value=\"\">Vehicle or Trailer</option>\n                  <option\n                    v-for=\"item in type\"\n                    :key=\"item\"\n                    :value=\"item\"\n                  >\n                    {{ item }}\n                  </option>\n                </select>\n              <button type=\"button\" class=\"lt-button px-3\" @click=\"addForm\">+</button>\n            </div></div>\n       \n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Cargo Hauled</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white mob-2\">ELD Provider</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n   minLength\n} from '../validators.js';\nimport uuidv4 from \"uuid/v4\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport {mapState} from \"vuex\"\nexport default {\n  name: \"AccountInfoVehiclesAndTrailers\",\n  components: {\n    AccountInfoVehiclesAndTrailersItem: () =>\n      import(/* webpackChunkName: \"AccountInfoVehiclesAndTrailersItem\" */\n      \"./AccountInfoVehiclesAndTrailersItem.vue\"),\n    modelLogin: ModalLogin\n  },\n\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      vehiclesTrailers: [],\n      loading: false,\n      error: null,\n      vehicleOrTrailer:'',\n      formErrors:[],\n      type:[\n        'Vehicle',\n        'Trailer'\n      ]\n    };\n  },\n mounted(){\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data\n    //  let b = JSON.parse(a.val)\n    console.log(\"ba\",a)\n     this.save = true\n   }\n },\n computed:{\n...mapState([\n    'data'\n  ])\n} ,\n   updated(){\nif(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.loadCompany();\n  },\n  methods: {\n    addForm() {\n      this.vehiclesTrailers.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.vehiclesTrailers.splice(index, 1);\n\n      if (!this.vehiclesTrailers.length) {\n        this.error = \"Please add at least one vehicle / trailer\";\n      }\n      \n    },\n    updateHint(hint) {\n      this.$emit(\"update-hint\", hint);\n    },\n     onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n     validateField(fieldName) {\n      validateField(fieldName, this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.vehicleOrTrailer, this.rules, this.formErrors);\n    },\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    async show() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n       try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n            userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n           if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    \n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { vehiclesTrailers } = data.data;\n\n          if (vehiclesTrailers) {\n            // console.log(\"vehiclesTrailers\", uuidv4());\n            console.log(\"vehiclesTrailers\", vehiclesTrailers);\n            this.vehiclesTrailers = vehiclesTrailers.map(v => ({...v,_uuid: uuidv4()}));\n          }else{\n                        this.addForm();\n\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDataFromForms() {\n      let vehiclesTrailers = [];\n\n      this.$refs.vehicleForm.forEach(formRef => {\n        let formData = formRef.getFormData();\n        vehiclesTrailers.push(formData);\n      });\n\n      this.vehiclesTrailers = vehiclesTrailers;\n    },\n    async updateCompany() {\n      this.setDataFromForms();\n\n      let vehicleForms = this.$refs.vehicleForm;\n      if (!vehicleForms.length) {\n        return;\n      }\n\n      let allFormAreValid = vehicleForms.every(formRef =>\n        formRef.validateForm()\n      );\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"vehiclesTrailers\",\n          val: this.vehiclesTrailers.map(v => {\n            let vehicle = { ...v };\n            delete vehicle._uuid;\n            return vehicle;\n          }),\n          userId:localStorage.getItem(\"userId\"),\n          uuid:localStorage.getItem(\"uuid\")\n        });\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n// .vehicles-and-trailers-form {\n//   // .next-wrapper {\n//   //   display: flex;\n//   //   justify-content: space-between;\n\n//   //   .next-title {\n//   //     font-size: 1.2rem;\n//   //   }\n//   // }\n// }\n</style>\n"]}]}