{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/views/SimpleEstimateWizard.vue?vue&type=template&id=4a93c882&scoped=true&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/views/SimpleEstimateWizard.vue","mtime":1558084536000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"simple-estimate-wizard container\" },\n    [\n      _c(\"h1\", { staticClass: \"h2\" }, [_vm._v(\"Simple Estimate Wizard\")]),\n      !_vm.mainInfo\n        ? _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-8 col-md-6 col-lg-5\" }, [\n              _c(\n                \"form\",\n                {\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.submit($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"lt-input\",\n                        class: {\n                          \"has-error\": _vm.$v.formData.imageIdFront.$error\n                        },\n                        attrs: { for: \"imageIdFront\" }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            Select Image ID Front*\\n          \"\n                        )\n                      ]\n                    ),\n                    _c(\"input\", {\n                      attrs: { id: \"imageIdFront\", type: \"file\", hidden: \"\" },\n                      on: {\n                        change: function($event) {\n                          return _vm.setImage($event, \"imageIdFront\")\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.imageIdFront.$model\n                      ? _c(\"div\", { staticClass: \"text-muted\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.$v.formData.imageIdFront.$model.name) +\n                              \"\\n          \"\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm.$v.formData.imageIdFront.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            File is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"lt-input\",\n                        class: {\n                          \"has-error\": _vm.$v.formData.imageIdBack.$error\n                        },\n                        attrs: { for: \"imageIdBack\" }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            Select Image ID Back*\\n          \"\n                        )\n                      ]\n                    ),\n                    _c(\"input\", {\n                      attrs: { id: \"imageIdBack\", type: \"file\", hidden: \"\" },\n                      on: {\n                        change: function($event) {\n                          return _vm.setImage($event, \"imageIdBack\")\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.imageIdBack.$model\n                      ? _c(\"div\", { staticClass: \"text-muted\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.$v.formData.imageIdBack.$model.name) +\n                              \"\\n          \"\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm.$v.formData.imageIdBack.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            File is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"lt-input\",\n                        class: { \"has-error\": _vm.$v.formData.imageDOT.$error },\n                        attrs: { for: \"imageDOT\" }\n                      },\n                      [_vm._v(\"\\n            Select Image DOT*\\n          \")]\n                    ),\n                    _c(\"input\", {\n                      attrs: { id: \"imageDOT\", type: \"file\", hidden: \"\" },\n                      on: {\n                        change: function($event) {\n                          return _vm.setImage($event, \"imageDOT\")\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.imageDOT.$model\n                      ? _c(\"div\", { staticClass: \"text-muted\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.$v.formData.imageDOT.$model.name) +\n                              \"\\n          \"\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm.$v.formData.imageDOT.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            File is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"lt-input\",\n                        class: {\n                          \"has-error\": _vm.$v.formData.imageRegistration.$error\n                        },\n                        attrs: { for: \"imageRegistration\" }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            Select Image Registration*\\n          \"\n                        )\n                      ]\n                    ),\n                    _c(\"input\", {\n                      attrs: {\n                        id: \"imageRegistration\",\n                        type: \"file\",\n                        hidden: \"\"\n                      },\n                      on: {\n                        change: function($event) {\n                          return _vm.setImage($event, \"imageRegistration\")\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.imageRegistration.$model\n                      ? _c(\"div\", { staticClass: \"text-muted\" }, [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(\n                                _vm.$v.formData.imageRegistration.$model.name\n                              ) +\n                              \"\\n          \"\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm.$v.formData.imageRegistration.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            File is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.phone.$model,\n                          expression: \"$v.formData.phone.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.phone.$error },\n                      attrs: { type: \"tel\", placeholder: \"Phone Number*\" },\n                      domProps: { value: _vm.$v.formData.phone.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.phone,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.phone.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.lazy\",\n                          value: _vm.$v.formData.email.$model,\n                          expression: \"$v.formData.email.$model\",\n                          modifiers: { lazy: true }\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.email.$error },\n                      attrs: { type: \"email\", placeholder: \"Email*\" },\n                      domProps: { value: _vm.$v.formData.email.$model },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(\n                            _vm.$v.formData.email,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.email.$error &&\n                    !_vm.$v.formData.email.required\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e(),\n                    _vm.$v.formData.email.$error && !_vm.$v.formData.email.email\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Invalid email\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.garagingZip.$model,\n                          expression: \"$v.formData.garagingZip.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.garagingZip.$error\n                      },\n                      attrs: { type: \"text\", placeholder: \"Garaging Zip*\" },\n                      domProps: { value: _vm.$v.formData.garagingZip.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.garagingZip,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.garagingZip.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.cargoType.$model,\n                          expression: \"$v.formData.cargoType.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.cargoType.$error },\n                      attrs: { type: \"text\", placeholder: \"Cargo Type*\" },\n                      domProps: { value: _vm.$v.formData.cargoType.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.cargoType,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.cargoType.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerFirstName.$model,\n                          expression: \"$v.formData.ownerFirstName.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.ownerFirstName.$error\n                      },\n                      attrs: { type: \"text\", placeholder: \"Owner First Name*\" },\n                      domProps: {\n                        value: _vm.$v.formData.ownerFirstName.$model\n                      },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerFirstName,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerFirstName.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerLastName.$model,\n                          expression: \"$v.formData.ownerLastName.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.ownerLastName.$error\n                      },\n                      attrs: { type: \"text\", placeholder: \"Owner Last Name*\" },\n                      domProps: { value: _vm.$v.formData.ownerLastName.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerLastName,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerLastName.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerCountry.$model,\n                          expression: \"$v.formData.ownerCountry.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.ownerCountry.$error\n                      },\n                      attrs: { type: \"text\", placeholder: \"Owner Address*\" },\n                      domProps: { value: _vm.$v.formData.ownerCountry.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerCountry,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerCountry.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerState.$model,\n                          expression: \"$v.formData.ownerState.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.ownerState.$error },\n                      attrs: { type: \"text\", placeholder: \"Owner State*\" },\n                      domProps: { value: _vm.$v.formData.ownerState.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerState,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerState.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerCity.$model,\n                          expression: \"$v.formData.ownerCity.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.ownerCity.$error },\n                      attrs: { type: \"text\", placeholder: \"Owner City*\" },\n                      domProps: { value: _vm.$v.formData.ownerCity.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerCity,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerCity.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerStreet.$model,\n                          expression: \"$v.formData.ownerStreet.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.ownerStreet.$error\n                      },\n                      attrs: { type: \"text\", placeholder: \"Owner Street*\" },\n                      domProps: { value: _vm.$v.formData.ownerStreet.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerStreet,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerStreet.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerZip.$model,\n                          expression: \"$v.formData.ownerZip.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.ownerZip.$error },\n                      attrs: { type: \"text\", placeholder: \"Owner ZIP*\" },\n                      domProps: { value: _vm.$v.formData.ownerZip.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerZip,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerZip.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.ownerDOB.$model,\n                          expression: \"$v.formData.ownerDOB.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.$v.formData.ownerDOB.$error },\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Owner Date of Birthday*\"\n                      },\n                      domProps: { value: _vm.$v.formData.ownerDOB.$model },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.ownerDOB,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.ownerDOB.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.$v.formData.yearBusinessStarted.$model,\n                          expression: \"$v.formData.yearBusinessStarted.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\": _vm.$v.formData.yearBusinessStarted.$error\n                      },\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Year Business Started*\"\n                      },\n                      domProps: {\n                        value: _vm.$v.formData.yearBusinessStarted.$model\n                      },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.yearBusinessStarted,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.yearBusinessStarted.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value:\n                            _vm.$v.formData.electronicDeviceProvider.$model,\n                          expression:\n                            \"$v.formData.electronicDeviceProvider.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\":\n                          _vm.$v.formData.electronicDeviceProvider.$error\n                      },\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Electronic Device Provider*\"\n                      },\n                      domProps: {\n                        value: _vm.$v.formData.electronicDeviceProvider.$model\n                      },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.electronicDeviceProvider,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.electronicDeviceProvider.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value:\n                            _vm.$v.formData.currentInsuranceProvider.$model,\n                          expression:\n                            \"$v.formData.currentInsuranceProvider.$model\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: {\n                        \"has-error\":\n                          _vm.$v.formData.currentInsuranceProvider.$error\n                      },\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Current Insurance Provider*\"\n                      },\n                      domProps: {\n                        value: _vm.$v.formData.currentInsuranceProvider.$model\n                      },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.$v.formData.currentInsuranceProvider,\n                            \"$model\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    }),\n                    _vm.$v.formData.currentInsuranceProvider.$error\n                      ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                          _vm._v(\"\\n            Field is required\\n          \")\n                        ])\n                      : _vm._e()\n                  ]),\n                  _vm.error\n                    ? _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"alert alert-danger\",\n                            attrs: { role: \"alert\" }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm.error) +\n                                \"\\n          \"\n                            )\n                          ]\n                        )\n                      ])\n                    : _vm._e(),\n                  _c(\"div\", { staticClass: \"text-center\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"lt-button lt-button-main\",\n                        attrs: { disabled: _vm.loading, type: \"submit\" }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(_vm.loading ? \"Loading...\" : \"Submit\") +\n                            \"\\n          \"\n                        )\n                      ]\n                    )\n                  ])\n                ]\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm.mainInfo\n        ? _c(\"document-preview-main\", { attrs: { document: _vm.mainInfo } })\n        : _vm._e(),\n      _vm.loadingDoc\n        ? _c(\"div\", [_c(\"h3\", [_vm._v(\"Processing...\")])])\n        : _vm._e(),\n      _vm.errorDoc\n        ? _c(\"div\", { staticClass: \"form-group my-2\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"alert alert-danger\", attrs: { role: \"alert\" } },\n              [\n                _c(\"div\", [_vm._v(_vm._s(_vm.errorDoc))]),\n                _c(\"div\", { staticClass: \"text-center\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-light\",\n                      on: { click: _vm.docTryAgain }\n                    },\n                    [_vm._v(\"Try Again\")]\n                  )\n                ])\n              ]\n            )\n          ])\n        : _vm._e(),\n      _vm.dotData\n        ? _c(\"document-preview-dot\", { attrs: { \"dot-data\": _vm.dotData } })\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}