{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoSignComplete.vue?vue&type=style&index=0&id=44e03fb1&lang=scss&scoped=true&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoSignComplete.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#signature {\n  border: solid 2px black;\n  border-radius: 5px;\n  // background-image: linear-gradient(white, white);\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n}\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n",{"version":3,"sources":["AccountInfoSignComplete.vue"],"names":[],"mappingsghBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AccountInfoSignComplete.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-fluid mob-2\" id=\"card-pad\">\n    <form @submit.prevent=\"saveSignature\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Sign and Complete</h4>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4 pt-2\">\n              <div>Date of Sign</div>\n\n              <div v-if=\"formErrors.dateOfSign\" class=\"text-danger\">{{ formErrors.dateOfSign }}</div>\n            </div>\n\n            <div class=\"col-12 col-md-8\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobD\"\n                      :class=\"{ 'has-error': formErrors.dobD }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"DD\"\n                      required\n                      @focus=\"onFocus('dobD')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobD')\"\n                    >\n                    <div v-if=\"formErrors.dobD\" class=\"text-danger\">{{ formErrors.dobD }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobM\"\n                      :class=\"{ 'has-error': formErrors.dobM }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"MM\"\n                      required\n                      @focus=\"onFocus('dobM')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobM')\"\n                    >\n\n                    <div v-if=\"formErrors.dobM\" class=\"text-danger\">{{ formErrors.dobM }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      disabled\n                      v-model=\"formData.dobY\"\n                      :class=\"{ 'has-error': formErrors.dobY }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"YYYY\"\n                      required\n                      @focus=\"onFocus('dobY')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobY')\"\n                    >\n\n                    <div v-if=\"formErrors.dobY\" class=\"text-danger\">{{ formErrors.dobY }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <h5>\n                  <label class=\"d-flex\">Signature</label>\n                </h5>\n                <!-- \n                <input\n                  id=\"imageSign\"\n                  :class=\"{ 'has-error': formErrors.imageSign }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageSign')\"\n                >-->\n                <div v-if=\"preview.imageSign\" class=\"preview\" >\n                  <img :src=\"preview.imageSign\" alt class=\"preview-image mt-3\">\n                  <button @click=\"editSignature\" class=\"lt-button m-2\" type=\"button\">Edit</button>\n                </div>\n                <div class=\"\" v-else>\n                  <VueSignaturePad\n                    width=\"100%\"\n                    saveType=\"image/jpeg\"\n                    height=\"180px\"\n                    ref=\"signaturePad\"\n                    id=\"signature\"\n                    :options=\"{penColor:'#5e98f9',dotSize:'0.5'}\"\n                  />\n                  <div class=\"m-2 d-flex\">\n                    <!-- <button\n                      @click=\"saveSignature\"\n                      class=\"lt-button lt-button-main mr-2\"\n                      type=\"button\"\n                    >Save</button> -->\n                    <button\n                      @click=\"clearSignature\"\n                      class=\"lt-button\"\n                      type=\"button\"\n                    >Clear</button>\n                  </div>\n                </div>\n                <div v-if=\"formErrors.imageSign\" class=\"text-danger\">{{ formErrors.imageSign }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer\"> \n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline  pl-3 pad-0 mob-2\">Upload Document</div>\n                <!-- <div class=\"next-title text-center d-inline  pl-3 pad-0 mob-2\">Underwriting Q<span class=\"hide-que\">ues</span>t<span class=\"hide-que\">ions</span></div> -->\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb color-green\"\n              >\n                {{ loading ? 'Loading...' : 'Complete!' }}\n                <!-- <div class=\"next-title text-center d-inline pl-3 mob-2 text-white\"></div> -->\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { API } from \"../api.js\";\nimport { mapState } from \"vuex\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin,\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState([\"data\"])\n  },\n  data() {\n    return {\n      uuid: \"\",\n      userData: \"\",\n      final_uuid: \"\",\n      showmodel: false,\n      save: true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageSign: \"\"\n      },\n      preview: {\n        imageSign: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required]\n        // sign: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created() {\n    let dobM = \"\",\n      imageSign = \"\",\n      dobD = \"\",\n      dobY = \"\";\n    // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n    // this.formData = {\n    //   ...this.formData,\n    //   //   ...this.driver,\n    //   dobM,\n    //   dobD,\n    //   dobY\n    // };\n    this.loadCompany();\n  },\n  mounted() {\n\n    var currentDate = new Date();\n    var currentDateWithFormat = new Date()\n      .toJSON()\n      .slice(0, 10)\n      .replace(/-/g, \"/\");\n    [\n      this.formData.dobD,\n      this.formData.dobM,\n      this.formData.dobY\n    ] = currentDateWithFormat.split(\"/\");\n\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(res => {\n          let len = this.$store.state.getData.data;\n          \n          \n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"imageSign\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  \n                  url = base64image;\n                  \n                  this.previewFile(url, \"imageSign\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(res => {\n          let len = this.$store.state.getData.data;\n    \n    \n          for (let i = 0; i <= len.length; i++) {\n            if (this.$store.state.getData.data[i].key == \"imageSign\") {\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageSign\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  \n                  url = base64image;\n                  \n                  this.previewFile(url, \"imageSign\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    }\n  },\n  methods: {\n    editSignature() {\n      this.preview.imageSign = false;\n    },\n   clearSignature() {\n      this.$refs.signaturePad.clearSignature();\n    },\n    saveSignature() {\n\n      const { isEmpty, data } = this.$refs.signaturePad.saveSignature();\n    if(isEmpty){\n\n    }\n      var a = this.base64toBlob(data.split(\",\")[1], \"jpeg\");\n      this.formData.imageSign = a;\n      this.updateCompany();\n      \n    },\n    base64toBlob(base64Data, contentType) {\n      contentType = contentType || \"\";\n      var sliceSize = 1024;\n      var byteCharacters = atob(base64Data);\n      var bytesLength = byteCharacters.length;\n      var slicesCount = Math.ceil(bytesLength / sliceSize);\n      var byteArrays = new Array(slicesCount);\n\n      for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        var begin = sliceIndex * sliceSize;\n        var end = Math.min(begin + sliceSize, bytesLength);\n\n        var bytes = new Array(end - begin);\n        for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\n          bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n      }\n      return new Blob(byteArrays, { type: contentType });\n    },\n    getBase64Image(imgUrl, callback) {\n      var img = new Image();\n      img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        callback(dataURL);\n      };\n\n      // set attributes and src\n      img.setAttribute(\"crossOrigin\", \"anonymous\"); //\n      img.src = imgUrl;\n    },\n    async loadCompany() {\n      try {\n        let data = await API.get(\"company/current\");\n        if (data.status === \"OK\") {\n          // let data = data.data;\n          this.uuid = data.data.b;\n        }\n      } catch {}\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n  \n        if (willDelete) {\n          this.show();\n          this.$router.push({ name: \"AccountInfoSignComplete\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n\n    show() {\n      if (!localStorage.getItem(\"token\")) {\n        if (this.showmodel) {\n          this.showmodel = false;\n        } else {\n          this.showmodel = true;\n        }\n      }\n    },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n      \n      //\n      //\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        this.preview[fieldName] = file;\n        // reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    async updateCompany() {\n      // if(this.$refs.signaturePad.isEmpty()){\n      //   \n      // }\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n  \n      } else {\n        this.final_uuid = this.uuid;\n  \n      }\n      \n      // this.saveSignature;\n      try {\n        let data = await API.formData(\"company/upload\", this.formData);\n  \n  \n        if (data.status === \"OK\") {\n          this.goNextForm;\n          \n          this.$router.push({ name: this.nextForm });\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n      \n          });\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n  },\n  computed: {\n    dateOfSign() {\n      let { dobM: m, dobD: d, dobY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#signature {\n  border: solid 2px black;\n  border-radius: 5px;\n  // background-image: linear-gradient(white, white);\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n}\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n</style>\n\n"]}]}