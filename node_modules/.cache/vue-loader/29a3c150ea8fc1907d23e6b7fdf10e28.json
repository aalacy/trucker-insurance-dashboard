{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue?vue&type=template&id=5cc455b8&scoped=true&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue","mtime":1563367747191},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"vehicles-and-trailers-form-item container-fluid mob-2\" },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\n          \"button\",\n          {\n            staticClass: \"lt-button mx-2 mb-3 text-right col\",\n            attrs: { type: \"button\" },\n            on: {\n              click: function($event) {\n                return _vm.removeForm(_vm.index)\n              }\n            }\n          },\n          [_c(\"h3\", [_vm._v(\" - \")])]\n        )\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-8\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.formData.VIN,\n                  expression: \"formData.VIN\"\n                }\n              ],\n              staticClass: \"lt-input\",\n              class: { \"has-error\": _vm.formErrors.VIN },\n              attrs: { type: \"text\", placeholder: \"VIN #*\", required: \"\" },\n              domProps: { value: _vm.formData.VIN },\n              on: {\n                focus: function($event) {\n                  return _vm.onFocus(\"VIN\")\n                },\n                blur: _vm.onBlur,\n                change: function($event) {\n                  return _vm.validateField(\"VIN\")\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.formData, \"VIN\", $event.target.value)\n                }\n              }\n            }),\n            _vm.formErrors.VIN\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.VIN))\n                ])\n              : _vm._e()\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"col-4\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"lt-button lt-button-main get-data\",\n              attrs: { disabled: _vm.loading, type: \"button\" },\n              on: { click: _vm.getVinData }\n            },\n            [\n              _vm._v(\n                \"\\n        \" +\n                  _vm._s(_vm.loading ? \"Loading...\" : \"Get Data\") +\n                  \"\\n      \"\n              )\n            ]\n          )\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-5\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.formData.year,\n                  expression: \"formData.year\"\n                }\n              ],\n              staticClass: \"lt-input\",\n              class: { \"has-error\": _vm.formErrors.year },\n              attrs: { type: \"text\", placeholder: \"Year*\", required: \"\" },\n              domProps: { value: _vm.formData.year },\n              on: {\n                focus: function($event) {\n                  return _vm.onFocus(\"year\")\n                },\n                blur: _vm.onBlur,\n                change: function($event) {\n                  return _vm.validateField(\"year\")\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.formData, \"year\", $event.target.value)\n                }\n              }\n            }),\n            _vm.formErrors.year\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.year))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-5\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.formData.make,\n                  expression: \"formData.make\"\n                }\n              ],\n              staticClass: \"lt-input\",\n              class: { \"has-error\": _vm.formErrors.make },\n              attrs: { type: \"text\", placeholder: \"Make*\", required: \"\" },\n              domProps: { value: _vm.formData.make },\n              on: {\n                focus: function($event) {\n                  return _vm.onFocus(\"make\")\n                },\n                blur: _vm.onBlur,\n                change: function($event) {\n                  return _vm.validateField(\"make\")\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.formData, \"make\", $event.target.value)\n                }\n              }\n            }),\n            _vm.formErrors.make\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.make))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-5\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.formData.model,\n                  expression: \"formData.model\"\n                }\n              ],\n              staticClass: \"lt-input\",\n              class: { \"has-error\": _vm.formErrors.model },\n              attrs: { type: \"text\", placeholder: \"Model*\", required: \"\" },\n              domProps: { value: _vm.formData.model },\n              on: {\n                focus: function($event) {\n                  return _vm.onFocus(\"model\")\n                },\n                blur: _vm.onBlur,\n                change: function($event) {\n                  return _vm.validateField(\"model\")\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.formData, \"model\", $event.target.value)\n                }\n              }\n            }),\n            _vm.formErrors.model\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.model))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row border-top\" }, [\n        _c(\"div\", { staticClass: \"col-10 pt-4\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _vm._m(0),\n            _vm.vehicle\n              ? _c(\"div\", [\n                  _c(\"div\", { staticClass: \"containera-hov d-inline\" }, [\n                    _c(\"label\", { staticClass: \"d-block\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.vehicleImage,\n                            expression: \"formData.vehicleImage\"\n                          }\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          name: \"test\",\n                          value: \"Tractor\",\n                          checked: \"\"\n                        },\n                        domProps: {\n                          checked: _vm._q(_vm.formData.vehicleImage, \"Tractor\")\n                        },\n                        on: {\n                          change: function($event) {\n                            return _vm.$set(\n                              _vm.formData,\n                              \"vehicleImage\",\n                              \"Tractor\"\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"img\", {\n                        staticClass: \"d-inline mt-2 image mr-2\",\n                        staticStyle: { width: \"100px\" },\n                        attrs: {\n                          alt: \"Tractor\",\n                          src: require(\"../assets/images/tracktor.png\")\n                        }\n                      }),\n                      _c(\"p\", [_vm._v(\"Tractor\")])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"containera-hov d-inline\" }, [\n                    _c(\"label\", { staticClass: \"d-block\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.vehicleImage,\n                            expression: \"formData.vehicleImage\"\n                          }\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          name: \"test\",\n                          value: \"Box Truck\",\n                          checked: \"\"\n                        },\n                        domProps: {\n                          checked: _vm._q(\n                            _vm.formData.vehicleImage,\n                            \"Box Truck\"\n                          )\n                        },\n                        on: {\n                          change: function($event) {\n                            return _vm.$set(\n                              _vm.formData,\n                              \"vehicleImage\",\n                              \"Box Truck\"\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"img\", {\n                        staticClass: \"d-inline mt-2 image mr-2\",\n                        staticStyle: { width: \"100px\" },\n                        attrs: { src: require(\"../assets/images/boxtruck.png\") }\n                      }),\n                      _c(\"span\", [_vm._v(\"Box Truck\")])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"containera-hov d-inline\" }, [\n                    _c(\"label\", { staticClass: \"d-block\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.vehicleImage,\n                            expression: \"formData.vehicleImage\"\n                          }\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          name: \"test\",\n                          value: \"Dump Truck\",\n                          checked: \"\"\n                        },\n                        domProps: {\n                          checked: _vm._q(\n                            _vm.formData.vehicleImage,\n                            \"Dump Truck\"\n                          )\n                        },\n                        on: {\n                          change: function($event) {\n                            return _vm.$set(\n                              _vm.formData,\n                              \"vehicleImage\",\n                              \"Dump Truck\"\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"img\", {\n                        staticClass: \"d-inline mt-2 image mr-2\",\n                        staticStyle: { width: \"100px\" },\n                        attrs: {\n                          src: require(\"../assets/images/dumptruck.png\"),\n                          alt: \"\"\n                        }\n                      }),\n                      _c(\"span\", [_vm._v(\"Dump Truck\")])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"containera-hov d-inline\" }, [\n                    _c(\"label\", { staticClass: \"d-block\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.vehicleImage,\n                            expression: \"formData.vehicleImage\"\n                          }\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          name: \"test\",\n                          value: \"Two Trucks\",\n                          checked: \"\"\n                        },\n                        domProps: {\n                          checked: _vm._q(\n                            _vm.formData.vehicleImage,\n                            \"Two Trucks\"\n                          )\n                        },\n                        on: {\n                          change: function($event) {\n                            return _vm.$set(\n                              _vm.formData,\n                              \"vehicleImage\",\n                              \"Two Trucks\"\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"img\", {\n                        staticClass: \"d-inline mt-2 image mr-2\",\n                        staticStyle: { width: \"100px\" },\n                        attrs: {\n                          src: require(\"../assets/images/twotrucks.png\"),\n                          alt: \"\"\n                        }\n                      }),\n                      _c(\"span\", [_vm._v(\"Two Trucks\")])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"containera-hov d-inline\" }, [\n                    _c(\"label\", { staticClass: \"d-block\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.formData.vehicleImage,\n                            expression: \"formData.vehicleImage\"\n                          }\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          name: \"test\",\n                          value: \"Pickup Truck\",\n                          checked: \"\"\n                        },\n                        domProps: {\n                          checked: _vm._q(\n                            _vm.formData.vehicleImage,\n                            \"Pickup Truck\"\n                          )\n                        },\n                        on: {\n                          change: function($event) {\n                            return _vm.$set(\n                              _vm.formData,\n                              \"vehicleImage\",\n                              \"Pickup Truck\"\n                            )\n                          }\n                        }\n                      }),\n                      _c(\"img\", {\n                        staticClass: \"d-inline mt-2 image mr-2\",\n                        staticStyle: { width: \"100px\" },\n                        attrs: {\n                          src: require(\"../assets/images/pickup_truck.png\"),\n                          alt: \"\"\n                        }\n                      }),\n                      _c(\"span\", [_vm._v(\"Pickup Truck\")])\n                    ])\n                  ])\n                ])\n              : _c(\"div\", [\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.formData.vehicleType,\n                          expression: \"formData.vehicleType\"\n                        }\n                      ],\n                      staticClass: \"lt-input\",\n                      class: { \"has-error\": _vm.formErrors.vehicleType },\n                      attrs: { required: \"\" },\n                      on: {\n                        focus: function($event) {\n                          return _vm.onFocus(\"vehicleType\")\n                        },\n                        blur: _vm.onBlur,\n                        change: [\n                          function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.formData,\n                              \"vehicleType\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function($event) {\n                            return _vm.validateField(\"vehicleType\")\n                          }\n                        ]\n                      }\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\", disabled: \"\" } }, [\n                        _vm._v(\"Select Other Vehicle/Trailer type\")\n                      ]),\n                      _vm._l(_vm.vehicleTypes, function(item) {\n                        return _c(\n                          \"option\",\n                          { key: item, domProps: { value: item } },\n                          [_vm._v(_vm._s(item))]\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ]),\n            _vm.formErrors.vehicleType\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.vehicleImage))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-5\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.formData.zipCode,\n                  expression: \"formData.zipCode\"\n                }\n              ],\n              staticClass: \"lt-input\",\n              class: { \"has-error\": _vm.formErrors.zipCode },\n              attrs: {\n                type: \"text\",\n                placeholder: \"Garaging Zip Code*\",\n                required: \"\"\n              },\n              domProps: { value: _vm.formData.zipCode },\n              on: {\n                focus: function($event) {\n                  return _vm.onFocus(\"zipCode\")\n                },\n                blur: _vm.onBlur,\n                change: function($event) {\n                  return _vm.validateField(\"zipCode\")\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.formData, \"zipCode\", $event.target.value)\n                }\n              }\n            }),\n            _vm.formErrors.zipCode\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.zipCode))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row border-top\" }, [\n        _c(\"div\", { staticClass: \"col pt-3\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"div\", [\n              _c(\"label\", { staticClass: \"d-block\" }, [\n                _c(\"span\", { staticClass: \"label\" }, [\n                  _vm._v(\"Radius of Travel (in miles)\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.radiusOfTravel,\n                      expression: \"radiusOfTravel\"\n                    }\n                  ],\n                  staticClass: \"form-control-range lt-input\",\n                  class: { \"has-error\": _vm.formErrors.radiusOfTravel },\n                  attrs: {\n                    type: \"range\",\n                    min: \"0\",\n                    max: _vm.radiuses.length - 1,\n                    step: \"1\",\n                    placeholder: \"Radius of Travel*\",\n                    required: \"\"\n                  },\n                  domProps: { value: _vm.radiusOfTravel },\n                  on: {\n                    focus: function($event) {\n                      return _vm.onFocus(\"radiusOfTravel\")\n                    },\n                    blur: _vm.onBlur,\n                    change: function($event) {\n                      return _vm.validateField(\"radiusOfTravel\")\n                    },\n                    __r: function($event) {\n                      _vm.radiusOfTravel = $event.target.value\n                    }\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"text-center\" }, [\n              _c(\"strong\", [_vm._v(_vm._s(_vm.formData.radiusOfTravel))])\n            ]),\n            _vm.formErrors.radiusOfTravel\n              ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                  _vm._v(_vm._s(_vm.formErrors.radiusOfTravel))\n                ])\n              : _vm._e()\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"row mb-3\" }, [\n        _c(\"div\", { staticClass: \"col font-weight-bold\" }, [\n          _vm._v(\"Are you looking for Comprehesive & Collision Coverage?\")\n        ]),\n        _c(\"div\", { staticClass: \"col text-right\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"lt-button px-3\",\n                  class: { \"lt-button-main\": _vm.formData.coverage },\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.formData.coverage = true\n                    }\n                  }\n                },\n                [_vm._v(\"Yes\")]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"lt-button px-3\",\n                  class: { \"lt-button-main\": !_vm.formData.coverage },\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.formData.coverage = false\n                    }\n                  }\n                },\n                [_vm._v(\"No\")]\n              )\n            ])\n          ])\n        ])\n      ]),\n      _vm.formData.coverage\n        ? [\n            _c(\"div\", { staticClass: \"row mb-3\" }, [\n              _c(\"div\", { staticClass: \"col font-weight-bold\" }, [\n                _vm._v(\"Current value of the vehicle/trailer\")\n              ]),\n              _c(\"div\", { staticClass: \"col text-right\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model.trim\",\n                      value: _vm.currentValueOfTransport,\n                      expression: \"currentValueOfTransport\",\n                      modifiers: { trim: true }\n                    }\n                  ],\n                  staticClass: \"lt-input\",\n                  class: { \"has-error\": _vm.formErrors.currentValue },\n                  attrs: { type: \"text\", placeholder: \"$\", required: \"\" },\n                  domProps: { value: _vm.currentValueOfTransport },\n                  on: {\n                    focus: function($event) {\n                      return _vm.onFocus(\"currentValue\")\n                    },\n                    blur: [\n                      _vm.onBlur,\n                      function($event) {\n                        return _vm.$forceUpdate()\n                      }\n                    ],\n                    change: function($event) {\n                      return _vm.validateField(\"currentValue\")\n                    },\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.currentValueOfTransport = $event.target.value.trim()\n                    }\n                  }\n                }),\n                _vm.formErrors.currentValue\n                  ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                      _vm._v(_vm._s(_vm.formErrors.currentValue))\n                    ])\n                  : _vm._e()\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"row mb-3\" }, [\n              _c(\"div\", { staticClass: \"col font-weight-bold\" }, [\n                _vm._v(\"Deductible\")\n              ]),\n              _c(\"div\", { staticClass: \"col text-right\" }, [\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.formData.deductible,\n                        expression: \"formData.deductible\"\n                      }\n                    ],\n                    staticClass: \"lt-input\",\n                    class: { \"has-error\": _vm.formErrors.deductible },\n                    attrs: { required: \"\" },\n                    on: {\n                      change: [\n                        function($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function(o) {\n                              return o.selected\n                            })\n                            .map(function(o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.formData,\n                            \"deductible\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function($event) {\n                          return _vm.validateField(\"deductible\")\n                        }\n                      ],\n                      focus: function($event) {\n                        return _vm.onFocus(\"deductible\")\n                      },\n                      blur: _vm.onBlur\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { disabled: \"\", value: \"\" } }, [\n                      _vm._v(\"Deductible*\")\n                    ]),\n                    _vm._l(_vm.deductibles, function(item) {\n                      return _c(\n                        \"option\",\n                        { key: item.value, domProps: { value: item.value } },\n                        [_vm._v(_vm._s(item.name))]\n                      )\n                    })\n                  ],\n                  2\n                ),\n                _vm.formErrors.deductible\n                  ? _c(\"div\", { staticClass: \"text-danger\" }, [\n                      _vm._v(_vm._s(_vm.formErrors.deductible))\n                    ])\n                  : _vm._e()\n              ])\n            ])\n          ]\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"border-bottom p-1\" }, [\n      _c(\"span\", [_vm._v(\"Select Vehicle and Trailer type\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}