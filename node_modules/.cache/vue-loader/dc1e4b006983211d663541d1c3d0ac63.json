{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoVehiclesAndTrailersItem.vue","mtime":1563367747191},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport {mapState} from \"vuex\"\n\n\nexport default {\n  name: \"AccountInfoVehiclesAndTrailersItem\",\n  props: {\n    vehicleOrTrailer:{\n      type:String,\n      required:true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    },\n  },\n\n  beforeMount(){\n\n  console.log(\"this.vehicle\",this.vehicleOrTrailer)\n  if(this.vehicleOrTrailer == \"Vehicle\"){\n    this.vehicle = true\n  }\n  else{\n    this.vehicle = false\n  }\n  },\n  mounted(){\nconsole.log(\"this.vehicle\",this.vehicleOrTrailer)\nif(localStorage.getItem(\"token\")){\n    this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data[5]\n     let b = JSON.parse(a.val)[0]\n     console.log(\"bbb\",b)\n    //  for(var i=0;i<b.length;i++){\n    // this.formData.VIN = b[i].VIN;\n    // this.formData.make=b[i].make;\n    // this.formData.year=b[i].year;\n    // this.formData.zipCode=b[i].zipCode;\n    // this.formData.model=b[i].model;\n    // this.formData.vehicleImage=b[i].vehicleImage;\n    // this.formData.vehicleType=b[i].vehicleType;\n    // this.formData.radiusOfTravel=b[i].radiusOfTravel;\n    //  }\n\n    this.formData.VIN = b.VIN;\n    this.formData.make=b.make;\n    this.formData.year=b.year;\n    this.formData.zipCode=b.zipCode;\n    this.formData.model=b.model;\n    this.formData.vehicleImage=b.vehicleImage;\n    this.formData.vehicleType=b.vehicleType;\n    this.formData.radiusOfTravel=b.radiusOfTravel;\n       \n    // console.log(\"ba\",b)\n   \n}\nelse{\n  \n    }  },\n  data() {\n    return {\n      formData: {\n        VIN: \"\",\n        year: \"\",\n        make: \"\",\n        model: \"\",\n        vehicleType: \"\",\n        vehicleImage:\"\",\n        zipCode: \"\",\n        radiusOfTravel: 50,\n        coverage: false,\n        currentValue: \"\",\n        deductible: \"\",\n        \n      },vehicle:false,\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: \"Some hint\"\n      },\n      deductibles: [\n        { name: \"$ 500\", value: \"500\" },\n        { name: \"$ 1000\", value: \"1000\" },\n        { name: \"$ 2500\", value: \"2500\" },\n        { name: \"$ 5000\", value: \"5000\" }\n      ],\n      vehicleTypes: [\n        \"Auto Hauler\",\n        \"Bottom Dump Trailer\",\n        \"Bulk Commodity Trailer\",\n        \"Concession Trailer\",\n        \"Dry Freight Trailer\",\n        \"Dump Body Trailer / Transfer Box\",\n        \"Flatbed Trailer\",\n        \"Gooseneck Trailer\",\n        \"Horse Trailer\",\n        \"Livestock Trailer\",\n        \"Logging Trailer\",\n        \"Low-Boy Trailer\",\n        \"Pole Trailer\",\n        \"Refrigerated Dry Freight Trailer\",\n        \"Tank Trailer\",\n        \"Tilt Trailer\",\n        \"Travel Trailer\",\n        \"Utility Trailer\",\n        \"Bus\",\n        \"Car\",\n        \"Cargo Van\",\n        \"Hearse\",\n        \"Limousine\",\n        \"Mini Van\",\n        \"Motor Home\",\n        \"PASSENGER CAR\",\n        \"Sport Utility Vehicle\",\n        \"Emergency Vehicle\",\n        \"Military Vehicle\"\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, \"Unlimited\"],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, \"\")\n          // replace all commas to dots\n          .replace(/,/g, \".\");\n        this.formData.currentValue = price;\n      },\n      ...mapState([\n    'data'\n  ])\n    },\n\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    \"formData.coverage\"(val) {\n      if (!val) {\n        this.formData.currentValue = \"\";\n        this.formData.deductible = \"\";\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || \"\";\n    }\n  },\nupdated(){\nconsole.log(\"oo\",this.formData.vehicleImage)\n},\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        console.log(\"VIN EMPTY\")\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get(\"company/vin\", {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n        \n     console.log(\"data vin\",data.data)\n     this.formData.year = data.data.year;\n     this.formData.make = data.data.make;\n     this.formData.model = data.data.model;\n    this.formData.vehicleType = data.data.vehicleType;\n    console.log(\"this.formData.vehicleType\",this.formData.vehicleType)\n    // console.log(\"this.v\",this.vehicleTypes)\n    // console.log(\"data.data.vehicleType\",data.data.vehicleType)\n    // var type = this.vehicleTypes.filter(v => v == data.data.vehicleType)\n\n    // console.log(\"type\",type)\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoVehiclesAndTrailersItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountInfoVehiclesAndTrailersItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form-item container-fluid mob-2\">\n    <div class=\"row\">\n       <!-- <div class=\"col\">\n        <h2 class=\"h5\">Trailer #{{ index + 1 }}</h2>\n      </div> -->\n\n       <!-- <div class=\"col text-right\">\n        <a class=\"pointer\" @click=\"removeForm(index)\">Remove</a>\n      </div> -->\n         <button type=\"button\" class=\"lt-button mx-2 mb-3 text-right col\" @click=\"removeForm(index)\">\n       <h3> - </h3>\n      </button>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.VIN\"\n            :class=\"{ 'has-error': formErrors.VIN }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"VIN #*\"\n            required\n            @focus=\"onFocus('VIN')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('VIN')\"\n          >\n\n          <div v-if=\"formErrors.VIN\" class=\"text-danger\">{{ formErrors.VIN }}</div>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <button\n          :disabled=\"loading\"\n          type=\"button\"\n          class=\"lt-button lt-button-main get-data\"\n          @click=\"getVinData\"\n        >\n          {{ loading ? 'Loading...' : 'Get Data' }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.year\"\n            :class=\"{ 'has-error': formErrors.year }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Year*\"\n            required\n            @focus=\"onFocus('year')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('year')\"\n          >\n            <!-- <option value disabled>year</option>\n            <option>2004</option>\n            <option>2005</option>\n          </select> -->\n\n          <div v-if=\"formErrors.year\" class=\"text-danger\">{{ formErrors.year }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.make\"\n            :class=\"{ 'has-error': formErrors.make }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Make*\"\n            required\n            @focus=\"onFocus('make')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('make')\"\n          >\n            <!-- <option value disabled>Make</option>\n            <option>2004</option>\n            <option>2005</option> -->\n          \n\n          <div v-if=\"formErrors.make\" class=\"text-danger\">{{ formErrors.make }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.model\"\n            :class=\"{ 'has-error': formErrors.model }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Model*\"\n            required\n            @focus=\"onFocus('model')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('model')\" >\n            <!-- <option value disabled>Model</option> -->\n        \n          <div v-if=\"formErrors.model\" class=\"text-danger\">{{ formErrors.model }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col-10 pt-4\">\n        <div class=\"form-group\">\n          <div class=\"border-bottom p-1\">\n            <span>Select Vehicle and Trailer type</span>\n          </div>\n          <div v-if=\"vehicle\">\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Tractor\" checked v-model=\"formData.vehicleImage\">\n              <img\n                alt=\"Tractor\"\n                src=\"../assets/images/tracktor.png\"     \n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              \n              <p>Tractor</p>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Box Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/boxtruck.png\"\n                \n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Box Truck</span>\n            </label>\n          </div>\n\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Dump Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/dumptruck.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Dump Truck</span>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Two Trucks\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/twotrucks.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Two Trucks</span>\n            </label>\n          </div>\n          <div class=\"containera-hov d-inline\">\n            <label class=\"d-block\">\n              <input type=\"radio\" name=\"test\" value=\"Pickup Truck\" checked v-model=\"formData.vehicleImage\">\n              <img\n                src=\"../assets/images/pickup_truck.png\"\n                alt\n                style=\"width:100px;\"\n                class=\"d-inline mt-2 image mr-2\"\n              >\n              <span>Pickup Truck</span>\n            </label>\n          </div>\n          </div>\n          <div v-else> \n          <select\n            v-model=\"formData.vehicleType\"\n            class=\"lt-input\"\n            required\n            :class=\"{ 'has-error': formErrors.vehicleType }\"\n            @focus=\"onFocus('vehicleType')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('vehicleType')\"\n          >\n            <option value disabled>Select Other Vehicle/Trailer type</option>\n            <option v-for=\"item in vehicleTypes\" :key=\"item\" :value=\"item\">{{ item }}</option>\n          </select>\n        </div>\n          <div v-if=\"formErrors.vehicleType\" class=\"text-danger\">{{ formErrors.vehicleImage }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.zipCode\"\n            :class=\"{ 'has-error': formErrors.zipCode }\"\n            type=\"text\"\n             \n            class=\"lt-input\"\n            placeholder=\"Garaging Zip Code*\"\n            required\n            @focus=\"onFocus('zipCode')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('zipCode')\"\n          >\n\n          <div v-if=\"formErrors.zipCode\" class=\"text-danger\">{{ formErrors.zipCode }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col pt-3\">\n        <div class=\"form-group\">\n          <div>\n            <label class=\"d-block\">\n              <span class=\"label\">Radius of Travel (in miles)</span>\n\n              <input\n                v-model=\"radiusOfTravel\"\n                :class=\"{ 'has-error': formErrors.radiusOfTravel }\"\n                type=\"range\"\n                min=\"0\"\n                :max=\"radiuses.length - 1\"\n                step=\"1\"\n                class=\"form-control-range lt-input\"\n                placeholder=\"Radius of Travel*\"\n                required\n                @focus=\"onFocus('radiusOfTravel')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('radiusOfTravel')\"\n              >\n            </label>\n          </div>\n\n          <div class=\"text-center\">\n            <strong>{{ formData.radiusOfTravel }}</strong>\n          </div>\n\n          <div v-if=\"formErrors.radiusOfTravel\" class=\"text-danger\">{{ formErrors.radiusOfTravel }}</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col font-weight-bold\">Are you looking for Comprehesive & Collision Coverage?</div>\n\n      <div class=\"col text-right\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': formData.coverage }\"\n              @click=\"formData.coverage = true\"\n            >Yes</button>\n          </div>\n\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': !formData.coverage }\"\n              @click=\"formData.coverage = false\"\n            >No</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template v-if=\"formData.coverage\">\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">Current value of the vehicle/trailer</div>\n\n        <div class=\"col text-right\">\n          <input\n            v-model.trim=\"currentValueOfTransport\"\n            :class=\"{ 'has-error': formErrors.currentValue }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"$\"\n            required\n            @focus=\"onFocus('currentValue')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('currentValue')\"\n          >\n\n          <div v-if=\"formErrors.currentValue\" class=\"text-danger\">{{ formErrors.currentValue }}</div>\n        </div>\n      </div>\n\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">Deductible</div>\n\n        <div class=\"col text-right\">\n          <select\n            v-model=\"formData.deductible\"\n            :class=\"{ 'has-error': formErrors.deductible }\"\n            class=\"lt-input\"\n            required\n            @change=\"validateField('deductible')\"\n            @focus=\"onFocus('deductible')\"\n            @blur=\"onBlur\"\n          >\n            <option disabled value>Deductible*</option>\n            <option\n              v-for=\"item in deductibles\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n            >{{ item.name }}</option>\n          </select>\n\n          <div v-if=\"formErrors.deductible\" class=\"text-danger\">{{ formErrors.deductible }}</div>\n        </div>\n        \n      </div>\n    </template>\n    \n    \n  </div>\n  \n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport {mapState} from \"vuex\"\n\n\nexport default {\n  name: \"AccountInfoVehiclesAndTrailersItem\",\n  props: {\n    vehicleOrTrailer:{\n      type:String,\n      required:true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    },\n  },\n\n  beforeMount(){\n\n  console.log(\"this.vehicle\",this.vehicleOrTrailer)\n  if(this.vehicleOrTrailer == \"Vehicle\"){\n    this.vehicle = true\n  }\n  else{\n    this.vehicle = false\n  }\n  },\n  mounted(){\nconsole.log(\"this.vehicle\",this.vehicleOrTrailer)\nif(localStorage.getItem(\"token\")){\n    this.$store.dispatch('loadData',localStorage.getItem(\"uuid\"))\n     let a = this.$store.state.getData.data[5]\n     let b = JSON.parse(a.val)[0]\n     console.log(\"bbb\",b)\n    //  for(var i=0;i<b.length;i++){\n    // this.formData.VIN = b[i].VIN;\n    // this.formData.make=b[i].make;\n    // this.formData.year=b[i].year;\n    // this.formData.zipCode=b[i].zipCode;\n    // this.formData.model=b[i].model;\n    // this.formData.vehicleImage=b[i].vehicleImage;\n    // this.formData.vehicleType=b[i].vehicleType;\n    // this.formData.radiusOfTravel=b[i].radiusOfTravel;\n    //  }\n\n    this.formData.VIN = b.VIN;\n    this.formData.make=b.make;\n    this.formData.year=b.year;\n    this.formData.zipCode=b.zipCode;\n    this.formData.model=b.model;\n    this.formData.vehicleImage=b.vehicleImage;\n    this.formData.vehicleType=b.vehicleType;\n    this.formData.radiusOfTravel=b.radiusOfTravel;\n       \n    // console.log(\"ba\",b)\n   \n}\nelse{\n  \n    }  },\n  data() {\n    return {\n      formData: {\n        VIN: \"\",\n        year: \"\",\n        make: \"\",\n        model: \"\",\n        vehicleType: \"\",\n        vehicleImage:\"\",\n        zipCode: \"\",\n        radiusOfTravel: 50,\n        coverage: false,\n        currentValue: \"\",\n        deductible: \"\",\n        \n      },vehicle:false,\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: \"Some hint\"\n      },\n      deductibles: [\n        { name: \"$ 500\", value: \"500\" },\n        { name: \"$ 1000\", value: \"1000\" },\n        { name: \"$ 2500\", value: \"2500\" },\n        { name: \"$ 5000\", value: \"5000\" }\n      ],\n      vehicleTypes: [\n        \"Auto Hauler\",\n        \"Bottom Dump Trailer\",\n        \"Bulk Commodity Trailer\",\n        \"Concession Trailer\",\n        \"Dry Freight Trailer\",\n        \"Dump Body Trailer / Transfer Box\",\n        \"Flatbed Trailer\",\n        \"Gooseneck Trailer\",\n        \"Horse Trailer\",\n        \"Livestock Trailer\",\n        \"Logging Trailer\",\n        \"Low-Boy Trailer\",\n        \"Pole Trailer\",\n        \"Refrigerated Dry Freight Trailer\",\n        \"Tank Trailer\",\n        \"Tilt Trailer\",\n        \"Travel Trailer\",\n        \"Utility Trailer\",\n        \"Bus\",\n        \"Car\",\n        \"Cargo Van\",\n        \"Hearse\",\n        \"Limousine\",\n        \"Mini Van\",\n        \"Motor Home\",\n        \"PASSENGER CAR\",\n        \"Sport Utility Vehicle\",\n        \"Emergency Vehicle\",\n        \"Military Vehicle\"\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, \"Unlimited\"],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, \"\")\n          // replace all commas to dots\n          .replace(/,/g, \".\");\n        this.formData.currentValue = price;\n      },\n      ...mapState([\n    'data'\n  ])\n    },\n\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    \"formData.coverage\"(val) {\n      if (!val) {\n        this.formData.currentValue = \"\";\n        this.formData.deductible = \"\";\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || \"\";\n    }\n  },\nupdated(){\nconsole.log(\"oo\",this.formData.vehicleImage)\n},\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit(\"remove-form\", index);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        console.log(\"VIN EMPTY\")\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get(\"company/vin\", {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n        \n     console.log(\"data vin\",data.data)\n     this.formData.year = data.data.year;\n     this.formData.make = data.data.make;\n     this.formData.model = data.data.model;\n    this.formData.vehicleType = data.data.vehicleType;\n    console.log(\"this.formData.vehicleType\",this.formData.vehicleType)\n    // console.log(\"this.v\",this.vehicleTypes)\n    // console.log(\"data.data.vehicleType\",data.data.vehicleType)\n    // var type = this.vehicleTypes.filter(v => v == data.data.vehicleType)\n\n    // console.log(\"type\",type)\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.vehicles-and-trailers-form-item {\n  .label {\n    font-size: 1.2rem;\n  }\n\n  .get-data {\n    font-weight: 300;\n    font-size: 1.3rem;\n  }\n  .containera-hov {\n    position: relative;\n    width: 50%;\n  }\n\n  .image {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: auto;\n    transition: 0.5s ease;\n    backface-visibility: hidden;\n  }\n\n  .middle {\n    transition: 0.5s ease;\n    opacity: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    text-align: center;\n    background-color: #5e98f9;\n  }\n\n  .containera-hov:hover .image {\n    opacity: 0.8;\n    cursor: pointer;\n  }\n\n  .containera-hov:hover .middle {\n    opacity: 1;\n  }\n\n  .text {\n    background-color: #4caf50;\n    color: white;\n    font-size: 16px;\n    padding: 16px 32px;\n  }\n  [type=\"radio\"] {\n    position: absolute;\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* IMAGE STYLES */\n  [type=\"radio\"] + img {\n    cursor: pointer;\n  }\n\n  /* CHECKED STYLES */\n  [type=\"radio\"]:checked + img {\n    outline: 2px solid #5e98f9;\n  }\n}\n</style>\n"]}]}