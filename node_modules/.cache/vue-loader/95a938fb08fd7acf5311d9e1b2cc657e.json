{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoCargoGroup.vue?vue&type=style&index=0&id=6c7d43fe&lang=scss&scoped=true&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoCargoGroup.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none {\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      border-radius: 5px;\n      min-height: 50px;\n      font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n        color: #5e98f9;\n      }\n    }\n  }\n  @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n  @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n",{"version":3,"sources":["AccountInfoCargoGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AccountInfoCargoGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"cargo-group-form\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Cargo Group</h4>\n          <div class=\"container\">\n            <div class=\"row cargo-group-page\">\n              <div\n                v-for=\"(item, index) in cargoGroups\"\n                :key=\"index\"\n                class=\"col-3 text-center pointer mb-2 p-1 \"\n                @click=\"selectCargoGroup(item.value)\"\n              :class=\"{ selected: cargoGroupMap[item.value] }\">\n              <div class=\"cargo-group\">\n                <div class=\"p-1\">\n                  <img :src=\"item.src\" alt>\n                </div>\n\n                <div\n                  class=\"font-weight-bold name\"\n                  :class=\"{ selected: cargoGroupMap[item.value] }\"\n                >{{ item.value }}</div>\n              </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"formErrors.cargoGroup\" class=\"text-danger\">{{ formErrors.cargoGroup }}</div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Business Structure</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white\">Cargo Hauled</div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n        <span class=\"save-hover\">Save Changes</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modalLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport { validateField, validateForm, minLength } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\nimport axios from \"axios\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"AccountInfoCargoGroup\",\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n     \n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let j = 0; j <= len.length; j++) {\n            if (this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              let a = this.$store.state.getData.data[j];\n              let b = JSON.parse(a.val).cargoGroup;\n             \n              let c = [];\n              for (var i = 0; i < this.cargoGroups.length; i++) {\n                c.push(this.cargoGroups[i].value);\n              }\n              let filteredKeywords = c.filter(word => b.includes(word));\n             \n              for (var i = 0; i < filteredKeywords.length; i++) {\n                this.selectCargoGroup(filteredKeywords[i]);\n              }\n            }\n          }\n          // let b = JSON.parse(a.val).cargoGroup;\n        });\n      }, 1000);\n    } else {\n     \n      this.save = true;\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let j = 0; j <= len.length; j++) {\n            if (this.$store.state.getData.data[j].key == \"cargoGroup\") {\n              let a = this.$store.state.getData.data[j];\n              let b = JSON.parse(a.val).cargoGroup;\n             \n              let c = [];\n              for (var i = 0; i < this.cargoGroups.length; i++) {\n                c.push(this.cargoGroups[i].value);\n              }\n              let filteredKeywords = c.filter(word => b.includes(word));\n             \n              for (var i = 0; i < filteredKeywords.length; i++) {\n                this.selectCargoGroup(filteredKeywords[i]);\n              }\n            }\n          }\n          // let b = JSON.parse(a.val).cargoGroup;\n        });\n      }, 1000);\n    }\n  },\n  components: {\n    modalLogin: ModalLogin,\n    \n  },\n\n  data() {\n    return {\n      final_uuid:\"\",\n      uuid: \"\",\n      showmodel: false,\n      save: true,\n      userData: \"\",\n      formData: {\n        cargoGroup: []\n      },\n      selectedCargoGroup: [],\n      rules: {\n        cargoGroup: [val => minLength(val, 1, \"Please select Cargo Group\")]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    ...mapState(\"cargo\", [\"cargoGroups\"]),\n    cargoGroupMap() {\n      let map = {};\n      this.formData.cargoGroup.forEach(val => {\n        map[val] = true;\n        //\n      });\n      //\n      return map;\n    },\n    ...mapState([\"data\"])\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    this.loadCompany();\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n\n  methods: {\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n       \n        this.show();\n        if (willDelete) {\n          \n          this.$router.push({ name: \"AccountInfoCargoGroup\" });\n        } else {\n          \n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    selectCargoGroup(cargoGroupValue) {\n      //\n      // this.formData.cargoGroup.push(cargoGroupValue)\n      //\n      if (this.cargoGroupMap[cargoGroupValue]) {\n        this.formData.cargoGroup = this.formData.cargoGroup.filter(\n          val => val !== cargoGroupValue\n        );\n        this.$emit(\"update-hint\", \"\");\n      } else {\n        this.formData.cargoGroup.push(cargoGroupValue);\n        this.$emit(\"update-hint\", this.hints[cargoGroupValue]);\n      }\n\n      this.formErrors = {};\n    },\n    goPrevForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"update-hint\", \"\");\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async show() {\n      let formIsValid = this.validateForm();\n      var temp_uuid;\n      if (!formIsValid) {\n        return;\n      }\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n       \n      } else {\n        temp_uuid = this.uuid;\n       \n      }\n\n      this.loading = true;\n      this.error = null;\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: temp_uuid\n        });\n        if (data.status === \"OK\") {\n          if(!localStorage.getItem(\"token\")){\n            if (this.showmodel) {\n            this.showmodel = false;\n          } else {\n            this.showmodel = true;\n          }\n          }\n          \n        } else if (data.status === \"ERROR\") {\n          // this.showmodel = true;\n          this.error = data.messages[0] || data.data;\n        }\n        // axios\n        //   .post(\n        //     \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n        //       this.uuid +\n        //       \"&user_id=\" +\n        //       localStorage.getItem(\"userId\")\n        //   )\n        //   .then(res => {\n        //    \n        //   });\n      } catch (err) {\n        // this.showmodel = true;\n\n       \n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get(\"company/current\");\n\n        if (data.status === \"OK\") {\n          let { cargoGroup } = data.data;\n          this.uuid = data.data.b;\n          if (cargoGroup) {\n            this.formData = {\n              ...this.formData,\n              ...cargoGroup\n            };\n          }\n        } else if (data.status === \"ERROR\") {\n          // this.$router.replace({ name: 'Home' });\n         \n        }\n      } catch (err) {\n       \n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateCompany() {\n      let formIsValid = this.validateForm();\n      if (!formIsValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n      if (localStorage.getItem(\"token\")) {\n        this.final_uuid = this.userData;\n       \n      } else {\n        this.final_uuid = this.uuid;\n       \n      }\n      try {\n        let data = await API.post(\"company/save\", {\n          key: \"cargoGroup\",\n          val: this.formData,\n          user_id: localStorage.getItem(\"userId\"),\n          uuid: this.final_uuid\n        });\n       \n        if (data.status === \"OK\") {\n          this.goNextForm();\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n             this.final_uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n           \n          });\n      } catch (err) {\n       \n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.cargo-group-form {\n  .cargo-group {\n    .pad-none {\n      padding-left: 0px;\n      padding-right: 0px;\n    }\n    .name {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      border-radius: 5px;\n      min-height: 50px;\n      font-size: 12px;\n      word-break: break-word;\n\n      &.selected {\n        color: #5e98f9;\n      }\n    }\n  }\n  @media screen and (max-width: 639px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 33.333%;\n      max-width: 33.333%;\n    }\n  }\n\n  @media screen and (max-width: 479px) {\n    .cargo-group-page .col-3 {\n      flex: 0 0 50%;\n      max-width: 50%;\n    }\n  }\n\n  // .next-wrapper {\n  //   display: flex;\n  //   justify-content: space-between;\n\n  //   .next-title {\n  //     font-size: 1.2rem;\n  //   }\n  // }\n}\n</style>\n"]}]}