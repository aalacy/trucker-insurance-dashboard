{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoVehiclesAndTrailersItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoVehiclesAndTrailersItem.vue","mtime":1560863923554},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoVehiclesAndTrailersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      formData: {\n        VIN: '',\n        year: '',\n        make: '',\n        model: '',\n        vehicleType: '',\n        zipCode: '',\n        radiusOfTravel: 100,\n        coverage: false,\n        currentValue: '',\n        deductible: ''\n      },\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: 'Some asshint'\n      },\n      deductibles: [\n        { name: '$ 500', value: '500' },\n        { name: '$ 1000', value: '1000' },\n        { name: '$ 2500', value: '2500' },\n        { name: '$ 5000', value: '5000' }\n      ],\n      vehicleTypes: [\n        'Auto Hauler',\n        'Bottom Dump Trailer',\n        'Bulk Commodity Trailer',\n        'Concession Trailer',\n        'Dry Freight Trailer',\n        'Dump Body Trailer / Transfer Box',\n        'Flatbed Trailer',\n        'Gooseneck Trailer',\n        'Horse Trailer',\n        'Livestock Trailer',\n        'Logging Trailer',\n        'Low-Boy Trailer',\n        'Pole Trailer',\n        'Refrigerated Dry Freight Trailer',\n        'Tank Trailer',\n        'Tilt Trailer',\n        'Travel Trailer',\n        'Utility Trailer',\n        'Bus',\n        'Car',\n        'Cargo Van',\n        'Hearse',\n        'Limousine',\n        'Mini Van',\n        'Motor Home',\n        'Passenger Van',\n        'Pickup Truck',\n        'Sport Utility Vehicle',\n        'Truck',\n        'Emergency Vehicle',\n        'Military Vehicle'\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, 'Unlimited'],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, '')\n          // replace all commas to dots\n          .replace(/,/g, '.');\n        this.formData.currentValue = price;\n      }\n    },\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    'formData.coverage'(val) {\n      if (!val) {\n        this.formData.currentValue = '';\n        this.formData.deductible = '';\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || '';\n    }\n  },\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n    onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get('company/vin', {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoVehiclesAndTrailersItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"AccountInfoVehiclesAndTrailersItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vehicles-and-trailers-form-item container-fluid mob-2\">\n    <div class=\"row\">\n      <!-- <div class=\"col\">\n        <h2 class=\"h5\">Trailer #{{ index + 1 }}</h2>\n      </div> -->\n\n      <!-- <div class=\"col text-right\">\n        <a class=\"pointer\" @click=\"removeForm(index)\">Remove</a>\n      </div> -->\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.VIN\"\n            :class=\"{ 'has-error': formErrors.VIN }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"VIN #*\"\n            required\n            @focus=\"onFocus('VIN')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('VIN')\"\n          />\n\n          <div v-if=\"formErrors.VIN\" class=\"text-danger\">\n            {{ formErrors.VIN }}\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class=\"col-4\">\n        <button\n          :disabled=\"loading\"\n          type=\"button\"\n          class=\"lt-button lt-button-main get-data\"\n          @click=\"getVinData\"\n        >\n          {{ loading ? 'Loading...' : 'Get Data' }}\n        </button>\n      </div> -->\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.year\"\n            :class=\"{ 'has-error': formErrors.year }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Year*\"\n            required\n            @focus=\"onFocus('year')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('year')\"\n          > <option value=\"\" disabled> year </option>\n          <option>Year*</option></select>\n\n          <div v-if=\"formErrors.year\" class=\"text-danger\">\n            {{ formErrors.year }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.make\"\n            :class=\"{ 'has-error': formErrors.make }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Make*\"\n            required\n            @focus=\"onFocus('make')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('make')\"\n          ><option value=\"\" disabled> Make </option>\n          <option>Make*</option></select>\n        \n\n          <div v-if=\"formErrors.make\" class=\"text-danger\">\n            {{ formErrors.make }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.model\"\n            :class=\"{ 'has-error': formErrors.model }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Model*\"\n            required\n            @focus=\"onFocus('model')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('model')\"\n          ><option value=\"\" disabled> Model </option>\n          <option>Model</option></select>\n\n          <div v-if=\"formErrors.model\" class=\"text-danger\">\n            {{ formErrors.model }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row  border-top\">\n      <div class=\"col-10 pt-4\">\n        <div class=\"form-group\">\n          <select\n            v-model=\"formData.vehicleType\"\n            class=\"lt-input\"\n            required\n            :class=\"{ 'has-error': formErrors.vehicleType }\"\n            @focus=\"onFocus('vehicleType')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('vehicleType')\"\n          >\n            <option value=\"\" disabled>Select Vehicle/Trailer type</option>\n            <option v-for=\"item in vehicleTypes\" :key=\"item\" :value=\"item\">\n              {{ item }}\n            </option>\n          </select>\n <img src=\"https://picsum.photos/g/100/100\" alt=\"\" style=\"width:100px;\"  class=\"d-inline mt-2  mr-2\"/> \n          <div v-if=\"formErrors.vehicleType\" class=\"text-danger\">\n            {{ formErrors.vehicleType }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <input\n            v-model=\"formData.zipCode\"\n            :class=\"{ 'has-error': formErrors.zipCode }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"Garaging Zip Code*\"\n            required\n            @focus=\"onFocus('zipCode')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('zipCode')\"\n          />\n\n          <div v-if=\"formErrors.zipCode\" class=\"text-danger\">\n            {{ formErrors.zipCode }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row border-top\">\n      <div class=\"col pt-3\">\n        <div class=\"form-group\">\n          <div>\n            <label class=\"d-block\">\n              <span class=\"label\">Radius of Travel (in miles)</span>\n\n              <input\n                v-model=\"radiusOfTravel\"\n                :class=\"{ 'has-error': formErrors.radiusOfTravel }\"\n                type=\"range\"\n                min=\"0\"\n                :max=\"radiuses.length - 1\"\n                step=\"1\"\n                class=\"form-control-range lt-input\"\n                placeholder=\"Radius of Travel*\"\n                required\n                @focus=\"onFocus('radiusOfTravel')\"\n                @blur=\"onBlur\"\n                @change=\"validateField('radiusOfTravel')\"\n              />\n            </label>\n          </div>\n\n          <div class=\"text-center\">\n            <strong>{{ formData.radiusOfTravel }}</strong>\n          </div>\n\n          <div v-if=\"formErrors.radiusOfTravel\" class=\"text-danger\">\n            {{ formErrors.radiusOfTravel }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col font-weight-bold\">\n        Are you looking for Comprehesive & Collision Coverage?\n      </div>\n\n      <div class=\"col text-right\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': formData.coverage }\"\n              @click=\"formData.coverage = true\"\n            >\n              Yes\n            </button>\n          </div>\n\n          <div class=\"col-6\">\n            <button\n              type=\"button\"\n              class=\"lt-button px-3\"\n              :class=\"{ 'lt-button-main': !formData.coverage }\"\n              @click=\"formData.coverage = false\"\n            >\n              No\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <template v-if=\"formData.coverage\">\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">\n          Current value of the vehicle/trailer\n        </div>\n\n        <div class=\"col text-right\">\n          <input\n            v-model.trim=\"currentValueOfTransport\"\n            :class=\"{ 'has-error': formErrors.currentValue }\"\n            type=\"text\"\n            class=\"lt-input\"\n            placeholder=\"$\"\n            required\n            @focus=\"onFocus('currentValue')\"\n            @blur=\"onBlur\"\n            @change=\"validateField('currentValue')\"\n          />\n\n          <div v-if=\"formErrors.currentValue\" class=\"text-danger\">\n            {{ formErrors.currentValue }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mb-3\">\n        <div class=\"col font-weight-bold\">\n          Deductible\n        </div>\n\n        <div class=\"col text-right\">\n          <select\n            v-model=\"formData.deductible\"\n            :class=\"{ 'has-error': formErrors.deductible }\"\n            class=\"lt-input\"\n            required\n            @change=\"validateField('deductible')\"\n            @focus=\"onFocus('deductible')\"\n            @blur=\"onBlur\"\n          >\n            <option disabled value=\"\">Deductible*</option>\n            <option\n              v-for=\"item in deductibles\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n            >\n              {{ item.name }}\n            </option>\n          </select>\n\n          <div v-if=\"formErrors.deductible\" class=\"text-danger\">\n            {{ formErrors.deductible }}\n          </div>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport {\n  validateField,\n  validateForm,\n  required,\n  requiredWith\n} from '../validators.js';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoVehiclesAndTrailersItem',\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    vehicle: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      formData: {\n        VIN: '',\n        year: '',\n        make: '',\n        model: '',\n        vehicleType: '',\n        zipCode: '',\n        radiusOfTravel: 100,\n        coverage: false,\n        currentValue: '',\n        deductible: ''\n      },\n      rules: {\n        VIN: [required],\n        year: [required],\n        make: [required],\n        model: [required],\n        vehicleType: [required],\n        zipCode: [required],\n        currentValue: [val => requiredWith(val, this.formData.coverage)],\n        deductible: [val => requiredWith(val, this.formData.coverage)]\n      },\n      formErrors: {},\n      hints: {\n        VIN: 'Some asshint'\n      },\n      deductibles: [\n        { name: '$ 500', value: '500' },\n        { name: '$ 1000', value: '1000' },\n        { name: '$ 2500', value: '2500' },\n        { name: '$ 5000', value: '5000' }\n      ],\n      vehicleTypes: [\n        'Auto Hauler',\n        'Bottom Dump Trailer',\n        'Bulk Commodity Trailer',\n        'Concession Trailer',\n        'Dry Freight Trailer',\n        'Dump Body Trailer / Transfer Box',\n        'Flatbed Trailer',\n        'Gooseneck Trailer',\n        'Horse Trailer',\n        'Livestock Trailer',\n        'Logging Trailer',\n        'Low-Boy Trailer',\n        'Pole Trailer',\n        'Refrigerated Dry Freight Trailer',\n        'Tank Trailer',\n        'Tilt Trailer',\n        'Travel Trailer',\n        'Utility Trailer',\n        'Bus',\n        'Car',\n        'Cargo Van',\n        'Hearse',\n        'Limousine',\n        'Mini Van',\n        'Motor Home',\n        'Passenger Van',\n        'Pickup Truck',\n        'Sport Utility Vehicle',\n        'Truck',\n        'Emergency Vehicle',\n        'Military Vehicle'\n      ],\n      radiuses: [0, 100, 200, 300, 500, 1000, 'Unlimited'],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentValueOfTransport: {\n      get() {\n        return `$ ${this.formData.currentValue}`;\n      },\n      set(val) {\n        let price = val\n          // replace dollars and spaces to empty string\n          .replace(/[$\\s]/g, '')\n          // replace all commas to dots\n          .replace(/,/g, '.');\n        this.formData.currentValue = price;\n      }\n    },\n    radiusOfTravel: {\n      get() {\n        let index = this.radiuses.findIndex(\n          radius => radius == this.formData.radiusOfTravel\n        );\n\n        return index > -1 ? index : 1;\n      },\n      set(index) {\n        this.formData.radiusOfTravel = this.radiuses[index];\n      }\n    }\n  },\n  watch: {\n    'formData.coverage'(val) {\n      if (!val) {\n        this.formData.currentValue = '';\n        this.formData.deductible = '';\n      }\n    }\n  },\n  created() {\n    this.formData = {\n      ...this.formData,\n      ...this.vehicle\n    };\n\n    if (!this.formData.VIN) {\n      this.formData.VIN = process.env.VUE_APP_TEST_VIN || '';\n    }\n  },\n  methods: {\n    getFormData() {\n      return this.formData;\n    },\n    removeForm(index) {\n      this.$emit('remove-form', index);\n    },\n    onFocus(fieldName) {\n      this.$emit('update-hint', this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit('update-hint', '');\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    },\n    async getVinData() {\n      if (!this.formData.VIN) {\n        return;\n      }\n\n      this.loading = true;\n\n      try {\n        let data = await API.get('company/vin', {\n          vin: this.formData.VIN\n        });\n\n        this.formData = {\n          ...this.formData,\n          ...data.data\n        };\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n.vehicles-and-trailers-form-item {\n  .label {\n    font-size: 1.2rem;\n  }\n\n  .get-data {\n    font-weight: 300;\n    font-size: 1.3rem;\n  }\n}\n</style>\n"]}]}