{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoUploadDocuments.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/components/AccountInfoUploadDocuments.vue","mtime":1571770663139},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#input-width .lt-input {\n  font-size: 12px;\n  text-align: center;\n}\n",{"version":3,"sources":["AccountInfoUploadDocuments.vue"],"names":[],"mappingsqlBA;AACA;AACA;AACA","file":"AccountInfoUploadDocuments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"upload-documents container py-2\" id=\"input-width\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h3 class=\"title\">Upload documents</h3>\n\n        <p>\n          Please upload the following documents: drivers license, registration,\n          and picture of the side of your vehicle to make the process go\n          faster.\n          <br>Donâ€™t have these documents? No worries, just press skip.\n        </p>\n\n        <form @submit.prevent=\"uploadDocuments\">\n          <div class=\"row\">\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  for=\"imageIdFront\"\n                  class=\"lt-input\"\n                >Select Image ID Front</label>\n\n                <input\n                  id=\"imageIdFront\"\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  type=\"file\"\n                  accept=\"image/*;capture=camera\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdFront')\"\n                >\n\n                <div\n                  v-if=\"formErrors.imageIdFront\"\n                  class=\"text-danger\"\n                >{{ formErrors.imageIdFront }}</div>\n\n                <div v-if=\"preview.imageIdFront\" class=\"preview\">\n                  \n                  <img :src=\"preview.imageIdFront\" alt=\"image front\" class=\"preview-image\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdBack }\"\n                  for=\"imageIdBack\"\n                  class=\"lt-input\"\n                >Select Image ID Back</label>\n\n                <input\n                  id=\"imageIdBack\"\n                  :class=\"{ 'has-error': formErrors.imageIdBack }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  accept=\"image/*;capture=camera\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdBack')\"\n                >\n\n                <div v-if=\"formErrors.imageIdBack\" class=\"text-danger\">{{ formErrors.imageIdBack }}</div>\n\n                <div v-if=\"preview.imageIdBack\" class=\"preview\">\n                  <img :src=\"preview.imageIdBack\" alt class=\"preview-image\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageDOT }\"\n                  for=\"imageDOT\"\n                  class=\"lt-input\"\n                >Select Image DOT</label>\n\n                <input\n                  id=\"imageDOT\"\n                  :class=\"{ 'has-error': formErrors.imageDOT }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  accept=\"image/*;capture=camera\"\n                  hidden\n                  @change=\"setImage($event, 'imageDOT')\"\n                >\n\n                <div v-if=\"formErrors.imageDOT\" class=\"text-danger\">{{ formErrors.imageDOT }}</div>\n\n                <div v-if=\"preview.imageDOT\" class=\"preview\">\n                  <img :src=\"preview.imageDOT\" alt class=\"preview-image\">\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageRegistration }\"\n                  for=\"imageRegistration\"\n                  class=\"lt-input\"\n                >Select Image Registration</label>\n\n                <input\n                  id=\"imageRegistration\"\n                  :class=\"{ 'has-error': formErrors.imageRegistration }\"\n                  type=\"file\"\n                  accept=\"image/*;capture=camera\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageRegistration')\"\n                >\n\n                <div\n                  v-if=\"formErrors.imageRegistration\"\n                  class=\"text-danger\"\n                >{{ formErrors.imageRegistration }}</div>\n\n                <div v-if=\"preview.imageRegistration\" class=\"preview\">\n                  <img :src=\"preview.imageRegistration\" alt class=\"preview-image\">\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n          <div class=\"d-flex row  justify-content-center\">\n          <div class=\"text-right m-1\">\n            <button\n              :disabled=\"loading\"\n              type=\"submit\"\n              class=\"lt-button btn-md lt-button-main\"\n            >Upload</button>\n          </div>\n          <div class=\"text-right m-1\">\n            <button\n              :disabled=\"loading\"\n              type=\"button\"\n              @click=\"goNextForm\"\n              class=\"lt-button btn-md lt-button-main\"\n            >Skip</button>\n          </div>\n      </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n      <span class=\"save-hover\">Save & Continue</span>\n    </div>\n    <div class=\"d-flex justify-content-center m-4\" @click=\"newQuoteReq\" v-else>\n      <span class=\"save-hover\">Save Changes</span>\n    </div>\n    <div class v-if=\"showmodel\">\n      <modelLogin/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport { API } from \"../api.js\";\nimport axios from \"axios\";\nimport { isMobile } from \"mobile-device-detect\";\nimport ModalLogin from \"./ModalLogin.vue\";\n\n\nexport default {\n  name: \"AccountInfoUploadDocuments\",\n  mobile: \"phone\",\n  props: {\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    modelLogin: ModalLogin,\n  },\n  mounted() {\n    if (localStorage.getItem(\"token\")) {\n      this.save = false;\n      axios\n        .get(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/getuuidbyuserid?user_id=\" +\n            localStorage.getItem(\"userId\")\n        )\n        .then(coins => {\n          this.userData = coins.data.uuid;\n        });\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.userData).then(() => {\n          let len = this.$store.state.getData.data;\n          for (let i = 0; i <= len.length; i++) {\n          \n            if (this.$store.state.getData.data[i].key === \"imageDOT\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageDOT\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                \n                  url = base64image;\n                \n                  this.previewFile(url, \"imageDOT\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageRegistration\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageRegistration\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageRegistration\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageIdFront\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageIdFront\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageIdFront\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageIdBack\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageIdBack\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageIdBack\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    } else {\n      this.save = true;\n      setTimeout(() => {\n        this.$store.dispatch(\"loadData\", this.uuid).then(() => {\n          // this.fnCall = true;\n          let len = this.$store.state.getData.data;\n          for (let i = 0; i <= len.length; i++) {\n          \n            if (this.$store.state.getData.data[i].key === \"imageDOT\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageDOT\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageDOT\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageRegistration\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageRegistration\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageRegistration\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageIdFront\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageIdFront\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageIdFront\");\n                }\n              );\n            }\n            if (this.$store.state.getData.data[i].key === \"imageIdBack\") {\n              this.fnCall = true;\n              let a = this.$store.state.getData.data[i];\n              let b = JSON.parse(a.val);\n              var url = \"\";\n              this.previewFile(b[0].filename, \"imageIdBack\");\n              this.getBase64Image(\n                \"http://3.13.68.92:3000/company/\" + b[0].filename,\n                base64image => {\n                  //\n                  url = base64image;\n                  //\n                  this.previewFile(url, \"imageIdBack\");\n                }\n              );\n            }\n          }\n        });\n      }, 1000);\n    }\n  \n  },\n  data() {\n    return {\n      uuid: \"\",\n      fnCall:false,\n      final_uuid:\"\",\n      userData:\"\",\n      msg: isMobile\n        ? \"Welcome to Your Vue.js mobile App!\"\n        : \"Welcome to Your Vue.js App\",\n      showmodel: false,\n      save: true,\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      // rules: {},\n      formErrors: {},\n      preview: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    submitBtnText() {\n      if (this.loading) {\n        return \"Loading...\";\n      }\n\n      let {\n        imageIdFront,\n        imageIdBack,\n        imageDOT,\n        imageRegistration\n      } = this.formData;\n      let anyImageSelected =\n        imageIdFront || imageIdBack || imageDOT || imageRegistration;\n      if (anyImageSelected) {\n        return \"Upload\";\n      }\n\n      return \"Skip\";\n    }\n  },\n  updated() {\n    if (localStorage.getItem(\"showModal\") == \"true\") {\n      this.showmodel = true;\n    } else {\n      this.showmodel = false;\n    }\n  },\n  created() {\n    this.$emit(\"update-progress\", this.progress);\n    // this.uploadDocuments()\n    this.loadCompany();\n  },\n  methods: {\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    getBase64Image(imgUrl, callback) {\n      var img = new Image();\n      img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        var dataURL = canvas.toDataURL(\"image/png\");\n        callback(dataURL);\n      };\n\n      // set attributes and src\n      img.setAttribute(\"crossOrigin\", \"anonymous\"); //\n      img.src = imgUrl;\n    },\n    async loadCompany() {\n      try {\n        let data = await API.get(\"company/current\");\n        if (data.status === \"OK\") {\n          // let data = data.data;\n          this.uuid = data.data.b;\n        }\n      } catch {}\n    },\n    newQuoteReq() {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do you want to continue editing?\",\n        icon: \"warning\",\n        buttons: [\"No\", \"Yes\"]\n      }).then(willDelete => {\n      \n        this.show();\n        if (willDelete) {\n          this.$router.push({ name: \"AccountInfoUploadDocuments\" });\n        } else {\n          swal(\n            \"Thank You!\",\n            \"Your changes has been accepted! You will get new Updated Quote\",\n            {\n              icon: \"success\"\n            }\n          );\n        }\n      });\n    },\n    async show() {\n      this.loading = true;\n      this.error = null;\n      var temp_uuid;\n      if (localStorage.getItem(\"token\")) {\n        temp_uuid = this.userData;\n      \n      } else {\n        temp_uuid = this.uuid;\n      \n      }\n      try {\n        let data = await API.formData(\"company/upload\", temp_uuid);\n        if (data.status === \"OK\") {\n          if (!localStorage.getItem(\"token\")) {\n            if (this.showmodel) {\n              this.showmodel = false;\n            } else {\n              this.showmodel = true;\n            }\n          }\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios\n          .post(\n            \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n              this.uuid +\n              \"&user_id=\" +\n              localStorage.getItem(\"userId\")\n          )\n          .then(res => {\n          \n          });\n      } catch (err) {\n        // this.showmodel = true;\n\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        // this.showmodel = true;\n        this.loading = false;\n      }\n    },\n    setImage(event, fieldName) {\n      \n      \n      let { files } = event.target;\n\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n    \n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n\n    previewFile(file, fieldName) {\n      //\n      let reader = new FileReader();\n      //\n      reader.onload = () => {\n        this.preview[fieldName] = reader.result;\n        //\n        \n      };\n  \n      if (file && !this.fnCall) {\n      \n        //\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n\n      if(file && this.fnCall){\n        this.preview[fieldName] = file;\n      } else {\n        this.preview[fieldName] = null;\n      \n      }\n    },\n    \n    async uploadDocuments() {\n      // let formIsValid = this.validateForm();\n      // if (!formIsValid) {\n      //   return;\n      // }\n\n      try {\n        let data = await API.formData(\"company/upload\", this.formData);\n     if(localStorage.getItem('token')){\n        \n          this.final_uuid = this.userData;\n        \n      }else{\n        this.final_uuid = this.uuid;\n      \n      }\n        //\n\n        if (data.status === \"OK\") {\n          this.goNextForm();\n          // this.$router.push({ name: this.nextForm });\n        } else if (data.status === \"ERROR\") {\n          this.error = data.messages[0] || data.data;\n        }\n        axios.post(\n          \"http://3.13.68.92/luckytrucker_admin/api/CompanyController/postUserIdByUuid?uuid=\" +\n           this.final_uuid +\n            \"&user_id=\" +\n            localStorage.getItem(\"userId\")\n        );\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.upload-documents {\n  .preview {\n    // height: 200px;\n    padding-top: 10px;\n    text-align: center;\n\n    .preview-image {\n      max-height: 100%;\n    }\n  }\n}\n</style>\n<style>\n#input-width .lt-input {\n  font-size: 12px;\n  text-align: center;\n}\n</style>\n\n"]}]}