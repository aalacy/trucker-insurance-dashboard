{"remainingRequest":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoOwners.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/src/components/AccountInfoOwners.vue","mtime":1560865184595},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Downloads/LuckyTruck_UI-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport uuidv4 from 'uuid/v4';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoOwners',\n  components: {\n    AccountInfoOwnersItem: () => import('./AccountInfoOwnersItem.vue')\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        driverIsOwner: false,\n        driverOwnerIndex: -1,\n        owners: []\n      },\n      drivers: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    noOwners() {\n      return (\n        this.formData.driverOwnerIndex === -1 && !this.formData.owners.length\n      );\n    }\n  },\n  watch: {\n    'formData.driverIsOwner'(driverIsOwner) {\n      if (!driverIsOwner) {\n        this.formData.driverOwnerIndex = -1;\n      }\n    },\n    noOwners(noOwners) {\n      this.error = noOwners ? 'Please add at least one owner' : null;\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    addForm() {\n      this.formData.owners.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.formData.owners.splice(index, 1);\n    },\n    updateHint(hint) {\n      this.$emit('update-hint', hint);\n    },\n    goPrevForm() {\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('go-to-form', this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { drivers, owners: ownersTab } = data.data;\n\n          if (drivers) {\n            this.drivers = drivers;\n          }\n\n          if (ownersTab) {\n            let { owners } = ownersTab;\n\n            this.formData = {\n              ...this.formData,\n              ...ownersTab,\n              owners: owners.map(o => ({ ...o, _uuid: uuidv4() }))\n            };\n          } else {\n            this.addForm();\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDataFromForms() {\n      let owners = [];\n\n      if (this.$refs.ownerForm) {\n        this.$refs.ownerForm.forEach(formRef => {\n          let formData = formRef.getFormData();\n          owners.push(formData);\n        });\n      }\n\n      this.formData.owners = owners;\n    },\n    async updateCompany() {\n      if (\n        this.formData.driverIsOwner &&\n        this.formData.driverOwnerIndex === -1\n      ) {\n        this.formData.driverIsOwner = false;\n      }\n\n      this.setDataFromForms();\n\n      if (this.noOwners) {\n        return;\n      }\n\n      let allFormAreValid = this.$refs.ownerForm\n        ? this.$refs.ownerForm.every(formRef => formRef.validateForm())\n        : true;\n\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'owners',\n          val: {\n            ...this.formData,\n            owners: this.formData.owners.map(o => {\n              let owner = { ...o };\n              delete owner._uuid;\n              return owner;\n            })\n          }\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["AccountInfoOwners.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"AccountInfoOwners.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"drivers-form container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Owner(s)</h4>\n\n          <div class=\"d-flex\">\n            <div class=\"pr-3\">Are one of the drivers the owner?</div>\n\n            <div class=\"flex-grow-1\">\n              <label>\n                <input v-model=\"formData.driverIsOwner\" type=\"checkbox\" /> Yes\n              </label>\n            </div>\n          </div>\n\n          <div v-if=\"formData.driverIsOwner\" class=\"col-12 col-md-6\">\n            <select v-model=\"formData.driverOwnerIndex\" class=\"lt-input\">\n              <option value=\"\" disabled>\n                Select Driver\n              </option>\n\n              <option\n                v-for=\"(item, index) in drivers\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ item.firstName }} {{ item.lastName }}\n              </option>\n            </select>\n          </div>\n\n          <hr />\n\n          <account-info-owners-item\n            v-for=\"(item, index) in formData.owners\"\n            ref=\"ownerForm\"\n            :key=\"item._uuid\"\n            :index=\"index\"\n            :owner=\"item\"\n            class=\"mb-5\"\n            @update-hint=\"updateHint\"\n            @remove-form=\"removeForm\"\n          />\n\n          <hr />\n\n          <div class=\"row align-items-center mb-3\">\n            <div class=\"col font-weight-bold\">\n              Add another owner\n            </div>\n\n            <div class=\"col-auto text-right\">\n              <button type=\"button\" class=\"lt-button px-3\" @click=\"addForm\">\n                +\n              </button>\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default px-4 btn-block btn-border-radius-lb mob-2\" \n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">\n                  Drivers\n                </div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main px-4 btn-block btn-border-radius-rb mob-2\"\n              >\n                {{ loading ? 'Loading...' : 'Next' }}\n                <div class=\"next-title text-center d-inline pl-3 text-white mob-2\">\n                  Underwriting Questions\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport uuidv4 from 'uuid/v4';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'AccountInfoOwners',\n  components: {\n    AccountInfoOwnersItem: () => import('./AccountInfoOwnersItem.vue')\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        driverIsOwner: false,\n        driverOwnerIndex: -1,\n        owners: []\n      },\n      drivers: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    noOwners() {\n      return (\n        this.formData.driverOwnerIndex === -1 && !this.formData.owners.length\n      );\n    }\n  },\n  watch: {\n    'formData.driverIsOwner'(driverIsOwner) {\n      if (!driverIsOwner) {\n        this.formData.driverOwnerIndex = -1;\n      }\n    },\n    noOwners(noOwners) {\n      this.error = noOwners ? 'Please add at least one owner' : null;\n    }\n  },\n  created() {\n    this.$emit('update-progress', this.progress);\n    this.loadCompany();\n  },\n  methods: {\n    addForm() {\n      this.formData.owners.push({ _uuid: uuidv4() });\n      this.error = null;\n    },\n    removeForm(index) {\n      this.formData.owners.splice(index, 1);\n    },\n    updateHint(hint) {\n      this.$emit('update-hint', hint);\n    },\n    goPrevForm() {\n      this.$emit('go-to-form', this.prevForm);\n    },\n    goNextForm() {\n      this.$emit('go-to-form', this.nextForm);\n    },\n    async loadCompany() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.get('company/current');\n\n        if (data.status === 'OK') {\n          let { drivers, owners: ownersTab } = data.data;\n\n          if (drivers) {\n            this.drivers = drivers;\n          }\n\n          if (ownersTab) {\n            let { owners } = ownersTab;\n\n            this.formData = {\n              ...this.formData,\n              ...ownersTab,\n              owners: owners.map(o => ({ ...o, _uuid: uuidv4() }))\n            };\n          } else {\n            this.addForm();\n          }\n        } else if (data.status === 'ERROR') {\n          this.$router.replace({ name: 'Home' });\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    setDataFromForms() {\n      let owners = [];\n\n      if (this.$refs.ownerForm) {\n        this.$refs.ownerForm.forEach(formRef => {\n          let formData = formRef.getFormData();\n          owners.push(formData);\n        });\n      }\n\n      this.formData.owners = owners;\n    },\n    async updateCompany() {\n      if (\n        this.formData.driverIsOwner &&\n        this.formData.driverOwnerIndex === -1\n      ) {\n        this.formData.driverIsOwner = false;\n      }\n\n      this.setDataFromForms();\n\n      if (this.noOwners) {\n        return;\n      }\n\n      let allFormAreValid = this.$refs.ownerForm\n        ? this.$refs.ownerForm.every(formRef => formRef.validateForm())\n        : true;\n\n      if (!allFormAreValid) {\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      try {\n        let data = await API.post('company/save', {\n          key: 'owners',\n          val: {\n            ...this.formData,\n            owners: this.formData.owners.map(o => {\n              let owner = { ...o };\n              delete owner._uuid;\n              return owner;\n            })\n          }\n        });\n\n        if (data.status === 'OK') {\n          this.goNextForm();\n        } else if (data.status === 'ERROR') {\n          this.error = data.messages[0] || data.data;\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = err.message;\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}