{"remainingRequest":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/raqu/repos/LuckyTruck_UI_Solulab/src/views/SimpleEstimateWizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/src/views/SimpleEstimateWizard.vue","mtime":1571770663143},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/raqu/repos/LuckyTruck_UI_Solulab/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { required, email } from 'vuelidate/lib/validators';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'SimpleEstimateWizard',\n  components: {\n    DocumentPreviewMain: () =>\n      import(/* webpackChunkName: \"DocumentPreviewMain\" */\n      '../components/DocumentPreviewMain.vue'),\n    DocumentPreviewDot: () =>\n      import(/* webpackChunkName: \"DocumentPreviewDot\" */\n      '../components/DocumentPreviewDot.vue')\n  },\n  data() {\n    return {\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null,\n        phone: process.env.VUE_APP_WIZARD_PHONE || null,\n        email: process.env.VUE_APP_WIZARD_EMAIL || null,\n        garagingZip: process.env.VUE_APP_WIZARD_GARAGING_ZIP || null,\n        cargoType: process.env.VUE_APP_WIZARD_CARGO_TYPE || null,\n        ownerFirstName: process.env.VUE_APP_WIZARD_OWNER_FIRST_NAME || null,\n        ownerLastName: process.env.VUE_APP_WIZARD_OWNER_LAST_NAME || null,\n        ownerCountry: process.env.VUE_APP_WIZARD_OWNER_COUNTRY || null,\n        ownerState: process.env.VUE_APP_WIZARD_OWNER_STATE || null,\n        ownerCity: process.env.VUE_APP_WIZARD_OWNER_CITY || null,\n        ownerStreet: process.env.VUE_APP_WIZARD_OWNER_STREET || null,\n        ownerZip: process.env.VUE_APP_WIZARD_OWNER_ZIP || null,\n        ownerDOB: process.env.VUE_APP_WIZARD_OWNER_DOB || null,\n        yearBusinessStarted:\n          process.env.VUE_APP_WIZARD_YEAR_BUSINESS_STARTED || null,\n        electronicDeviceProvider:\n          process.env.VUE_APP_WIZARD_ELECTRONIC_DEVICE_PROVIDER || null,\n        currentInsuranceProvider:\n          process.env.VUE_APP_WIZARD_CURRENT_INSURANCE_PROVIDER || null\n      },\n      mainInfo: null,\n      dotData: null,\n      getDocInfoTimeout: null,\n      resultDOT: null,\n      loading: false,\n      error: null,\n      loadingDoc: false,\n      errorDoc: null\n    };\n  },\n  // vuelidate\n  validations: {\n    formData: {\n      imageIdFront: { required },\n      imageIdBack: { required },\n      imageDOT: { required },\n      imageRegistration: { required },\n      phone: { required },\n      email: { required, email },\n      garagingZip: { required },\n      cargoType: { required },\n      ownerFirstName: { required },\n      ownerLastName: { required },\n      ownerCountry: { required },\n      ownerState: { required },\n      ownerCity: { required },\n      ownerStreet: { required },\n      ownerZip: { required },\n      ownerDOB: { required },\n      yearBusinessStarted: { required },\n      electronicDeviceProvider: { required },\n      currentInsuranceProvider: { required }\n    }\n  },\n  computed: {\n    imgPrefix() {\n      return `${process.env.VUE_APP_BACKEND_URL}/tmp/`;\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.getDocInfoTimeout);\n  },\n  methods: {\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      if (!files.length) {\n        this.$v.formData[fieldName].$model = null;\n        return;\n      }\n\n      this.$v.formData[fieldName].$model = files[0];\n    },\n    docTryAgain() {\n      if (this.resultDOT === false) {\n        this.errorDoc = null;\n        this.mainInfo = null;\n      } else {\n        this.getDocInfo();\n      }\n    },\n    async submit() {\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        console.log('form invalid');\n        return;\n      }\n\n      console.log('submit');\n\n      try {\n        this.error = null;\n        this.loading = true;\n\n        let data = await API.formData('documents/upload', {\n          ...this.formData\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          this.mainInfo = data.data;\n          this.getDocInfo();\n        }\n      } catch (error) {\n        this.error = error.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async getDocInfo() {\n      console.log('getDocInfo');\n      this.loadingDoc = true;\n      this.errorDoc = null;\n\n      try {\n        let data = await API.post('documents/admin/item', {\n          _id: this.mainInfo._id\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          if (\n            data.data.resultDOT === false ||\n            data.data.resultDOT === 'false'\n          ) {\n            this.loadingDoc = false;\n            this.resultDOT = false;\n            this.errorDoc = 'Could not parse DOT document.';\n            return;\n          }\n\n          if (data.data.resultDOTSaferData) {\n            console.log('done');\n            this.loadingDoc = false;\n            this.dotData = data.data.resultDOTSaferData;\n          } else {\n            console.log('no DOT data');\n            this.getDocInfoTimeout = setTimeout(this.getDocInfo, 1000);\n          }\n        }\n      } catch (error) {\n        this.errorDoc = error.message;\n        this.loadingDoc = false;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["SimpleEstimateWizard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"SimpleEstimateWizard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"simple-estimate-wizard container\">\n    <h1 class=\"h2\">Simple Estimate Wizard</h1>\n\n    <div v-if=\"!mainInfo\" class=\"row justify-content-center\">\n      <div class=\"col-12 col-sm-8 col-md-6 col-lg-5\">\n        <form @submit.prevent=\"submit\">\n          <!-- imageIdFront -->\n          <div class=\"form-group\">\n            <label\n              :class=\"{ 'has-error': $v.formData.imageIdFront.$error }\"\n              for=\"imageIdFront\"\n              class=\"lt-input\"\n            >\n              Select Image ID Front*\n            </label>\n\n            <input\n              id=\"imageIdFront\"\n              type=\"file\"\n              hidden\n              @change=\"setImage($event, 'imageIdFront')\"\n            />\n\n            <div v-if=\"$v.formData.imageIdFront.$model\" class=\"text-muted\">\n              {{ $v.formData.imageIdFront.$model.name }}\n            </div>\n\n            <div v-if=\"$v.formData.imageIdFront.$error\" class=\"text-danger\">\n              File is required\n            </div>\n          </div>\n\n          <!-- imageIdBack -->\n          <div class=\"form-group\">\n            <label\n              :class=\"{ 'has-error': $v.formData.imageIdBack.$error }\"\n              for=\"imageIdBack\"\n              class=\"lt-input\"\n            >\n              Select Image ID Back*\n            </label>\n\n            <input\n              id=\"imageIdBack\"\n              type=\"file\"\n              hidden\n              @change=\"setImage($event, 'imageIdBack')\"\n            />\n\n            <div v-if=\"$v.formData.imageIdBack.$model\" class=\"text-muted\">\n              {{ $v.formData.imageIdBack.$model.name }}\n            </div>\n\n            <div v-if=\"$v.formData.imageIdBack.$error\" class=\"text-danger\">\n              File is required\n            </div>\n          </div>\n\n          <!-- imageDOT -->\n          <div class=\"form-group\">\n            <label\n              :class=\"{ 'has-error': $v.formData.imageDOT.$error }\"\n              for=\"imageDOT\"\n              class=\"lt-input\"\n            >\n              Select Image DOT*\n            </label>\n\n            <input\n              id=\"imageDOT\"\n              type=\"file\"\n              hidden\n              @change=\"setImage($event, 'imageDOT')\"\n            />\n\n            <div v-if=\"$v.formData.imageDOT.$model\" class=\"text-muted\">\n              {{ $v.formData.imageDOT.$model.name }}\n            </div>\n\n            <div v-if=\"$v.formData.imageDOT.$error\" class=\"text-danger\">\n              File is required\n            </div>\n          </div>\n\n          <!-- imageRegistration -->\n          <div class=\"form-group\">\n            <label\n              :class=\"{ 'has-error': $v.formData.imageRegistration.$error }\"\n              for=\"imageRegistration\"\n              class=\"lt-input\"\n            >\n              Select Image Registration*\n            </label>\n\n            <input\n              id=\"imageRegistration\"\n              type=\"file\"\n              hidden\n              @change=\"setImage($event, 'imageRegistration')\"\n            />\n\n            <div v-if=\"$v.formData.imageRegistration.$model\" class=\"text-muted\">\n              {{ $v.formData.imageRegistration.$model.name }}\n            </div>\n\n            <div\n              v-if=\"$v.formData.imageRegistration.$error\"\n              class=\"text-danger\"\n            >\n              File is required\n            </div>\n          </div>\n\n          <!-- phone -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.phone.$model\"\n              :class=\"{ 'has-error': $v.formData.phone.$error }\"\n              type=\"tel\"\n              class=\"lt-input\"\n              placeholder=\"Phone Number*\"\n            />\n\n            <div v-if=\"$v.formData.phone.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- email -->\n          <div class=\"form-group\">\n            <input\n              v-model.lazy=\"$v.formData.email.$model\"\n              :class=\"{ 'has-error': $v.formData.email.$error }\"\n              type=\"email\"\n              class=\"lt-input\"\n              placeholder=\"Email*\"\n            />\n\n            <div\n              v-if=\"$v.formData.email.$error && !$v.formData.email.required\"\n              class=\"text-danger\"\n            >\n              Field is required\n            </div>\n\n            <div\n              v-if=\"$v.formData.email.$error && !$v.formData.email.email\"\n              class=\"text-danger\"\n            >\n              Invalid email\n            </div>\n          </div>\n\n          <!-- garagingZip -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.garagingZip.$model\"\n              :class=\"{ 'has-error': $v.formData.garagingZip.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Garaging Zip*\"\n            />\n\n            <div v-if=\"$v.formData.garagingZip.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- cargoType -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.cargoType.$model\"\n              :class=\"{ 'has-error': $v.formData.cargoType.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Cargo Type*\"\n            />\n\n            <div v-if=\"$v.formData.cargoType.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerFirstName -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerFirstName.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerFirstName.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner First Name*\"\n            />\n\n            <div v-if=\"$v.formData.ownerFirstName.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerLastName -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerLastName.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerLastName.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner Last Name*\"\n            />\n\n            <div v-if=\"$v.formData.ownerLastName.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerCountry -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerCountry.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerCountry.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner Address*\"\n            />\n\n            <div v-if=\"$v.formData.ownerCountry.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerState -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerState.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerState.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner State*\"\n            />\n\n            <div v-if=\"$v.formData.ownerState.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerCity -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerCity.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerCity.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner City*\"\n            />\n\n            <div v-if=\"$v.formData.ownerCity.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerStreet -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerStreet.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerStreet.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner Street*\"\n            />\n\n            <div v-if=\"$v.formData.ownerStreet.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerZip -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerZip.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerZip.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner ZIP*\"\n            />\n\n            <div v-if=\"$v.formData.ownerZip.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- ownerDOB -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.ownerDOB.$model\"\n              :class=\"{ 'has-error': $v.formData.ownerDOB.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Owner Date of Birthday*\"\n            />\n\n            <div v-if=\"$v.formData.ownerDOB.$error\" class=\"text-danger\">\n              Field is required\n            </div>\n          </div>\n\n          <!-- yearBusinessStarted -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.yearBusinessStarted.$model\"\n              :class=\"{ 'has-error': $v.formData.yearBusinessStarted.$error }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Year Business Started*\"\n            />\n\n            <div\n              v-if=\"$v.formData.yearBusinessStarted.$error\"\n              class=\"text-danger\"\n            >\n              Field is required\n            </div>\n          </div>\n\n          <!-- electronicDeviceProvider -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.electronicDeviceProvider.$model\"\n              :class=\"{\n                'has-error': $v.formData.electronicDeviceProvider.$error\n              }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Electronic Device Provider*\"\n            />\n\n            <div\n              v-if=\"$v.formData.electronicDeviceProvider.$error\"\n              class=\"text-danger\"\n            >\n              Field is required\n            </div>\n          </div>\n\n          <!-- currentInsuranceProvider -->\n          <div class=\"form-group\">\n            <input\n              v-model=\"$v.formData.currentInsuranceProvider.$model\"\n              :class=\"{\n                'has-error': $v.formData.currentInsuranceProvider.$error\n              }\"\n              type=\"text\"\n              class=\"lt-input\"\n              placeholder=\"Current Insurance Provider*\"\n            />\n\n            <div\n              v-if=\"$v.formData.currentInsuranceProvider.$error\"\n              class=\"text-danger\"\n            >\n              Field is required\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"form-group\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n              {{ error }}\n            </div>\n          </div>\n\n          <!-- submit -->\n          <div class=\"text-center\">\n            <button\n              :disabled=\"loading\"\n              type=\"submit\"\n              class=\"lt-button lt-button-main\"\n            >\n              {{ loading ? 'Loading...' : 'Submit' }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <document-preview-main v-if=\"mainInfo\" :document=\"mainInfo\" />\n\n    <div v-if=\"loadingDoc\">\n      <h3>Processing...</h3>\n    </div>\n\n    <div v-if=\"errorDoc\" class=\"form-group my-2\">\n      <div class=\"alert alert-danger\" role=\"alert\">\n        <div>{{ errorDoc }}</div>\n        <div class=\"text-center\">\n          <button class=\"btn btn-light\" @click=\"docTryAgain\">Try Again</button>\n        </div>\n      </div>\n    </div>\n\n    <document-preview-dot v-if=\"dotData\" :dot-data=\"dotData\" />\n  </div>\n</template>\n\n<script>\nimport { required, email } from 'vuelidate/lib/validators';\nimport { API } from '../api.js';\n\nexport default {\n  name: 'SimpleEstimateWizard',\n  components: {\n    DocumentPreviewMain: () =>\n      import(/* webpackChunkName: \"DocumentPreviewMain\" */\n      '../components/DocumentPreviewMain.vue'),\n    DocumentPreviewDot: () =>\n      import(/* webpackChunkName: \"DocumentPreviewDot\" */\n      '../components/DocumentPreviewDot.vue')\n  },\n  data() {\n    return {\n      formData: {\n        imageIdFront: null,\n        imageIdBack: null,\n        imageDOT: null,\n        imageRegistration: null,\n        phone: process.env.VUE_APP_WIZARD_PHONE || null,\n        email: process.env.VUE_APP_WIZARD_EMAIL || null,\n        garagingZip: process.env.VUE_APP_WIZARD_GARAGING_ZIP || null,\n        cargoType: process.env.VUE_APP_WIZARD_CARGO_TYPE || null,\n        ownerFirstName: process.env.VUE_APP_WIZARD_OWNER_FIRST_NAME || null,\n        ownerLastName: process.env.VUE_APP_WIZARD_OWNER_LAST_NAME || null,\n        ownerCountry: process.env.VUE_APP_WIZARD_OWNER_COUNTRY || null,\n        ownerState: process.env.VUE_APP_WIZARD_OWNER_STATE || null,\n        ownerCity: process.env.VUE_APP_WIZARD_OWNER_CITY || null,\n        ownerStreet: process.env.VUE_APP_WIZARD_OWNER_STREET || null,\n        ownerZip: process.env.VUE_APP_WIZARD_OWNER_ZIP || null,\n        ownerDOB: process.env.VUE_APP_WIZARD_OWNER_DOB || null,\n        yearBusinessStarted:\n          process.env.VUE_APP_WIZARD_YEAR_BUSINESS_STARTED || null,\n        electronicDeviceProvider:\n          process.env.VUE_APP_WIZARD_ELECTRONIC_DEVICE_PROVIDER || null,\n        currentInsuranceProvider:\n          process.env.VUE_APP_WIZARD_CURRENT_INSURANCE_PROVIDER || null\n      },\n      mainInfo: null,\n      dotData: null,\n      getDocInfoTimeout: null,\n      resultDOT: null,\n      loading: false,\n      error: null,\n      loadingDoc: false,\n      errorDoc: null\n    };\n  },\n  // vuelidate\n  validations: {\n    formData: {\n      imageIdFront: { required },\n      imageIdBack: { required },\n      imageDOT: { required },\n      imageRegistration: { required },\n      phone: { required },\n      email: { required, email },\n      garagingZip: { required },\n      cargoType: { required },\n      ownerFirstName: { required },\n      ownerLastName: { required },\n      ownerCountry: { required },\n      ownerState: { required },\n      ownerCity: { required },\n      ownerStreet: { required },\n      ownerZip: { required },\n      ownerDOB: { required },\n      yearBusinessStarted: { required },\n      electronicDeviceProvider: { required },\n      currentInsuranceProvider: { required }\n    }\n  },\n  computed: {\n    imgPrefix() {\n      return `${process.env.VUE_APP_BACKEND_URL}/tmp/`;\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.getDocInfoTimeout);\n  },\n  methods: {\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      if (!files.length) {\n        this.$v.formData[fieldName].$model = null;\n        return;\n      }\n\n      this.$v.formData[fieldName].$model = files[0];\n    },\n    docTryAgain() {\n      if (this.resultDOT === false) {\n        this.errorDoc = null;\n        this.mainInfo = null;\n      } else {\n        this.getDocInfo();\n      }\n    },\n    async submit() {\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        console.log('form invalid');\n        return;\n      }\n\n      console.log('submit');\n\n      try {\n        this.error = null;\n        this.loading = true;\n\n        let data = await API.formData('documents/upload', {\n          ...this.formData\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          this.mainInfo = data.data;\n          this.getDocInfo();\n        }\n      } catch (error) {\n        this.error = error.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async getDocInfo() {\n      console.log('getDocInfo');\n      this.loadingDoc = true;\n      this.errorDoc = null;\n\n      try {\n        let data = await API.post('documents/admin/item', {\n          _id: this.mainInfo._id\n        });\n\n        console.log(data);\n        if (data.status === 'OK') {\n          if (\n            data.data.resultDOT === false ||\n            data.data.resultDOT === 'false'\n          ) {\n            this.loadingDoc = false;\n            this.resultDOT = false;\n            this.errorDoc = 'Could not parse DOT document.';\n            return;\n          }\n\n          if (data.data.resultDOTSaferData) {\n            console.log('done');\n            this.loadingDoc = false;\n            this.dotData = data.data.resultDOTSaferData;\n          } else {\n            console.log('no DOT data');\n            this.getDocInfoTimeout = setTimeout(this.getDocInfo, 1000);\n          }\n        }\n      } catch (error) {\n        this.errorDoc = error.message;\n        this.loadingDoc = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// div {\n//   outline: 1px solid red;\n// }\n\n// test\n</style>\n"]}]}