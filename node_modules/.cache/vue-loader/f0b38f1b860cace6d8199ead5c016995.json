{"remainingRequest":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/luckytruck/src/components/AccountInfoSignComplete.vue?vue&type=style&index=0&id=44e03fb1&lang=scss&scoped=true&","dependencies":[{"path":"/Users/admin/Desktop/luckytruck/src/components/AccountInfoSignComplete.vue","mtime":1563365589846},{"path":"/Users/admin/Desktop/luckytruck/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/luckytruck/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n",{"version":3,"sources":["AccountInfoSignComplete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AccountInfoSignComplete.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-fluid mob-2\">\n    <form @submit.prevent=\"updateCompany\">\n      <div class=\"card mb-5\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title form-sub-title\">Sign and Complete</h4>\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4 pt-2\">\n              <div>Date of Sign</div>\n\n              <div v-if=\"formErrors.dateOfSign\" class=\"text-danger\">{{ formErrors.dateOfSign }}</div>\n            </div>\n\n            <div class=\"col-12 col-md-8\">\n              <div class=\"row\">\n               \n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobD\"\n                      :class=\"{ 'has-error': formErrors.dobD }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"DD\"\n                      required\n                      @focus=\"onFocus('dobD')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobD')\"\n                    >\n                    <div v-if=\"formErrors.dobD\" class=\"text-danger\">{{ formErrors.dobD }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                 <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobM\"\n                      :class=\"{ 'has-error': formErrors.dobM }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"MM\"\n                      required\n                      @focus=\"onFocus('dobM')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobM')\"\n                    >\n\n                    <div v-if=\"formErrors.dobM\" class=\"text-danger\">{{ formErrors.dobM }}</div>\n                  </div>\n                </div>\n                <span class=\"mt-1\">/</span>\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input\n                      v-model=\"formData.dobY\"\n                      :class=\"{ 'has-error': formErrors.dobY }\"\n                      type=\"text\"\n                      class=\"lt-input\"\n                      placeholder=\"YYYY\"\n                      required\n                      @focus=\"onFocus('dobY')\"\n                      @blur=\"onBlur\"\n                      @change=\"validateField('dobY')\"\n                    >\n\n                    <div v-if=\"formErrors.dobY\" class=\"text-danger\">{{ formErrors.dobY }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <label\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  for=\"imageIdFront\"\n                  class=\"lt-input d-flex align-items-center pl-5\"\n                >Signature</label>\n\n                <input\n                  id=\"imageIdFront\"\n                  :class=\"{ 'has-error': formErrors.imageIdFront }\"\n                  type=\"file\"\n                  class=\"lt-input\"\n                  hidden\n                  @change=\"setImage($event, 'imageIdFront')\"\n                >\n\n                <div\n                  v-if=\"formErrors.imageIdFront\"\n                  class=\"text-danger\"\n                >{{ formErrors.imageIdFront }}</div>\n\n                <div v-if=\"preview.imageIdFront\" class=\"preview\">\n                  <img :src=\"preview.imageIdFront\" alt class=\"preview-image mt-3\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"form-buttons next-wrapper\">\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"button\"\n                class=\"lt-button lt-button-default btn-block btn-border-radius-lb\"\n                @click=\"goPrevForm\"\n              >\n                Prev\n                <div class=\"next-title text-center d-inline pl-3 mob-2\">Underwriting Questions</div>\n              </button>\n            </div>\n\n            <div class=\"col-6 p-0\">\n              <button\n                :disabled=\"loading\"\n                type=\"submit\"\n                class=\"lt-button lt-button-main btn-block btn-border-radius-rb color-green\"\n                @click=\"goNextForm\"\n              >\n                {{ loading ? 'Loading...' : 'Complete!' }}\n                <!-- <div class=\"next-title text-center d-inline pl-3 mob-2 text-white\"></div> -->\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center m-4\" @click=\"show\" v-if=\"save\">\n        <span class=\"save-hover\">Save & Continue</span>\n      </div>\n      <div v-if=\"showmodel\">\n        <modelLogin/>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validateField, validateForm, required } from \"../validators.js\";\nimport ModalLogin from \"./ModalLogin.vue\";\n\nexport default {\n  name: \"AccountInfoSignComplete\",\n  components: {\n    modelLogin: ModalLogin\n  },\n  props: {\n    prevForm: {\n      type: String,\n      required: true\n    },\n    nextForm: {\n      type: String,\n      required: true\n    },\n    progress: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showmodel: false,\n      save:true,\n      formData: {\n        dobM: \"\",\n        dobD: \"\",\n        dobY: \"\",\n        imageIdFront: null\n      },\n      preview: {\n        imageIdFront: null\n      },\n      rules: {\n        dobM: [required],\n        dobD: [required],\n        dobY: [required]\n        // sign: [required]\n      },\n      formErrors: {},\n      hints: {},\n      loading: false,\n      error: null\n    };\n  },\n     updated(){\nif(localStorage.getItem(\"showModal\") == \"true\")\n     {\n       this.showmodel = true;\n     }\n     else{\n       this.showmodel = false;\n     }\n },\n  created() {\n    let dobM = \"\",\n      imageSign = \"\",\n      dobD = \"\",\n      dobY = \"\";\n    // this.$emit(\"update-progress\", this.progress);\n    // if (this.driver.dateOfSign) {\n    //       [dobM, dobD, dobY] = this.driver.dateOfSign.split('/');\n    //     }\n    this.formData = {\n      ...this.formData,\n      //   ...this.driver,\n      dobM,\n      dobD,\n      dobY\n    };\n  },\n mounted(){\n   var currentDate = new Date();\n     var currentDateWithFormat = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n    [this.formData.dobD, this.formData.dobM, this.formData.dobY] = currentDateWithFormat.split('/');\n//     var startdate = moment();\n// startdate = startdate.subtract(1, \"days\");\n// startdate = startdate.format(\"DD-MM-YYYY\");\n// var startdate = moment().subtract(1, \"days\").format(\"DD-MM-YYYY\");\n\n    if(localStorage.getItem(\"token\")){\n     this.save = false\n   }else{\n     this.save = true\n   }\n },\n  methods: {\n    show() {\n      if (this.showmodel) {\n        this.showmodel = false;\n      } else {\n        this.showmodel = true;\n      }\n    },\n    setImage(event, fieldName) {\n      let { files } = event.target;\n\n      let image = files[0] || null;\n\n      this.formData[fieldName] = image;\n      this.previewFile(image, fieldName);\n\n      // this.validateField(fieldName);\n    },\n    previewFile(file, fieldName) {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.preview[fieldName] = reader.result;\n      };\n\n      if (file) {\n        reader.readAsDataURL(file);\n      } else {\n        this.preview[fieldName] = null;\n      }\n    },\n    clearFiles() {\n      this.$refs[\"file-input\"].reset();\n    },\n    async updateCompany() {},\n    goPrevForm() {\n      this.$emit(\"go-to-form\", this.prevForm);\n    },\n    goNextForm() {\n      this.$emit(\"go-to-form\", this.nextForm);\n    },\n    onFocus(fieldName) {\n      this.$emit(\"update-hint\", this.hints[fieldName]);\n    },\n    onBlur() {\n      this.$emit(\"update-hint\", \"\");\n    },\n    validateField(fieldName) {\n      validateField(fieldName, this.formData, this.rules, this.formErrors);\n    },\n    validateForm() {\n      this.formErrors = {};\n      return validateForm(this.formData, this.rules, this.formErrors);\n    }\n  },\n  computed: {\n    dateOfSign() {\n      let { dobM: m, dobD: d, dobY: y } = this.formData;\n\n      if (m.length < 2) {\n        m = `0${m}`;\n      }\n\n      if (d.length < 2) {\n        d = `0${d}`;\n      }\n\n      return `${m}/${d}/${y}`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.image-upload > input {\n  display: none;\n}\n\n.preview {\n  height: 200px;\n  text-align: center;\n}\n.preview-image {\n  max-height: 100%;\n}\n\n.color-green {\n  background-color: #73c185;\n  border-color: #73c185;\n}\n</style>\n\n"]}]}